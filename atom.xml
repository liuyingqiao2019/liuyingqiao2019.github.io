<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>唐抉的个人博客</title>
  
  
  <link href="http://tangmenjue.top/atom.xml" rel="self"/>
  
  <link href="http://tangmenjue.top/"/>
  <updated>2023-12-25T02:24:47.000Z</updated>
  <id>http://tangmenjue.top/</id>
  
  <author>
    <name>唐抉</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CSS3动画详解</title>
    <link href="http://tangmenjue.top/2023/12/25/CSS3%E5%8A%A8%E7%94%BB%E8%AF%A6%E8%A7%A3/"/>
    <id>http://tangmenjue.top/2023/12/25/CSS3%E5%8A%A8%E7%94%BB%E8%AF%A6%E8%A7%A3/</id>
    <published>2023-12-25T02:24:47.000Z</published>
    <updated>2023-12-25T02:24:47.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基本概念">基本概念</h1><p>css中有两种形式实现动画效果：过渡动画<code>transition</code>和自定义动画<code>animation</code>。其中，animation动画可以循环多次执行，而过渡动画transition只执行一遍。</p><h1 id="transition">transition</h1><p>若通过用户的交互直接改变css样式，呈现的形式是立即转变。若希望这个变化是有过渡效果的，便需要使用到过渡动画<code>transition</code>。使用transition的例子如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;button @click=&quot;toggleVisibility&quot;&gt;切换元素&lt;/button&gt;</span><br><span class="line">    &lt;transition name=&quot;fade&quot;&gt;</span><br><span class="line">      &lt;div v-if=&quot;isVisible&quot; key=&quot;myElement&quot; class=&quot;fade-element&quot;&gt;</span><br><span class="line">        这是一个会淡入淡出的元素</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/transition&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      isVisible: true,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    toggleVisibility() &#123;</span><br><span class="line">      this.isVisible = !this.isVisible;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">.fade-enter-active, .fade-leave-active &#123;</span><br><span class="line">  transition: opacity 0.5s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.fade-enter, .fade-leave-to &#123;</span><br><span class="line">  opacity: 0;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="transition简写方式">transition简写方式</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transition</span>: 使用过渡效果的属性名称  过渡时间 过渡方式</span><br></pre></td></tr></table></figure><h2 id="常见属性">常见属性</h2><h3 id="transition-property指定使用过渡效果的css属性">transition-property：指定使用过渡效果的css属性</h3><p>默认值为all，即<strong>所有能够被transition支持的属性都会有过渡效果</strong>。在实际使用时最好<strong>指定具体生效的属性</strong>，如只改变字体大小便设置为<code>transition-property：font-size</code>。</p><p><strong>目前transition不支持的过渡项有：<code>z-index</code>、<code>display</code></strong>。</p><h3 id="transition-duration动画过渡时间">transition-duration：动画过渡时间</h3><p>定义动画过渡时间，<strong>默认为0秒</strong></p><h3 id="transition-timing-function动画过渡方式">transition-timing-function：动画过渡方式</h3><p>定义动画的事件函数，控制动画速度，可以配置动画随时间变化的运动速率和轨迹。</p><p>可选值：</p><ul><li>linear：动画的速度从头到尾都是相同的</li><li>ease（缓解）：默认是动画从低速开始，然后加快，在结束前变慢</li><li>ease-in：动画以低速开始</li><li>ease-out：动画以低速结束</li><li>ease-in-out：动画以低速开始和结束</li><li>cubic-bezier(n,n,n,n)：贝塞尔曲线（自定义数组），可到<a href="https://cubic-bezier.com/#.17,.67,.83,.67">网站 cubic-bezier.com</a>进行可视化配置</li></ul><h3 id="transition-delay-动画延迟时间"><strong>transition-delay：</strong> 动画延迟时间</h3><p>设置动画延时时间，单位为秒。</p><p>若想要立即触发动画，只在恢复时延迟过渡，可以在动画触发时重新设置<code>transition-delay：0s</code>。这样动画一旦触发就会应用对应的样式表，动画执行完毕后延时0秒恢复原样式。</p><p>当同时使用多个动画时，可依次定义每个动画的延迟执行时间，依次来区分每一个动画。</p><h3 id="多属性累加">多属性累加</h3><p>需要对每个属性的过渡效果分别设置时，可以使用逗号<code>,</code>来分隔开。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transition-property</span>: width, heitht, color ;</span><br><span class="line">trnasition-duration: <span class="number">1s</span>, <span class="number">1.5s</span>, <span class="number">2s</span> ;</span><br><span class="line"><span class="attribute">transition-timing-function</span>: ease, linear, ease-in-out ;</span><br><span class="line"><span class="attribute">transition-delay</span>: <span class="number">0s</span>, <span class="number">1s</span>, <span class="number">0s</span> ;</span><br></pre></td></tr></table></figure><p>以上代码也可以使用<strong>简写方式</strong>来分隔，如：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transition</span>: width <span class="number">1s</span> ease ,heitht <span class="number">1.5s</span> linear <span class="number">1s</span>, color <span class="number">2s</span> ease-in-out ;</span><br></pre></td></tr></table></figure><h1 id="animation">animation</h1><p>自定义动画通过<code>@keyframes</code>来设置关键帧动画。可以对每一帧动画进行设置动画名称、时长、缓动函数、循环函数等信息。其语法如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@keyframes</span> animationName &#123;</span><br><span class="line">  <span class="number">0%</span> &#123;</span><br><span class="line">    <span class="comment">/* 样式定义 */</span></span><br><span class="line">    <span class="attribute">width</span>:<span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">50px</span>;      </span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">50%</span> &#123;</span><br><span class="line">    <span class="comment">/* 样式定义 */</span></span><br><span class="line">    <span class="attribute">width</span>:<span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">100px</span>;      </span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">100%</span> &#123;</span><br><span class="line">    <span class="comment">/* 样式定义 */</span></span><br><span class="line">    <span class="attribute">width</span>:<span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">50px</span>;      </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 应用动画 */</span></span><br><span class="line"><span class="selector-class">.element</span> &#123;</span><br><span class="line">  <span class="attribute">animation</span>: animationName <span class="number">3s</span> ease-in-out infinite;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中，使用百分比来<code>%</code>指定变化时的状态，<code>0%</code>和<code>100%</code>代表首尾帧，也可分别使用<code>from</code>和<code>to</code>来替代。</p><p><strong>注意</strong>：若自定义<strong>动画没有自定义首尾帧</strong>，首尾帧将会应用<strong>元素原有的样式</strong>。</p><p>例如：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@keyframes</span> animationName &#123;</span><br><span class="line">  <span class="selector-tag">from</span> &#123;</span><br><span class="line">    <span class="comment">/* 样式定义 */</span></span><br><span class="line">    <span class="attribute">width</span>:<span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">50px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">50%</span> &#123;</span><br><span class="line">    <span class="comment">/* 样式定义 */</span></span><br><span class="line">    <span class="attribute">width</span>:<span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">100px</span>;      </span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">to</span> &#123;</span><br><span class="line">    <span class="comment">/* 样式定义 */</span></span><br><span class="line">    <span class="attribute">width</span>:<span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">50px</span>;      </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 将动画应用到元素上 */</span></span><br><span class="line"><span class="selector-class">.element</span> &#123;</span><br><span class="line">  <span class="attribute">animation</span>: animationName <span class="number">3s</span> ease-in-out infinite;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="animation简写方式">animation简写方式</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">animation</span>: 动画持续时间  延迟时间 执行关键帧名称 运动方式 循环次数 结束状态 动画执行顺序</span><br></pre></td></tr></table></figure><p><strong>最简方式：</strong>（其中执行时间和延迟时间顺序不可调整）</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">animation</span>: 动画执行时间 执行关键帧名称</span><br></pre></td></tr></table></figure><h2 id="常见属性-1">常见属性</h2><h3 id="animation-name指定使用的-keyframes-名称">animation-name:指定使用的 <code>@keyframes</code> 名称</h3><p>若元素想要使用对应名称的动画，则需要配置animation-name。</p><h3 id="animation-duration-动画持续时间"><strong>animation-duration：</strong> 动画持续时间</h3><p>定义动画持续时间，<strong>默认为0秒</strong></p><h3 id="animation-iteration-count-动画循环次数"><strong>animation-iteration-count：</strong> 动画循环次数</h3><p>定义动画迭代次数/执行次数，<strong>默认为1次</strong></p><h3 id="animation-timing-function-动画运动方式"><strong>animation-timing-function：</strong> 动画运动方式</h3><p>定义动画的缓动函数，控制动画速度，可以配置动画随时间变化的运动速率和轨迹。</p><p>可选值：</p><ul><li>linear：动画的速度从头到尾都是相同的</li><li>ease（缓解）：默认是动画从低速开始，然后加快，在结束前变慢</li><li>ease-in：动画以低速开始</li><li>ease-out：动画以低速结束</li><li>ease-in-out：动画以低速开始和结束</li><li>cubic-bezier(n,n,n,n)：贝塞尔曲线（自定义数组），可到<a href="https://cubic-bezier.com/#.17,.67,.83,.67">网站 cubic-bezier.com</a>进行可视化配置</li></ul><h3 id="animation-delay-动画延迟时间"><strong>animation-delay：</strong> 动画延迟时间</h3><p>设置动画延时时间，单位为秒。</p><p>当同时使用多个动画时，可依次定义每个动画的延迟执行时间，依次来区分每一个动画。</p><h3 id="animation-direction-动画执行顺序播放方向"><strong>animation-direction：</strong> 动画执行顺序（播放方向）</h3><p>设置动画执行的方向。</p><p>可选值：</p><ul><li>normal：默认值，动画按正常播放</li><li>reverse：动画反向播放</li><li>alternate(交替的)：动画正反（正向-&gt;反向）交替执行</li><li>alternate-reverse：动画反正（反向-&gt;正向）交替执行</li><li>inherit：从父元素继承该属性</li></ul><h3 id="animation-fill-mode动画结束状态">animation-fill-mode：动画结束状态</h3><p>设置动画的填充模式</p><p>可选值：</p><ul><li>none：默认值，动画在动画执行前后，不会应用任何样式到目标元素。</li><li>forwards：在动画结束后（<strong>由 animation-iteration-count 决定</strong>），目标元素将保持应用<strong>最后帧</strong>动画。</li><li>backwards：在动画结束后（<strong>由 animation-iteration-count 决定</strong>），目标元素将保持应用<strong>起始帧</strong>动画。</li></ul><h3 id="animation-play-state动画执行状态">animation-play-state：动画执行状态</h3><p>设置动画的执行状态</p><p>可选值：</p><ul><li>running：允许</li><li>paused：暂停。动画将停止执行</li></ul><h3 id="多动画累加">多动画累加</h3><p>若元素应用多个动画时，可以通过给animation属性分别不同值来分别控制各个动画的属性。各个值之间使用逗号<code>,</code>来分隔开。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">animation-name</span>: bgcolor, bodera, rotat;</span><br><span class="line"><span class="attribute">animation-duration</span>: <span class="number">2s</span>, <span class="number">2s</span>, <span class="number">3s</span>;</span><br><span class="line"><span class="attribute">animation-iteration-count</span>: <span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>;</span><br><span class="line"><span class="attribute">animation-direction</span>: reverse, normal, normal;</span><br><span class="line"><span class="attribute">animation-fill-mode</span>: forwards, forwards, forwards;</span><br></pre></td></tr></table></figure><p>应用多个动画时，所有动画是并发执行的，因此<strong>计算动画结束事件只需要知道执行时间最长的动画</strong>即可，<strong>执行时间 x 单次执行时间=动画总时间</strong>。因此上述代码的最大时间=max(2x2,2x2,3x1=4s。</p><h2 id="animation用法示例">animation用法示例</h2><p>播放时长为2秒的浮动动画的Vue代码示例如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;<span class="selector-tag">div</span> :class=<span class="string">&quot;&#123; &#x27;custom-animation&#x27;: isAnimating &#125;&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      isAnimating: true, // 根据需要设置是否启用动画</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line"><span class="keyword">@keyframes</span> customAnimation &#123;</span><br><span class="line">  <span class="number">0%</span>, <span class="number">100%</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="number">50%</span> &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateY</span>(-<span class="number">30px</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.custom-animation</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: green;</span><br><span class="line">  <span class="attribute">animation</span>: customAnimation <span class="number">2s</span> ease-in-out infinite; <span class="comment">/* 设置动画名称、时长、缓动函数和循环次数 */</span></span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="常见错误及解决方案">常见错误及解决方案</h2><h3 id="keyframes不能实现突变的状态变化"><code>@keyframes</code>不能实现突变的状态变化</h3><p><code>@keyframes</code>是将样式从一个状态慢慢转变为另一个状态，因此不能实现突变的状态，例如：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">animation</span>: appear <span class="number">2s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> appear &#123;</span><br><span class="line">    <span class="selector-tag">from</span> &#123; <span class="attribute">display</span>:none; &#125;</span><br><span class="line">    <span class="selector-tag">to</span>   &#123; <span class="attribute">display</span>:block;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述代码中<code>display:none;</code>是将div不占空间地隐藏，而<code>display:block;</code>是显示div并占用空间。这里从<code>display:none;</code>到<code>display:block;</code>的状态是突变的，因此<code>@keyframes</code>无法实现上述的状态变化</p><p><strong>替代方法：</strong></p><ul><li><p>占据空间的隐藏：使用visibility来代替display。</p><p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">animation</span>: appear <span class="number">2s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> appear &#123;</span><br><span class="line">    <span class="selector-tag">from</span> &#123; </span><br><span class="line">        <span class="attribute">opacity</span>:<span class="number">1</span>;</span><br><span class="line">        <span class="attribute">visibility</span>:visible; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">to</span>   &#123; </span><br><span class="line">        <span class="attribute">opacity</span>:<span class="number">0</span>;</span><br><span class="line">        <span class="attribute">visibility</span>:hidden;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></li><li><p>不占据空间地隐藏：使用绝对定位+visibility组合，其中绝对定位使元素脱离文档流，搭配z-index层级关系来使他出现或消失。</p><p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>:absolute;</span><br><span class="line">    <span class="attribute">top</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">animation</span>: appear <span class="number">2s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> appear &#123;</span><br><span class="line">    <span class="selector-tag">from</span> &#123; </span><br><span class="line">        <span class="attribute">opacity</span>:<span class="number">1</span>;</span><br><span class="line">        <span class="attribute">visibility</span>:visible; </span><br><span class="line">        <span class="attribute">z-index</span>:<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">to</span>   &#123; </span><br><span class="line">        <span class="attribute">opacity</span>:<span class="number">0</span>;</span><br><span class="line">        <span class="attribute">visibility</span>:hidden;</span><br><span class="line">         <span class="attribute">z-index</span>:<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></li><li><p>消失前占据空间但消失后不占空间：使用setTimeout和visibility组合。</p><p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;button @click=&quot;hideElement&quot;&gt;隐藏元素&lt;/button&gt;</span><br><span class="line">    &lt;div :class=&quot;&#123; &#x27;fade-out&#x27;: isVisible, &#x27;hidden&#x27;: !isVisible &#125;&quot;&gt;</span><br><span class="line">      这是一个会消失的元素</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      isVisible: true,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    hideElement() &#123;</span><br><span class="line">      this.isVisible = false;</span><br><span class="line">      // 使用 setTimeout 设置一定的延迟，确保元素在消失前渲染一段时间</span><br><span class="line">      setTimeout(() =&gt; &#123;</span><br><span class="line">        this.isVisible = true;</span><br><span class="line">      &#125;, 500); // 设置的时间可以根据需要调整</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">.fade-out &#123;</span><br><span class="line">  visibility: visible;</span><br><span class="line">  opacity: 1;</span><br><span class="line">  transition: opacity 0.5s ease-in-out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.hidden &#123;</span><br><span class="line">  visibility: hidden;</span><br><span class="line">  opacity: 0;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure></p></li></ul><h3 id="keyframes会增添覆盖属性"><code>@keyframes</code>会增添/覆盖属性</h3><p>以下为覆盖属性的例子：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* div 在2s内下移200px</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>:absolute;</span><br><span class="line">    <span class="attribute">top</span>:<span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">animation</span>: move <span class="number">2s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> move &#123;</span><br><span class="line">    <span class="selector-tag">from</span> &#123; <span class="attribute">top</span>:<span class="number">20px</span>; &#125;</span><br><span class="line">    <span class="selector-tag">to</span>   &#123; <span class="attribute">top</span>:<span class="number">200px</span>;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在例子里，div的初始状态是 <code>top:0px;</code>，在动画启动前，<code>@keyframes</code>先用<code>top:20px;</code>覆盖原属性，然后再开始播放动画</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;基本概念&quot;&gt;基本概念&lt;/h1&gt;
&lt;p&gt;css中有两种形式实现动画效果：过渡动画&lt;code&gt;transition&lt;/code&gt;和自定义动画&lt;code&gt;animation&lt;/code&gt;。其中，animation动画可以循环多次执行，而过渡动画transition只执</summary>
      
    
    
    
    <category term="CSS3" scheme="http://tangmenjue.top/categories/CSS3/"/>
    
    <category term="大屏设计" scheme="http://tangmenjue.top/categories/%E5%A4%A7%E5%B1%8F%E8%AE%BE%E8%AE%A1/"/>
    
    
    <category term="CSS3" scheme="http://tangmenjue.top/tags/CSS3/"/>
    
  </entry>
  
  <entry>
    <title>Lottie动效设计指南：（一）Bodymovin插件的安装及初步使用</title>
    <link href="http://tangmenjue.top/2023/11/30/Lottie%E5%8A%A8%E6%95%88%E8%AE%BE%E8%AE%A1%E6%8C%87%E5%8D%97%EF%BC%9A%EF%BC%88%E4%B8%80%EF%BC%89Bodymovin%E6%8F%92%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85%E5%8F%8A%E5%88%9D%E6%AD%A5%E4%BD%BF%E7%94%A8/"/>
    <id>http://tangmenjue.top/2023/11/30/Lottie%E5%8A%A8%E6%95%88%E8%AE%BE%E8%AE%A1%E6%8C%87%E5%8D%97%EF%BC%9A%EF%BC%88%E4%B8%80%EF%BC%89Bodymovin%E6%8F%92%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85%E5%8F%8A%E5%88%9D%E6%AD%A5%E4%BD%BF%E7%94%A8/</id>
    <published>2023-11-30T09:14:32.000Z</published>
    <updated>2023-11-30T09:14:32.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="lottie是什么">Lottie是什么</h1><p>Lottie是Airbnb开源的一个动画渲染库，同时支持Android、iOS、React Native平台。Lottie支持渲染播放AE动画。通过AE插件bodymovie导出json文件作为动画数据。Airbnb的开发者打造了一个社区<a href="https://github.com/lottiefiles">LottieFiles · GitHub</a>来与设计师、开发者进行交流。</p><p><strong>Lottie应用场景与原理</strong></p><ul><li>loading动画</li><li>动态图标</li><li>加载动画</li><li>动态banner</li></ul><p><strong>Lottie支持的AE属性</strong></p><p>Lottie虽然能够满足多种场景的需要，但并非支持所有的AE效果。因此在设计动效时，需要考虑该效果是否被Lottie支持。否则会导致出错或所使用的效果无效。<img src="/2023/11/30/Lottie%E5%8A%A8%E6%95%88%E8%AE%BE%E8%AE%A1%E6%8C%87%E5%8D%97%EF%BC%9A%EF%BC%88%E4%B8%80%EF%BC%89Bodymovin%E6%8F%92%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85%E5%8F%8A%E5%88%9D%E6%AD%A5%E4%BD%BF%E7%94%A8/1.webp"></p><h1 id="lottie动效制作准备">Lottie动效制作准备</h1><h2 id="文件下载">文件下载</h2><ul><li><p>下载AE 2020，从本文中下载的AE 2020直接按提示安装即可直接使用。下载链接如下：<a href="https://pan.baidu.com/s/1dKbqVgQXFqbwTqYr-j0tzg?pwd=ke69">Adobe_After_Effects_2020破解版下载</a></p><ul><li>AE全套插件一键安装包，有需要的可以下载。下载链接如下：<a href="https://pan.baidu.com/s/1lfL9rF5ZYNA59UDZZVreIw?pwd=weya">AE 2020 全套插件一键安装包</a></li></ul></li><li><p>下载并安装ZXP Installer软件，用于将ZXP文件安装到AE，下载链接如下：<a href="https://aescripts.com/learn/zxp-installer/">ZXP Installer 官网下载</a></p></li><li><p>下载Bodymovin插件，将动画输出成json文件。该插件版本非常多，由于前端使用的Bodymovin解析包可能无法解析用最新版Bodymovin插件输出的json文件，因此要<strong>注意Bodymovin插件版本和所使用的lottie版本相对应</strong>。插件各版本的地址如下：<a href="https://github.com/airbnb/lottie-web/tags">airbnb/lottie-web</a></p><p><strong>寻找Bodymovin插件和所使用的lottie版本对应操作示例</strong></p><p>比如vue2中使用使用1.2.1版本的<code>lottie-web-vue</code>库来渲染lottie动画，操作如下：</p><ul><li>打开<code>lottie-web-vue</code>库的源代码查看<code>package.json</code>文件中<code>lottie-web</code>的版本号<a href="https://github.com/garbit/lottie-web-vue/blob/v1.2.1/package.json">lottie-web-vue/package.json at v1.2.1</a></li><li>找到<code>lottie-web</code>的版本号为5.7.4。<img src="/2023/11/30/Lottie%E5%8A%A8%E6%95%88%E8%AE%BE%E8%AE%A1%E6%8C%87%E5%8D%97%EF%BC%9A%EF%BC%88%E4%B8%80%EF%BC%89Bodymovin%E6%8F%92%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85%E5%8F%8A%E5%88%9D%E6%AD%A5%E4%BD%BF%E7%94%A8/2.png"></li><li>转到Bodymovin插件下载页面，找到与<code>lottie-web</code>版本号匹配的版本下载<a href="https://github.com/airbnb/lottie-web/releases/tag/v5.7.4">Release v5.7.4 · airbnb/lottie-web · GitHub</a></li></ul></li></ul><h2 id="ae插件安装步骤">AE插件安装步骤</h2><ul><li>Bodymovin插件下载后解压，在解压文件夹的<code>lottie-web-5.7.4\build\extension</code>目录下找到<code>bodymovin.zxp</code>文件，记下文件路径<img src="/2023/11/30/Lottie%E5%8A%A8%E6%95%88%E8%AE%BE%E8%AE%A1%E6%8C%87%E5%8D%97%EF%BC%9A%EF%BC%88%E4%B8%80%EF%BC%89Bodymovin%E6%8F%92%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85%E5%8F%8A%E5%88%9D%E6%AD%A5%E4%BD%BF%E7%94%A8/5.png"><ul><li>打开ZXP Installer软件，点击file-open菜单项，通过上述的文件路径选择<code>bodymovin.zxp</code>文件来载入插件包，ZXP installer会自动开始安装。安装完成后的软件主页面如下图所示。<img src="/2023/11/30/Lottie%E5%8A%A8%E6%95%88%E8%AE%BE%E8%AE%A1%E6%8C%87%E5%8D%97%EF%BC%9A%EF%BC%88%E4%B8%80%EF%BC%89Bodymovin%E6%8F%92%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85%E5%8F%8A%E5%88%9D%E6%AD%A5%E4%BD%BF%E7%94%A8/6.png"></li></ul></li><li>打开AE，在编辑-首选项-常规-脚本和表达式中选中允许脚本写入文件和访问网络，点击确定。<img src="/2023/11/30/Lottie%E5%8A%A8%E6%95%88%E8%AE%BE%E8%AE%A1%E6%8C%87%E5%8D%97%EF%BC%9A%EF%BC%88%E4%B8%80%EF%BC%89Bodymovin%E6%8F%92%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85%E5%8F%8A%E5%88%9D%E6%AD%A5%E4%BD%BF%E7%94%A8/7.png"></li><li>点击窗口-扩展，可以看到导入的插件，点击插件名就能打开指定的插件界面使用插件了。<img src="/2023/11/30/Lottie%E5%8A%A8%E6%95%88%E8%AE%BE%E8%AE%A1%E6%8C%87%E5%8D%97%EF%BC%9A%EF%BC%88%E4%B8%80%EF%BC%89Bodymovin%E6%8F%92%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85%E5%8F%8A%E5%88%9D%E6%AD%A5%E4%BD%BF%E7%94%A8/8.png"><img src="/2023/11/30/Lottie%E5%8A%A8%E6%95%88%E8%AE%BE%E8%AE%A1%E6%8C%87%E5%8D%97%EF%BC%9A%EF%BC%88%E4%B8%80%EF%BC%89Bodymovin%E6%8F%92%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85%E5%8F%8A%E5%88%9D%E6%AD%A5%E4%BD%BF%E7%94%A8/9.png"></li></ul><h1 id="ae插件的初步使用">AE插件的初步使用</h1><ul><li><p>在一个新的项目中，新建一个名为<code>test</code>的合成，并制作一段简单的动画：<img src="/2023/11/30/Lottie%E5%8A%A8%E6%95%88%E8%AE%BE%E8%AE%A1%E6%8C%87%E5%8D%97%EF%BC%9A%EF%BC%88%E4%B8%80%EF%BC%89Bodymovin%E6%8F%92%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85%E5%8F%8A%E5%88%9D%E6%AD%A5%E4%BD%BF%E7%94%A8/10.png"></p></li><li><p>打开Bodymovin插件窗口，可以发现<code>test</code>出现在了下面的列表中。<img src="/2023/11/30/Lottie%E5%8A%A8%E6%95%88%E8%AE%BE%E8%AE%A1%E6%8C%87%E5%8D%97%EF%BC%9A%EF%BC%88%E4%B8%80%EF%BC%89Bodymovin%E6%8F%92%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85%E5%8F%8A%E5%88%9D%E6%AD%A5%E4%BD%BF%E7%94%A8/11.png"></p></li><li><p>选中<code>test</code>，设置好json文件输出位置，点击Render。<img src="/2023/11/30/Lottie%E5%8A%A8%E6%95%88%E8%AE%BE%E8%AE%A1%E6%8C%87%E5%8D%97%EF%BC%9A%EF%BC%88%E4%B8%80%EF%BC%89Bodymovin%E6%8F%92%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85%E5%8F%8A%E5%88%9D%E6%AD%A5%E4%BD%BF%E7%94%A8/12.png"></p></li><li><p>显示以下界面则表示json文件生成完成，点击红框处的按钮，可以预览json文件导出的动画。<img src="/2023/11/30/Lottie%E5%8A%A8%E6%95%88%E8%AE%BE%E8%AE%A1%E6%8C%87%E5%8D%97%EF%BC%9A%EF%BC%88%E4%B8%80%EF%BC%89Bodymovin%E6%8F%92%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85%E5%8F%8A%E5%88%9D%E6%AD%A5%E4%BD%BF%E7%94%A8/13.png"><img src="/2023/11/30/Lottie%E5%8A%A8%E6%95%88%E8%AE%BE%E8%AE%A1%E6%8C%87%E5%8D%97%EF%BC%9A%EF%BC%88%E4%B8%80%EF%BC%89Bodymovin%E6%8F%92%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85%E5%8F%8A%E5%88%9D%E6%AD%A5%E4%BD%BF%E7%94%A8/14.png"></p></li><li><p>将生成的json复制到vue2项目中即可在vue2项目里使用刚刚制作的Lotttie动画。</p></li></ul>]]></content>
    
    
    <summary type="html">Lottie动效设计指南：（一）Bodymovin插件的安装及初步使用</summary>
    
    
    
    <category term="大屏设计" scheme="http://tangmenjue.top/categories/%E5%A4%A7%E5%B1%8F%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="可视化" scheme="http://tangmenjue.top/categories/%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    <category term="Lottie" scheme="http://tangmenjue.top/categories/Lottie/"/>
    
    
    <category term="可视化" scheme="http://tangmenjue.top/tags/%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    <category term="大屏设计" scheme="http://tangmenjue.top/tags/%E5%A4%A7%E5%B1%8F%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="Lottie" scheme="http://tangmenjue.top/tags/Lottie/"/>
    
  </entry>
  
  <entry>
    <title>可视化大屏设计入门指南</title>
    <link href="http://tangmenjue.top/2023/11/29/%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%A7%E5%B1%8F%E8%AE%BE%E8%AE%A1%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/"/>
    <id>http://tangmenjue.top/2023/11/29/%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%A7%E5%B1%8F%E8%AE%BE%E8%AE%A1%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/</id>
    <published>2023-11-29T03:48:30.000Z</published>
    <updated>2023-11-29T03:48:30.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言">前言</h1><p>数据可视化就是把一些相对复杂、抽象的、看不懂的数据通过可视化的方式，运用图形化的手段清晰有效地将数据信息进行解读和传达，帮助发现其中的规律和特征，挖掘数据背后价值的过程。</p><p>随着行业的发展，可视化大屏大致有以下类别：</p><ul><li>行业可视化（如交通、医疗、金融、军警部队、农业、工厂、化工等）</li><li>智能终端系统类（如定制化终端产品）</li><li>演示demo（如数据演示、展览展示、数据看板）</li><li>可视化分析系统（如交通预警平台、天气监控平台等）</li></ul><p>随着可视化需求的增多，各大厂商也逐渐整合可视化资源来实现低代码平台，国内比较知名的可视化厂商有：光启元（Ray design）、Data V、优诺科技（森工厂）、袋鼠云（Easy V）、数字冰雹、图扑等。他们将一些可视化效果组件化集成在平台，通过拖拉拽就能实现一些不错的效果。</p><p>可视化设计不仅仅是只做完效果图就行的，他是一个结合<strong>硬件设备、UI设计、三维建模、三维渲染、动态设计、数据可视化、图形技术、GIS数据、渲染引擎、交互技术</strong>等综合类的交叉学科。<img src="/2023/11/29/%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%A7%E5%B1%8F%E8%AE%BE%E8%AE%A1%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/1.PNG"></p><h1 id="前置知识">前置知识</h1><h2 id="硬件设备">硬件设备</h2><p>了解硬件设备信息是做大屏的开始，先了解物理屏的尺寸、比例、屏幕种类（拼接屏、LED屏）、投影方式等信息，以方便后续的设计工作。</p><p>下图为一些常见的屏幕拼接方式，确认好屏幕的拼接方式便能计算整个大屏的物理分辨率。下图中最后一个屏幕的拼接方式为横向3块、竖向2块屏幕，他们每块屏幕分辨率为1920x1080，那么这块3x2的拼接屏幕尺寸就应该是<code>1920*3x1080*2</code>即5760x2160<img src="/2023/11/29/%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%A7%E5%B1%8F%E8%AE%BE%E8%AE%A1%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/2.PNG"></p><h3 id="大屏设计尺寸">大屏设计尺寸</h3><p>大屏的投射方式大致分为三种：</p><ol type="1"><li>电脑屏幕1比1等比例投屏</li><li>通过主机直接输出给拼接屏（常用于一些自定义比例屏幕和分辨率超大的情况下）</li><li>投影仪投射</li></ol><p>由于大屏的物理屏幕分辨率大小不一，因此<strong>设计尺寸是建议按照输出分辨率设计</strong>，采用输出分辨率作为最终的设计尺寸。<strong>针对硬件设备设计</strong>时要关注以下几点：屏幕拼接方式、单屏幕像素及拼接后像素、输出像素等这些决定设计尺寸、内容排布、规避拼接缝等问题。</p><h2 id="gis数据">GIS数据</h2><p>通常应用于参数化建模，比如通过一些地理位置高程数据生成3D模型。</p><p>常见的一些格式有：</p><ul><li>Openstreetmap（多用于生成模型）</li><li>Shapefile（多用于生成模型）</li><li>Geojson（多用于基于Web的映射）</li><li>TIFF（多用于贴图处理）</li></ul><p>常用的工具有：</p><ul><li>Qgis</li><li>Arcgis</li><li>Google mapper</li></ul><h2 id="三维建模">三维建模</h2><p>在可视化设计中，一般会结合生成<strong>参数化模型+定制化手工模型</strong>的方式处理整体效果。这么处理的目的：一是设计上能突出主体，增加画面的层次感；二是在性能上能很好地优化，提高整体性能。</p><p>下图为设计侧到开发侧对接流程：<img src="/2023/11/29/%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%A7%E5%B1%8F%E8%AE%BE%E8%AE%A1%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/3.PNG"></p><h2 id="动效设计">动效设计</h2><p>常见的一些动效对接格式为：GIF、MP4、APNG、Lottie、序列帧。<img src="/2023/11/29/%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%A7%E5%B1%8F%E8%AE%BE%E8%AE%A1%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/4.PNG"></p><h2 id="图形技术">图形技术</h2><p>图形成像，是由一个个的粒子点生成的画面。<img src="/2023/11/29/%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%A7%E5%B1%8F%E8%AE%BE%E8%AE%A1%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/5.PNG"></p><p>下图是由一个50x100的粒子组成的平面，每个粒子都会对应他的xy轴的坐标位置，通过控制粒子的<strong>透明度、大小、颜色、位置、旋转</strong>等参数呈现不同的视觉效果。<img src="/2023/11/29/%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%A7%E5%B1%8F%E8%AE%BE%E8%AE%A1%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/6.JPG"></p><p>常见的粒子世界地图就是通过控制粒子黑白X粒子大小叠加出来的，通过一张贴图去控制黑白嘟，海洋是黑色的就不显示粒子，陆地为白色显示白色粒子，最终便呈现了一个粒子地球的效果。<img src="/2023/11/29/%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%A7%E5%B1%8F%E8%AE%BE%E8%AE%A1%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/7.PNG"></p><h2 id="渲染引擎的技术架构">渲染引擎的技术架构</h2><p>市面上可视化落地都是基于Unity3D、虚拟引擎（UE4）、Ventuz、threejs等工具实现的。它们的底层都是由BS（Browser-Server）和CS（Client-Server）架构组成的。</p><p><strong>BS架构与CS架构特点：</strong></p><ul><li>BS：浏览器/服务器模式，优点是使用便捷、数据实时更新、跨平台。缺点是渲染效果较差、大场景支持差。框架有WebGL。</li><li>CS：客户端/服务器模式，优点是整体渲染视觉效果棒、大场景支持好。缺点是必须安装客户端、对电脑性能要求高、 不同平台需要不同文件。框架有Unreal Engine、Unity3D、Ventuz。</li></ul><h1 id="可视化大屏ui">可视化大屏UI</h1><p>大屏UI设计中，需要对大屏的布局、风格、主视觉、信息图表、字体、规范、动效等方面综合考虑，从而推导出设计方案。</p><ul><li><strong>设计前</strong>：需要<strong>充分分析和理解用户需求</strong>，要了解大屏的<strong>展示场景</strong>、设计<strong>分辨率</strong>及大屏的<strong>拼接方法</strong>，要清楚需要<strong>展示的数据具体有哪些内容</strong>，同时探明<strong>每部分数据对实时性的要求</strong>，确定好数据对应的可视化元素后，再考虑<strong>实现的工具与方法</strong>。</li><li><strong>设计中</strong>：<strong>构思布局</strong>时可以在纸上简单画一下。根据业务需求抽取关键性指标，提取主要信息来进行设计的提炼与分析，方便自己找参考。<strong>大屏背景颜色要以深色为主，数据可以采用亮色</strong>，有一定的对比关系，便于业务信息传达。<strong>字体上可以采用系统默认字体，数字可以采用系统默认的等宽字体<code>Monaco</code></strong>。图表选择恰当的展示形式，同时要保证视觉上的统一（分清页面的主次关系，图表的展示切莫设计过度，容易造成抢主体）</li><li>设计后：再次<strong>校验</strong>信息层级、文字大小、图表等各层级间的对比关系是否传达准确并评估技术的实现性。最后开发完成后要拿演示demo去现场测试，看下整体展示效果，测试输出是否有问题，有无拉伸问题，拼接缝与内容有无穿插，完成校验工作后，才算是设计的最终完成。</li></ul><p>下面针对可视化设计中布局、风格、主视觉、信息图表、字体、规范、动效等7个方向进行讲解。</p><h2 id="布局">布局</h2><p>通过硬件设备信息可以得到可视化的设计尺寸，基于尺寸新建设计画布，第一件事就需考虑页面的整体布局。常见的大屏布局：居中结构、左右结构两种常见的布局形式以常规的16:9模板为例，下面列举的一些常见的布局形式。</p><h3 id="居中结构">居中结构</h3><p><img src="/2023/11/29/%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%A7%E5%B1%8F%E8%AE%BE%E8%AE%A1%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/8.jpg"></p><p><img src="/2023/11/29/%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%A7%E5%B1%8F%E8%AE%BE%E8%AE%A1%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/9.jpg"></p><p>异形超宽拼接屏幕</p><p><img src="/2023/11/29/%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%A7%E5%B1%8F%E8%AE%BE%E8%AE%A1%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/10.jpg"></p><h3 id="左右结构">左右结构</h3><p><img src="/2023/11/29/%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%A7%E5%B1%8F%E8%AE%BE%E8%AE%A1%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/11.jpg"><img src="/2023/11/29/%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%A7%E5%B1%8F%E8%AE%BE%E8%AE%A1%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/12.jpg"></p><p>布局的原则是主次一定要分明，根据业务需求抽取关键性指标，提取主要信息。可以在纸上大概画一下，然后在软件里具体细化布局。避免次要信息的面积过大、喧宾夺主，影响整体的视觉效果。</p><h2 id="风格">风格</h2><p><strong>定义设计风格</strong>：一般会基于业务需求场景去定义几个设计关键词，根据关键词去找一些参考图，推导出贴合业务的设计风格。</p><p><img src="/2023/11/29/%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%A7%E5%B1%8F%E8%AE%BE%E8%AE%A1%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/13.jpg"></p><p>通过调整颜色、装饰细节、主视觉、字体等一些细节点控制区分不同的设计风。以图表举例，只需要调整卡片和标题的装饰，就能展现出不同的设计风格。</p><p><img src="/2023/11/29/%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%A7%E5%B1%8F%E8%AE%BE%E8%AE%A1%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/14.jpg"></p><h2 id="主视觉">主视觉</h2><p>主视觉部分大致分为：地球、地图、智慧城市、行业类业务展示等。目前比较容易出效果的都会采用三维模型的处理方式。</p><p><strong>地球：</strong>粒子地球、地球贴图、地球模型。</p><p><img src="/2023/11/29/%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%A7%E5%B1%8F%E8%AE%BE%E8%AE%A1%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/15.gif"></p><p><img src="/2023/11/29/%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%A7%E5%B1%8F%E8%AE%BE%E8%AE%A1%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/16.jpg"></p><p><strong>地图：</strong>第三方在线地图（百度、高德、腾讯、谷歌）基于地图开发平台进行个性化配置。或者通过地理位置数据建模：如全国和各个省份的轮廓模型。</p><p><img src="/2023/11/29/%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%A7%E5%B1%8F%E8%AE%BE%E8%AE%A1%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/17.jpg"></p><p><strong>智慧城市：</strong>GIS参数化生成建模和重点楼宇定制化建模<img src="/2023/11/29/%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%A7%E5%B1%8F%E8%AE%BE%E8%AE%A1%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/18.gif"></p><p><strong>行业类：</strong>多数为定制化建模。如工业类、医疗类、能源类、园区、学校、港口、工厂、仓储库房、零售、工程、安防、国防军工等。<img src="/2023/11/29/%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%A7%E5%B1%8F%E8%AE%BE%E8%AE%A1%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/19.jpg"></p><h2 id="信息图表">信息图表</h2><p>图表的设计原则是易理解、可实现，能够准确表达数据意图，给用户传达明确信息。下图通过使用常见可分为比较、联系、构成、分布四个维度解释图表的不同属性类别。在做可视化大屏设计时可参照下图，选择对应的数据图表。更详细的图表释义可在这里查看：<a href="https://antv-2018.alipay.com/zh-cn/vis/chart/index.html">图表用法 - AntV (alipay.com)</a></p><p><img src="/2023/11/29/%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%A7%E5%B1%8F%E8%AE%BE%E8%AE%A1%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/20.jpg"></p><h2 id="字体">字体</h2><p>可视化大屏设计中字体的运用原理跟网页app的逻辑基本一致。在字体选择上会基于业务需求选择对应的字体与设计风格结合。要注意字体有无衬线、字重、字距等。</p><p>大屏设计中，中文字体一般会采用浏览器默认字体（微软雅黑、思源黑体、苹方等）页面中标题会采用特殊字体处理。常用的字体有：优设标题黑、旁门正道标题体、时尚中黑简体、方正正中黑体等。</p><p>英文数字字体推荐：Din、Monaco、DS-Digtal、Bebas、Acens、DS-DIGIB、Roboto等。</p><h3 id="规范">规范</h3><p>建立规范的主要目的是：保证设计的一致性、提高开发效率和还原度以方便迭代。可视化设计中规范一般会分为：色彩、文字、图表、标题控件等，跟网页端规范同理。</p><h3 id="动效">动效</h3><p>大数据可视化大屏设计少不了动效，动效是可视化重要的组成部分，他能增加观感体验、凸显关键产品内容、强调功能信息关联，帮助用户理解产品、情感化互动。但过分的动效极其容易喧宾夺主，影响用户阅读，反而弱化了数据的展示。</p><p>动效的设计原则如下图所示:</p><p><img src="/2023/11/29/%E5%8F%AF%E8%A7%86%E5%8C%96%E5%A4%A7%E5%B1%8F%E8%AE%BE%E8%AE%A1%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/21.jpg"></p><p>动效应优先满足核心内容、故事线。常见的大屏动效-展示类，用于突出产品核心功能和特点。界面信息按照一定的规律呈现，引导用户的视觉流向。好的大屏设计在数据展示模块上动效最好不要过多，要有一定的主次关系变化。动效也有结合数据变化，考虑极端情况的展示效果，最终输出一套完整的动效方案。</p>]]></content>
    
    
    <summary type="html">可视化大屏设计入门指南</summary>
    
    
    
    <category term="大屏设计" scheme="http://tangmenjue.top/categories/%E5%A4%A7%E5%B1%8F%E8%AE%BE%E8%AE%A1/"/>
    
    <category term="可视化" scheme="http://tangmenjue.top/categories/%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
    <category term="可视化" scheme="http://tangmenjue.top/tags/%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    <category term="大屏设计" scheme="http://tangmenjue.top/tags/%E5%A4%A7%E5%B1%8F%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>在Vue中使用el-editor编辑器</title>
    <link href="http://tangmenjue.top/2023/11/21/%E5%9C%A8Vue%E4%B8%AD%E4%BD%BF%E7%94%A8el-editor%E7%BC%96%E8%BE%91%E5%99%A8/"/>
    <id>http://tangmenjue.top/2023/11/21/%E5%9C%A8Vue%E4%B8%AD%E4%BD%BF%E7%94%A8el-editor%E7%BC%96%E8%BE%91%E5%99%A8/</id>
    <published>2023-11-21T01:11:59.000Z</published>
    <updated>2023-11-21T01:11:59.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言">前言</h1><p>实际项目中，多处使用到富文本编辑器，每次都配置会比较麻烦，故将要用到的功能封装到一起，需要时可直接调用，故发布了el-editor编辑器。</p><h1 id="富文本编辑器v1.0.1">富文本编辑器v1.0.1</h1><p><img src="/2023/11/21/%E5%9C%A8Vue%E4%B8%AD%E4%BD%BF%E7%94%A8el-editor%E7%BC%96%E8%BE%91%E5%99%A8/editor.png"></p><h2 id="介绍">介绍</h2><ul><li>编辑器基于vue-quill-editor和element封装，目前版本仅支持vue2</li><li>与其他编辑器相比，本编辑器支持秀米编辑器、135编辑器样式的粘贴复制</li><li>注意，当前编辑器仅提供前端代码，编辑器默认不转存秀米图表，若需要开启这一功能，需要向<code>handlePic</code>参数传真值<code>true</code>，然后编写一个后端接口来实现秀米图片的转存，接口名默认为<code>editor/get_xiumi_pic</code>，可通过参数<code>picURL</code>自行修改</li></ul><h2 id="安装">安装</h2><h3 id="下载组件">下载组件</h3><p>方法一：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install el<span class="literal">-editor</span>@<span class="number">1.0</span>.<span class="number">1</span></span><br></pre></td></tr></table></figure><p>方法二：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add el<span class="literal">-editor</span>@<span class="number">1.0</span>.<span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="下载html文件并放到public目录下">下载html文件并放到public目录下</h3><p>文件地址：https://tangjue.lanzouw.com/iLXdy1fgwbja</p><h2 id="引入富文本编辑器">引入富文本编辑器：</h2><p>在main.js中引入组件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> editor <span class="keyword">from</span> <span class="string">&quot;el-editor&quot;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;../node_modules/el-editor/el-editor.css&quot;</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(editor)</span><br></pre></td></tr></table></figure><p>在需要用到的页面直接使用组件：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;quill_editor :content=<span class="string">&quot;content&quot;</span> ：picURL=<span class="string">&quot;editor/get_xiumi_pic&quot;</span>/&gt;</span><br></pre></td></tr></table></figure><p><strong>参数详情：</strong></p><table style="width:100%;"><colgroup><col style="width: 9%"><col style="width: 34%"><col style="width: 45%"><col style="width: 10%"></colgroup><thead><tr class="header"><th>参数名称</th><th>参数含义</th><th>默认值</th><th>该参数是否必填</th></tr></thead><tbody><tr class="odd"><td>content</td><td>编辑器的内容</td><td>null</td><td>是</td></tr><tr class="even"><td>disabled</td><td>是否禁用编辑器</td><td>false</td><td>否</td></tr><tr class="odd"><td>disabledStyle</td><td>设置编辑器被禁用时的样式</td><td>{background: "#f5f7fa",color: "#c0c4cc",cursor: "not-allowed",borderRadius: "4px",border: "1px solid #dcdfe6"}</td><td>否</td></tr><tr class="even"><td>editorStyle</td><td>设置编辑器的样式</td><td>minHeight: '180px',即最小高度180px</td><td>否</td></tr><tr class="odd"><td>handlePic</td><td>设置是否开启秀米图片转存</td><td>false</td><td>否</td></tr><tr class="even"><td>hidetool</td><td>是否隐藏所有的工具栏</td><td>false</td><td>否</td></tr><tr class="odd"><td>options</td><td>工具栏配置参数，可通过这一参数自定义定制工具栏</td><td>{},为一个空对象</td><td>否</td></tr><tr class="even"><td>picURL</td><td>秀米图片转存后端接口路径</td><td>默认路径为"editor/get_xiumi_pic"，接口参数为一个名叫urlList的列表</td><td>否</td></tr><tr class="odd"><td>placeholder</td><td>编辑器提示输入的文字</td><td>"请输入内容"</td><td>否</td></tr></tbody></table><h2 id="展示编辑器输入的内容">展示编辑器输入的内容</h2><p>通过v-html可将输入到编辑器中的内容展示出来：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div v-html=&quot;content&quot; class=&quot;ql-editor&quot; &gt;&#123;&#123; content &#125;&#125;&lt;/div&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">el-editor编辑器是将Vue-quill-editor与秀米、135编辑器集成封装，以便使用</summary>
    
    
    
    <category term="Vue" scheme="http://tangmenjue.top/categories/Vue/"/>
    
    
    <category term="Vue" scheme="http://tangmenjue.top/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>Vue 将组件打包并发布到npm仓库</title>
    <link href="http://tangmenjue.top/2023/11/20/Vue%20%E5%B0%86%E7%BB%84%E4%BB%B6%E6%89%93%E5%8C%85%E5%B9%B6%E5%8F%91%E5%B8%83%E5%88%B0npm%E4%BB%93%E5%BA%93/"/>
    <id>http://tangmenjue.top/2023/11/20/Vue%20%E5%B0%86%E7%BB%84%E4%BB%B6%E6%89%93%E5%8C%85%E5%B9%B6%E5%8F%91%E5%B8%83%E5%88%B0npm%E4%BB%93%E5%BA%93/</id>
    <published>2023-11-20T03:25:39.000Z</published>
    <updated>2023-11-20T03:25:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>在项目中遇到需要反复使用的代码时，通常会将其封装起来以待下一次的调用。若想要在不同项目里也能使用这些代码时，比较难在众多代码中找到需要的代码。而将组件打包并发布到npm库中，只需要记住相应的包名，便可从npm下载直接安装使用。</p><h1 id="全局注册组件">全局注册组件</h1><ul><li><p>在完成对应组件<code>editor.vue</code>的封装后，在组件存放目录下（这里默认为<code>components</code>)新建一个index.js文件用于将封装好的组件注册为全局组件，内容如下：</p><p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> editor <span class="keyword">from</span> <span class="string">&#x27;./editor.vue&#x27;</span></span><br><span class="line"><span class="keyword">const</span> components = [</span><br><span class="line">  editor</span><br><span class="line">]</span><br><span class="line"><span class="comment">// 定义 install 方法，接收 Vue 作为参数。如果使用 use 注册插件，则所有的组件都将被注册</span></span><br><span class="line"><span class="keyword">const</span> install = <span class="keyword">function</span> (<span class="params">Vue</span>) &#123;</span><br><span class="line">   <span class="comment">// 遍历注册全局组件</span></span><br><span class="line">  components.<span class="title function_">forEach</span>(<span class="function"><span class="params">component</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="title class_">Vue</span>.<span class="title function_">component</span>(component.<span class="property">name</span>, component)</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 判断是否是直接引入文件,如果是，就不用调用 Vue.use()</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="variable language_">window</span> !== <span class="string">&#x27;undefined&#x27;</span> &amp;&amp; <span class="variable language_">window</span>.<span class="property">Vue</span>) &#123;</span><br><span class="line">    <span class="title function_">install</span>(<span class="variable language_">window</span>.<span class="property">Vue</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 导出的对象必须具有 install，才能被 Vue.use() 方法安装</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  install</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>index.js文件存放位置如图所示：<img src="/2023/11/20/Vue%20%E5%B0%86%E7%BB%84%E4%BB%B6%E6%89%93%E5%8C%85%E5%B9%B6%E5%8F%91%E5%B8%83%E5%88%B0npm%E4%BB%93%E5%BA%93/1.png"></p></li></ul><h1 id="打包组件">打包组件</h1><ul><li><p>修改项目中的<code>package.json</code>文件<code>scripts</code>属性中的内容，增加一条<code>package</code>属性，配置打包命令：</p><p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;serve&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vue-cli-service serve&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vue-cli-service build&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;lint&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vue-cli-service lint&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;package&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vue-cli-service build --target lib ./src/components/index.js --name 组件名称 --dest 组件名称&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="comment">// package参数详情</span></span><br><span class="line"><span class="comment">// 设置--target lib 参数来指定打包的目录</span></span><br><span class="line"><span class="comment">// 设置--name 参数来指定打包后的文件名字</span></span><br><span class="line"><span class="comment">// 设置--dest 参数来指定打包后的文件夹名称</span></span><br></pre></td></tr></table></figure></p></li><li><p>在终端命令行的项目目录处（如<code>F:\el-editor&gt;</code>）执行命令来打包组件：</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run package</span><br></pre></td></tr></table></figure></p></li></ul><p>​ 打包完成后可以看到新生成的文件夹（这里为<code>el-editor</code>）<img src="/2023/11/20/Vue%20%E5%B0%86%E7%BB%84%E4%BB%B6%E6%89%93%E5%8C%85%E5%B9%B6%E5%8F%91%E5%B8%83%E5%88%B0npm%E4%BB%93%E5%BA%93/2.png"></p><h1 id="发布到npm">发布到npm</h1><ul><li><p>到<a href="https://www.npmjs.com/">npm官网</a>上注册一个账号，记下用户名和密码，若已经有账号可以跳过该步骤</p></li><li><p>终端进入打包后的文件夹（<code>el-editor</code>），执行以下命令来初始化一个<code>package.json</code>文件：</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> el-editor</span><br><span class="line">npm init -y</span><br></pre></td></tr></table></figure></p></li><li><p>将npm源设为官方源：</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry=https://registry.npmjs.org</span><br></pre></td></tr></table></figure></p></li><li><p>输入以下命令添加npm用户，若之前添加过可以跳过该步骤</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm adduser</span><br><span class="line">//这里会让填写用户名和密码</span><br></pre></td></tr></table></figure></p></li><li><p>输入以下命令发布组件包</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm publish</span><br></pre></td></tr></table></figure></p><p>如果发布失败可能是名字重复了，改名后重新发布即可。</p></li></ul><h1 id="注意事项">注意事项</h1><ul><li><p>删除npm上的包，需要隔天才能重新用同样的名字发布</p></li><li><p>发布包后要注意组件中静态资源<code>public</code>、<code>assets</code>、<code>public</code>的路径是否正确</p></li><li><p>更新包版本时，可以直接更改版本号，也通过以下命令，将1.0.0版本改为1.0.1版本：</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm version patch -m <span class="string">&#x27;[patch]&#x27;</span></span><br></pre></td></tr></table></figure></p></li></ul>]]></content>
    
    
    <summary type="html">Vue 将组件打包并发布到npm仓库</summary>
    
    
    
    <category term="Vue" scheme="http://tangmenjue.top/categories/Vue/"/>
    
    
    <category term="Vue" scheme="http://tangmenjue.top/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>js文件调用vue内的方法并传值</title>
    <link href="http://tangmenjue.top/2023/11/02/js%E6%96%87%E4%BB%B6%E8%B0%83%E7%94%A8vue%E5%86%85%E7%9A%84%E6%96%B9%E6%B3%95%E5%B9%B6%E4%BC%A0%E5%80%BC/"/>
    <id>http://tangmenjue.top/2023/11/02/js%E6%96%87%E4%BB%B6%E8%B0%83%E7%94%A8vue%E5%86%85%E7%9A%84%E6%96%B9%E6%B3%95%E5%B9%B6%E4%BC%A0%E5%80%BC/</id>
    <published>2023-11-02T03:25:39.000Z</published>
    <updated>2023-11-02T03:25:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>在js文件中编写功能函数时，常常要调用vue文件内的方法并传值，下面记录js传值的方法：</p><ul><li><p>首先在vue页面的<code>mounted</code>模块将要调用的方法注册到window对象上，并引入对应的js文件后：</p><p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mounted()<span class="punctuation">&#123;</span></span><br><span class="line">  window.exampleFunction=this.exampleFunction</span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">method<span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">    exampleFunction(data)<span class="punctuation">&#123;</span></span><br><span class="line">        console.log(&#x27;收到方法调用&#x27;)</span><br><span class="line">        console.log(data<span class="punctuation">,</span>&#x27;data&#x27;)</span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></p></li><li><p>然后在该js文件里直接通过window调用vue的方法</p><p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">export function exampleJsFunction()<span class="punctuation">&#123;</span></span><br><span class="line">    let data=&#x27;textData&#x27;        </span><br><span class="line">    window.exampleFunction(data)</span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></p></li><li><p>完成上述步骤即可实现在js文件内调用vue内的方法并传值的操作，比在Vue中调用不同组件的方法简单。</p></li></ul>]]></content>
    
    
    <summary type="html">js文件调用vue文件内的方法并传值</summary>
    
    
    
    <category term="Vue" scheme="http://tangmenjue.top/categories/Vue/"/>
    
    <category term="JavaScript" scheme="http://tangmenjue.top/categories/JavaScript/"/>
    
    
    <category term="Vue" scheme="http://tangmenjue.top/tags/Vue/"/>
    
    <category term="JavaScript" scheme="http://tangmenjue.top/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>python异步多线程下载文件</title>
    <link href="http://tangmenjue.top/2023/11/01/python%E5%BC%82%E6%AD%A5%E6%89%B9%E9%87%8F%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6/"/>
    <id>http://tangmenjue.top/2023/11/01/python%E5%BC%82%E6%AD%A5%E6%89%B9%E9%87%8F%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6/</id>
    <published>2023-11-01T02:59:23.000Z</published>
    <updated>2023-11-01T02:59:23.000Z</updated>
    
    <content type="html"><![CDATA[<p>在实际项目中，难免会有短时间下载文件的需要。正常的批量下载文件要等前一个文件下载完成后才进行下一个文件的下载工作，下载速度较慢。而通过异步来下载可以实现多个文件同时下载的多线程操作。下面为异步下载文件的实现方法：</p><ul><li><p>首先需要通过<code>pip install aiohttp</code>下载<code>aiohttp</code>模块。</p></li><li><p>引入相关模块如下：</p><p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> aiohttp</span><br><span class="line"><span class="keyword">import</span> asyncio</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> uuid</span><br><span class="line"><span class="keyword">import</span> config</span><br><span class="line"><span class="keyword">from</span> services <span class="keyword">import</span> dbc</span><br><span class="line"><span class="keyword">from</span> utils.response_helper <span class="keyword">import</span> make_resp</span><br><span class="line"><span class="keyword">from</span> models.auth <span class="keyword">import</span> *</span><br></pre></td></tr></table></figure></p></li><li><p>定义函数<code>batch_download</code>用于批量下载：</p><p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">batch_download</span>(<span class="params">url_list</span>):</span><br><span class="line">  <span class="keyword">async</span> <span class="keyword">with</span> aiohttp.ClientSession() <span class="keyword">as</span> session:</span><br><span class="line">    tasks=[]</span><br><span class="line">    result=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(url_list)):</span><br><span class="line">      tasks.append(save_file(session, url_list[i]))</span><br><span class="line">    finished, unfinished = <span class="keyword">await</span> asyncio.wait(tasks)</span><br><span class="line">    result=[r.result() <span class="keyword">for</span> r <span class="keyword">in</span> finished]</span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure></p></li><li><p>定义函数<code>save_file</code>用于保存文件：</p><p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">save_file</span>(<span class="params">session,url</span>):</span><br><span class="line">  name=os.path.basename(url)</span><br><span class="line">  path = os.path.join(os.path.dirname(os.getcwd()), <span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;images&#x27;</span>) <span class="comment"># 拼接文件保存的相对路径</span></span><br><span class="line">  <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(path):</span><br><span class="line">        os.mkdir(path)</span><br><span class="line">  file=<span class="keyword">await</span> session.get(url)</span><br><span class="line">  suffix=name[name.rfind(<span class="string">&#x27;.&#x27;</span>):] <span class="comment"># 截取文件后缀</span></span><br><span class="line">  filename = uuid.uuid1().<span class="built_in">hex</span></span><br><span class="line">  file_abolutepath = os.path.join(path, filename+suffix)<span class="comment"># 拼接文件保存的绝对路径</span></span><br><span class="line">  file_code=<span class="keyword">await</span> file.read()</span><br><span class="line">  <span class="keyword">with</span> <span class="built_in">open</span>(file_abolutepath,<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(file_code)</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">str</span>(filename)</span><br></pre></td></tr></table></figure></p></li><li><p>通过<code>asyncio.run</code>方法调用批量下载函数<code>batch_download</code>：</p><p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">asyncio.run(batch_download(urlList))</span><br><span class="line"><span class="comment">#其中urlList的数据格式为[url1,url2]，url1和url2是需要下载的文件地址,例如urlList=[&#x27;http://www.baidu.com&#x27;,&#x27;http://tangmenjue.top&#x27;]</span></span><br></pre></td></tr></table></figure></p></li><li><p>通过以上方法即可实现异步下载文件</p></li></ul>]]></content>
    
    
    <summary type="html">使用aiohttp和asyncio实现python异步批量下载文件</summary>
    
    
    
    <category term="python" scheme="http://tangmenjue.top/categories/python/"/>
    
    <category term="异步IO" scheme="http://tangmenjue.top/categories/%E5%BC%82%E6%AD%A5IO/"/>
    
    
    <category term="python" scheme="http://tangmenjue.top/tags/python/"/>
    
    <category term="异步IO" scheme="http://tangmenjue.top/tags/%E5%BC%82%E6%AD%A5IO/"/>
    
  </entry>
  
  <entry>
    <title>Vue axios接口异步请求数据并同步返回</title>
    <link href="http://tangmenjue.top/2023/10/16/Vue%20axios%E6%8E%A5%E5%8F%A3%E5%BC%82%E6%AD%A5%E8%AF%B7%E6%B1%82%E6%95%B0%E6%8D%AE%E5%B9%B6%E5%90%8C%E6%AD%A5%E8%BF%94%E5%9B%9E/"/>
    <id>http://tangmenjue.top/2023/10/16/Vue%20axios%E6%8E%A5%E5%8F%A3%E5%BC%82%E6%AD%A5%E8%AF%B7%E6%B1%82%E6%95%B0%E6%8D%AE%E5%B9%B6%E5%90%8C%E6%AD%A5%E8%BF%94%E5%9B%9E/</id>
    <published>2023-10-16T04:03:40.000Z</published>
    <updated>2023-10-16T04:03:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>在实际项目开发中，经常要使用<code>axios</code>来请求数据。</p><p><code>axios</code>可以通过<code>async/await</code>来实现同步请求。</p><p>其中<code>async</code>用来修饰方法，其声明的方法为异步请求的方法，<code>await</code>只能在异步方法中使用，用于等待指定方法执行完成；<code>await</code>修饰的方法执行完成后，才会执行后续的代码。</p><p><code>axios</code>的<code>.then</code>模块前把this赋值给一个变量并在<code>.then</code>中代替<code>this</code>来使用，可以防止<code>this</code>指针发生变化导致引用全局变量无效的问题，如：</p><ul><li><p>``<code>json     getData() &#123;               var _this=this         axios.get(</code>https://tangmenjue.top`) .then(res =&gt; { _this.data = res.data }) }, <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">下面将介绍使用**`axios`异步请求数据不同步返回**时的处理方法：</span><br><span class="line"></span><br><span class="line">- 定义`getData`方法来发送axois请求，将请求返回值赋值给`this.data`，其中：使用`async`修饰`getData`方法，使用`await`修饰`axios`方法：</span><br><span class="line"></span><br><span class="line">```json</span><br><span class="line">async getData() &#123;      </span><br><span class="line">    var _this=this</span><br><span class="line">    await axios.get(`https://tangmenjue.top`)</span><br><span class="line">.then(res =&gt; &#123;</span><br><span class="line">    _this.data = res.data</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure></p></li><li><p>定义调用<code>getData</code>的方法<code>handleData</code>，其中：使用<code>async</code>修饰<code>handleData</code>方法，使用<code>await</code>修饰调用的<code>this.getData</code>方法：：</p><p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">async handleData() <span class="punctuation">&#123;</span>      </span><br><span class="line">    await this.getData()</span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></p></li><li><p>根据上述步骤即可实现将<code>axios</code>请求的数据同步传递给全局变量<code>this.data</code>。</p></li></ul>]]></content>
    
    
    <summary type="html">使用async/await解决axios异步请求数据不同步返回的问题。应用场景：axios异步请求数据并需要在.then回调函数里将返回值传到全局变量中</summary>
    
    
    
    <category term="Vue" scheme="http://tangmenjue.top/categories/Vue/"/>
    
    
    <category term="Vue" scheme="http://tangmenjue.top/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>Vue 监听兄弟组件数据变化并实时更新数据</title>
    <link href="http://tangmenjue.top/2023/07/18/Vue%20%E7%9B%91%E5%90%AC%E5%85%84%E5%BC%9F%E7%BB%84%E4%BB%B6%E6%95%B0%E6%8D%AE%E5%8F%98%E5%8C%96%E5%B9%B6%E5%AE%9E%E6%97%B6%E6%9B%B4%E6%96%B0%E6%95%B0%E6%8D%AE/"/>
    <id>http://tangmenjue.top/2023/07/18/Vue%20%E7%9B%91%E5%90%AC%E5%85%84%E5%BC%9F%E7%BB%84%E4%BB%B6%E6%95%B0%E6%8D%AE%E5%8F%98%E5%8C%96%E5%B9%B6%E5%AE%9E%E6%97%B6%E6%9B%B4%E6%96%B0%E6%95%B0%E6%8D%AE/</id>
    <published>2023-07-18T03:21:40.000Z</published>
    <updated>2023-07-18T03:21:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>在实际项目开发中，有时会遇到组件B需要监听兄弟组件A的数据是否有改动，并根据兄弟组件A的改动来更新自身数据或执行一定操作的需求。下面将介绍实现这一过程的方法：</p><ul><li><p>在Vue项目的<code>main.js</code>中 添加下面语句：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Vue.prototype.$eventBus = new Vue()</span><br></pre></td></tr></table></figure></li><li><p>在兄弟组件A中所要监听的事件中添加如下自定义事件的代码<code>this.$eventBus.$emit('SyncData')</code>。如需要监听<code>addDataA</code>事件的变化，则组件A中<code>script</code>模块的代码如下所示：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> methods<span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  addDataA() <span class="punctuation">&#123;</span><span class="comment">//函数内容可自行替换</span></span><br><span class="line">    axios.post(&#x27;testA&#x27;)</span><br><span class="line">      .then((res) =&gt; <span class="punctuation">&#123;</span></span><br><span class="line">        console.log(res.data)</span><br><span class="line">        this.$eventBus.$emit(&#x27;SyncData&#x27;)<span class="comment">//SyncData为自定义事件名，可修改</span></span><br><span class="line">      <span class="punctuation">&#125;</span>)</span><br><span class="line">      .catch((err) =&gt; <span class="punctuation">&#123;</span></span><br><span class="line">        console.log(err)</span><br><span class="line">      <span class="punctuation">&#125;</span>)</span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>在需要实时更新的组件B中添加监听方法的变化，就可以实现实时更新数据。在组件B的<code>script</code>模块中添加以下代码：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">mounted()<span class="punctuation">&#123;</span></span><br><span class="line">  this.$eventBus.$on(<span class="string">&quot;SyncData&quot;</span><span class="punctuation">,</span>()=&gt;<span class="punctuation">&#123;</span><span class="comment">//监听自定义事件是否被触发</span></span><br><span class="line">    this.onLoadDataB()<span class="comment">//自定义事件被触发时执行该函数</span></span><br><span class="line">  <span class="punctuation">&#125;</span>)</span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">methods<span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  onLoadDataB() <span class="punctuation">&#123;</span><span class="comment">//函数内容可自行替换</span></span><br><span class="line">    axios.get(&#x27;testB&#x27;)</span><br><span class="line">      .then((res) =&gt; <span class="punctuation">&#123;</span></span><br><span class="line">       console.log(res.data)</span><br><span class="line">      <span class="punctuation">&#125;</span>)</span><br><span class="line">      .catch((err) =&gt; <span class="punctuation">&#123;</span></span><br><span class="line">        console.log(err)</span><br><span class="line">      <span class="punctuation">&#125;</span>)</span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>为防止叠加调用<code>EventBus</code>，在组件B的<code>beforDestroy</code>生命钩子中，添加以下代码：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">beforDestroy()<span class="punctuation">&#123;</span></span><br><span class="line">       this.$eventBus.$off(<span class="string">&quot;SyncData&quot;</span>);  <span class="comment">//当这个组件销毁的时候bus也跟着一起销毁</span></span><br><span class="line">   <span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>至此，当兄弟组件A触发<code>addDataA</code>事件添加数据时，组件B便会触发事件<code>onLoadDataB</code>来加载数据。从而达到组件B随着兄弟组件A数据变化进行实时更新的目的。</p></li></ul><hr><h1 id="补充">补充：</h1><p>使用EventBus的好处在于：</p><ul><li>可全局使用</li><li>灵活性高，哪里需要放哪里，代码量少</li><li>跨组件通信，无需使用缓存</li></ul><p>相较于vuex，使用EventBus的缺点有：</p><ul><li><code>$EventBus.$emit</code>和<code>$eventBus.$on</code>必须成对出现</li><li>由于高灵活性，事件多了后，难以维护事件</li><li>在<code>$eventBus.$on</code>的组件里必须手动销毁<code>$eventBus</code>，否则会引发多次执行</li><li>复用性较差，需要在多个地方重复写逻辑</li></ul><p>综合优弊端分析可知：中大型项目不推荐用EventBus，建议用vuex做状态管理以便日后维护；若为小型项目，尤其是涉及多处跨组件通信时推荐使用EventBus</p>]]></content>
    
    
    <summary type="html">Vue 监听兄弟组件数据变化并实时更新数据</summary>
    
    
    
    <category term="Vue" scheme="http://tangmenjue.top/categories/Vue/"/>
    
    
    <category term="Vue" scheme="http://tangmenjue.top/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>Vue 水印自适应窗口方法</title>
    <link href="http://tangmenjue.top/2023/07/12/Vue%E6%B0%B4%E5%8D%B0%E8%87%AA%E9%80%82%E5%BA%94%E7%AA%97%E5%8F%A3%E6%96%B9%E6%B3%95/"/>
    <id>http://tangmenjue.top/2023/07/12/Vue%E6%B0%B4%E5%8D%B0%E8%87%AA%E9%80%82%E5%BA%94%E7%AA%97%E5%8F%A3%E6%96%B9%E6%B3%95/</id>
    <published>2023-07-12T02:13:34.000Z</published>
    <updated>2023-07-12T02:13:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>通过使用Vue的生命周期钩子函数和window对象的resize事件来实现水印根据窗口大小适配的功能：</p><ol type="1"><li><p>在Vue文件的<code>script</code>模块中 引入水印组件：</p><p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import watermark from &#x27;@zsit/watermark&#x27;;  </span><br></pre></td></tr></table></figure></p></li><li><p>在<code>script</code>模块的<code>export default</code>里，通过钩子函数<code>mounted</code>监听窗口大小的变化，并在销毁组件前移除事件监听器：</p><p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mounted()<span class="punctuation">&#123;</span></span><br><span class="line">  window.addEventListener(&#x27;resize&#x27;<span class="punctuation">,</span>this.handleResize)</span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">beforeDestroy()<span class="punctuation">&#123;</span></span><br><span class="line">  window.removeEventListener(&#x27;resize&#x27;<span class="punctuation">,</span>this.handleResize)</span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure></p></li><li><p>在<code>script</code>模块的里，定义<code>handleResize</code>方法来调用水印：</p><p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">methods<span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    handleResize()<span class="punctuation">&#123;</span></span><br><span class="line">          watermark(<span class="punctuation">&#123;</span></span><br><span class="line">                    watermark_txt<span class="punctuation">:</span> this.watermark_txt<span class="punctuation">,</span><span class="comment">//水印内容</span></span><br><span class="line">                    watermark_y<span class="punctuation">:</span><span class="number">80</span><span class="punctuation">,</span><span class="comment">//水印y轴初始位置</span></span><br><span class="line">                    watermark_y_space<span class="punctuation">:</span> <span class="number">60</span><span class="punctuation">,</span></span><br><span class="line">                    watermark_fontsize<span class="punctuation">:</span> <span class="string">&quot;12px&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    watermark_width<span class="punctuation">:</span> <span class="number">60</span><span class="punctuation">,</span></span><br><span class="line">                    watermark_height<span class="punctuation">:</span> <span class="number">60</span><span class="punctuation">,</span></span><br><span class="line">                  <span class="punctuation">&#125;</span>);</span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></p><p>至此，所生成的水印可根据窗口的变化而覆盖整个窗口。</p></li></ol>]]></content>
    
    
    <summary type="html">Vue 水印自适应窗口方法</summary>
    
    
    
    <category term="Vue" scheme="http://tangmenjue.top/categories/Vue/"/>
    
    
    <category term="Vue" scheme="http://tangmenjue.top/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>DBeaver Enterprise Edition 22.0 企业版破解方法</title>
    <link href="http://tangmenjue.top/2023/05/08/DBeaver%20Enterprise%20Edition%2022.0%20%E4%BC%81%E4%B8%9A%E7%89%88%E7%A0%B4%E8%A7%A3%E6%96%B9%E6%B3%95/"/>
    <id>http://tangmenjue.top/2023/05/08/DBeaver%20Enterprise%20Edition%2022.0%20%E4%BC%81%E4%B8%9A%E7%89%88%E7%A0%B4%E8%A7%A3%E6%96%B9%E6%B3%95/</id>
    <published>2023-05-08T09:40:44.000Z</published>
    <updated>2023-05-08T09:40:44.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="下载方式二选一">下载方式二选一</h1><h2 id="百度云网盘所有文件一齐下载">百度云网盘:所有文件一齐下载</h2><p>链接：https://pan.baidu.com/s/1b9XilYsxIL40Uk9_27unFA?pwd=2023 提取码：2023</p><h2 id="官网下载">官网下载</h2><h3 id="dbeaver-ee-22.0">1、DBeaver EE 22.0</h3><p>DBeaver EE官网地址：<a href="https://dbeaver.com/download/enterprise/">Download Dbeaver Enterprise Edition</a></p><h3 id="jdk11">2、JDK11</h3><p>JDK11官网地址：<a href="https://www.oracle.com/java/technologies/downloads/#java11-windows">Download JDK11</a></p><h3 id="javaagent">3、javaagent</h3><p>百度云网盘下载：</p><p>链接：https://pan.baidu.com/s/1WVyatIk08D_F-BhBh2zfwA?pwd=2023 提取码：2023</p><h2 id="破解步骤">破解步骤</h2><p>1、安装DBeaver Enterprise Edition，并记下安装路径</p><p>2、安装JDK11，并记下安装路径</p><p>3、设置JDK11环境变量，具体操作步骤为：此电脑-右键-属性-高级系统设置-环境变量-在系统变量出找到Path变量双击-点击新建-将JDK11安装目录路径粘贴上去（具体到<code>/bin</code>的位置），参考路径如下：<img src="/2023/05/08/DBeaver%20Enterprise%20Edition%2022.0%20%E4%BC%81%E4%B8%9A%E7%89%88%E7%A0%B4%E8%A7%A3%E6%96%B9%E6%B3%95/1.png"></p><p>4、以管理员身份运行cmd，并切换到JDK11安装目录，如本文中JDK11安装目录为<code>E:\Java\jdk-11\bin</code>中，执行下面命令生成jar包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jlink.exe --module-path jmods --add-modules java.desktop --output jre</span><br></pre></td></tr></table></figure><p>5、打开JDK11安装目录<code>E:\Java\jdk-11\bin</code>，复制生成的jar包，打开DBeaver EE软件安装目录，删除目录中的jre文件夹，并粘贴刚刚生成的jre文件夹；将网盘中下载的<code>dbeaver-agent.jar</code>破解包粘贴到DBeaver EE软件安装目录中</p><p><img src="/2023/05/08/DBeaver%20Enterprise%20Edition%2022.0%20%E4%BC%81%E4%B8%9A%E7%89%88%E7%A0%B4%E8%A7%A3%E6%96%B9%E6%B3%95/2.png"></p><p>6、在DBeaver EE软件安装目录中，使用记事本打开<code>dbeaver.ini</code>文件，添加jdk11和dbeaver-agent.jar路径如下：</p><p><img src="/2023/05/08/DBeaver%20Enterprise%20Edition%2022.0%20%E4%BC%81%E4%B8%9A%E7%89%88%E7%A0%B4%E8%A7%A3%E6%96%B9%E6%B3%95/3.png"></p><p>至此，DBeaver Enterprise Edition 22.0 企业版破解已成功激活，可以正常开始使用了</p>]]></content>
    
    
    <summary type="html">DBeaver Enterprise Edition 22.0 企业版破解方法</summary>
    
    
    
    <category term="数据库工具" scheme="http://tangmenjue.top/categories/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="数据库工具" scheme="http://tangmenjue.top/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes实践之从yaml创建工作负载</title>
    <link href="http://tangmenjue.top/2023/03/31/Kubernetes%E5%AE%9E%E8%B7%B5%E4%B9%8B%E4%BB%8Eyaml%E5%88%9B%E5%BB%BA%E5%B7%A5%E4%BD%9C%E8%B4%9F%E8%BD%BD/"/>
    <id>http://tangmenjue.top/2023/03/31/Kubernetes%E5%AE%9E%E8%B7%B5%E4%B9%8B%E4%BB%8Eyaml%E5%88%9B%E5%BB%BA%E5%B7%A5%E4%BD%9C%E8%B4%9F%E8%BD%BD/</id>
    <published>2023-03-31T09:40:12.000Z</published>
    <updated>2023-03-31T09:40:12.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="pod">Pod</h1><p>Pod是Kubernetes中的基本单位。容器本身不会直接分配到主机上，而会封装到名为Pod的对象中。Kubernetes以Pod为最小单位进行调度、伸缩并共享资源、管理生命周期。</p><p>Pod通常表示单个应用程序，由一个或多个关系紧密的容器构成，这些容器拥有同样的生命周期，作为一个整体一起编排到Node上。这些容器共享环境、存储卷（volume）和IP空间。尽管Pod基于一个或多个容器，但应将Pod视作一个单一的整体、单独的应用程序。</p><h1 id="pod模板">Pod模板</h1><p>在创建Pod时，需要定义一个模板文件（.yml文件），并将其称为Pod模板。可以用Pod模板来定义资源，以下是Pod模板的主要内容及对应说明：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span> <span class="comment"># 使用的API版本，V1表示使用 Kubernetes API的稳定版本</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span> <span class="comment"># 要创建的资源对象，这里为关键字Pod</span></span><br><span class="line"><span class="attr">metadata:</span> <span class="comment"># 表示该资源对象的元数据，一个资源对象可拥有多个元数据。表示资源的标识信息</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">String</span> <span class="comment"># 元数据，必填，Pod的名字</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">String</span> <span class="comment"># 元数据，Pod的命名空间</span></span><br><span class="line">  <span class="attr">labels:</span> <span class="comment"># 元数据，标签列表</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">value</span> <span class="comment"># 元数据，可定义多个标签的键值对 </span></span><br><span class="line">  <span class="attr">annotations:</span> <span class="comment"># 元数据，自定义注解列表</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">value</span> <span class="comment"># 元数据，可定义多个标签的键值对 </span></span><br><span class="line"><span class="attr">spec:</span> <span class="comment"># 该资源对象的具体设置，Pod中容器的详细配置，必填</span></span><br><span class="line">  <span class="attr">containers:</span> <span class="comment"># Pod中的容器列表，必填，可以有多个容器</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">String</span> <span class="comment"># 要创建的容器名称，必填                </span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">String</span> <span class="comment"># 容器的镜像地址，必填</span></span><br><span class="line">    <span class="attr">imagePullPolicy:</span> [<span class="string">Always|Never|IfNotPresent</span>] <span class="comment"># 镜像的下载策略，支持3种模式</span></span><br><span class="line">    <span class="attr">command:</span> [<span class="string">String</span>] <span class="comment"># 容器的启动命令列表（不配置则使用镜像内部的命令）</span></span><br><span class="line">    <span class="attr">args:</span> [<span class="string">String</span>] <span class="comment"># 启动参数列表</span></span><br><span class="line">    <span class="attr">workingDir:</span> <span class="string">String</span> <span class="comment"># 容器的工作目录</span></span><br><span class="line">    <span class="attr">volumeMounts:</span> <span class="comment"># 挂载到容器内部的存储卷设置</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">String</span> <span class="comment"># 为了引用Pod定义的共享存储卷名称，要用volumes[]部分定义的卷名</span></span><br><span class="line">      <span class="attr">mountPath:</span> <span class="string">String</span> <span class="comment"># 存储卷在容器内挂载的绝对路径，应少于512个字符</span></span><br><span class="line">      <span class="attr">readOnly:</span> <span class="string">Boolean</span> <span class="comment"># 是否为只读模式</span></span><br><span class="line">    <span class="attr">ports:</span> <span class="comment"># 容器需要暴露的端口号列表</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">String</span> <span class="comment"># 端口名称</span></span><br><span class="line">      <span class="attr">containerPort:</span> <span class="string">int</span> <span class="comment"># 容器要暴露的端口</span></span><br><span class="line">      <span class="attr">hostPost:</span> <span class="string">int</span> <span class="comment"># 容器所在主机监听的端口（把容器暴露的端口映射到宿主机的端口）</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">String</span> <span class="comment"># 端口协议，支持TCP和UDP，默认为TCP</span></span><br><span class="line">    <span class="attr">env:</span> <span class="comment"># 容器运行前要设置的环境变量列表</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">String</span> <span class="comment"># 环境变量名称</span></span><br><span class="line">      <span class="attr">value:</span> <span class="string">String</span> <span class="comment"># 环境变量值</span></span><br><span class="line">    <span class="attr">resources:</span> <span class="comment"># 资源限制和请求的设置</span></span><br><span class="line">      <span class="attr">limits:</span> <span class="comment"># 资源限制的设置</span></span><br><span class="line">        <span class="attr">cpu:</span> <span class="string">String</span> <span class="comment"># cpu限制，单位为CPU内核数，也可以使用小数，如0.1，0.1等价于表达式100m，表示100milicpu</span></span><br><span class="line">        <span class="attr">memory:</span> <span class="string">String</span> <span class="comment"># 内存限制，单位可以为MiB/GiB/MB/GB (1MB=1024x1024B=1024x1024x1000x1000B)。</span></span><br><span class="line">      <span class="attr">requests:</span> <span class="comment"># 资源请求的设置</span></span><br><span class="line">        <span class="attr">cpu:</span> <span class="string">String</span> <span class="comment"># cpu请求，容器启动时的初始可用数量</span></span><br><span class="line">        <span class="attr">memory:</span> <span class="string">String</span> <span class="comment"># 内存请求，容器启动时的初始可用数量</span></span><br><span class="line">      <span class="attr">livenessProbe:</span> <span class="comment"># Pod内容器健康检查的设置，当探测几次无响应后将自动重启该容器。</span></span><br><span class="line">      <span class="comment"># 检查方法有exec、httpGet、tcpSocket，对一个容器只要设置一种方法即可</span></span><br><span class="line">        <span class="attr">exec:</span> <span class="comment"># 通过exec方式来检查Pod内各容器的健康情况</span></span><br><span class="line">          <span class="attr">command:</span> [<span class="string">String</span>] <span class="comment"># exec方式需要指定的命令或脚本</span></span><br><span class="line">        <span class="attr">httpGet:</span> <span class="comment"># 通过httpGet方式来检查Pod内各容器的健康情况，需要指定path、port</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">String</span></span><br><span class="line">          <span class="attr">port:</span> <span class="string">number</span></span><br><span class="line">          <span class="attr">host:</span> <span class="string">String</span></span><br><span class="line">          <span class="attr">scheme:</span> <span class="string">String</span></span><br><span class="line">          <span class="attr">httpHeaders:</span> </span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">String</span></span><br><span class="line">            <span class="attr">value:</span> <span class="string">String</span></span><br><span class="line">        <span class="attr">tcpSocket:</span> <span class="comment"># 通过tcpSocket方式来检查Pod内各容器的健康情况</span></span><br><span class="line">          <span class="attr">port:</span> <span class="string">number</span>    </span><br><span class="line">        <span class="attr">initialDelaySeconds:</span> <span class="number">0</span> <span class="comment"># 容器启动完成后，首次探测的时间（单位为秒）</span></span><br><span class="line">        <span class="attr">timeoutSeconds:</span> <span class="number">0</span> <span class="comment"># 对容器进行健康检查时探测等待响应的超时时间（单位为秒，默认为1s）</span></span><br><span class="line">        <span class="attr">periodSeconds:</span> <span class="number">0</span> <span class="comment"># 对容器监控检查的定期探测时间设置（单位为秒，默认10s一次）</span></span><br><span class="line">        <span class="attr">successThreshold:</span> <span class="number">0</span> </span><br><span class="line">        <span class="attr">failureThreshold:</span> <span class="number">0</span>  </span><br><span class="line">        <span class="attr">securityContext:</span> <span class="comment"># 安全配置</span></span><br><span class="line">          <span class="attr">privileged:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">restartPolicy:</span> [<span class="string">Always|Never|OnFailure</span>] <span class="comment"># Pod的重启策略，有三种可以选   </span></span><br><span class="line">      <span class="attr">nodeSelector:</span> <span class="comment"># 节点选择，设置nodeSelector表示将该Pod调度到包含这个标签的节点上</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">value</span> </span><br><span class="line">      <span class="attr">imagePullSecrets:</span> <span class="comment"># 拉取镜像时使用的secret名称</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">String</span></span><br><span class="line">      <span class="attr">hostNetwork:</span> <span class="literal">false</span> <span class="comment"># 是否使用主机网络模式，默认为false</span></span><br><span class="line">    <span class="attr">volumes:</span> <span class="comment"># 在该Pod上定义的共享存储卷列表</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">String</span> <span class="comment"># 共享存储卷名称</span></span><br><span class="line">      <span class="attr">emptyDir:</span> &#123;&#125; <span class="comment"># 类型为emptyDir的存储卷，与Pod有相同生命周期的一个临时目录，为空值</span></span><br><span class="line">      <span class="attr">hostPath:</span> <span class="comment"># 类型为hostPathr的存储卷，将会挂载Pod所在宿主机的目录</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">String</span></span><br><span class="line">      <span class="attr">secret:</span> <span class="comment">#类型为secret的存储卷，在容器内部挂载集群中预定义的secret对象</span></span><br><span class="line">        <span class="attr">secretName:</span> <span class="string">String</span></span><br><span class="line">        <span class="attr">items:</span> </span><br><span class="line">        <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">String</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">String</span></span><br><span class="line">        <span class="attr">configMap:</span> <span class="comment">#类型为secret的存储卷，挂载预定义的configMap对象到容器内部</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">String</span></span><br><span class="line">          <span class="attr">items:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">String</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">String</span>    </span><br></pre></td></tr></table></figure><h1 id="控制器pod的管理">控制器——Pod的管理</h1><p>一般来说，用户不会直接创建Pod，而是创建控制器，让控制器来管理Pod。在控制器中定义Pod的部署方式，如有多少个副本、需要在哪种Node上运行等。根据不同的业务场景，Kubernetes提供了多种控制器。</p><h2 id="deployment-控制器部署">Deployment 控制器（部署）</h2><p>Deployment控制器是最常用的工作负载对象之一。</p><p>在使用Kubernetes时，通常要管理由多个相同Pod所组成的Pod集合，而不是单个Pod。通过Deployment控制器，可以定义Pod模板，并设置相应控制参数以实现水平伸缩，以调节正在运行的相同Pod数。</p><p>Deployment控制器保证在集群中部署的Pod数量和配置中的Pod数量一致。若Pod或主机出现故障，则会自动启用新的Pod进行补充。</p><p>创建Deployment 控制器也需要定义一个模板文件（.yml文件）。可以用Deployment控制器的模板来定义资源，以下是模板的主要内容及对应说明：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span> <span class="comment"># 使用的API版本，V1表示使用稳定版本</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span> <span class="comment"># 要创建的资源对象，这里为关键字Deployment</span></span><br><span class="line"><span class="attr">metadata:</span> <span class="comment"># 表示该资源对象的元数据，一个资源对象可拥有多个元数据。表示资源的标识信息</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">String</span> <span class="comment"># 元数据，必填，Deployment控制器的名字</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">String</span> <span class="comment"># 元数据，Deployment控制器的命名空间</span></span><br><span class="line">  <span class="attr">labels:</span> <span class="comment"># 元数据，标签列表</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">value</span> <span class="comment"># 元数据，可定义多个标签的键值对 </span></span><br><span class="line">  <span class="attr">annotations:</span> <span class="comment"># 元数据，自定义注解列表</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">value</span> <span class="comment"># 元数据，可定义多个标签的键值对 </span></span><br><span class="line"><span class="attr">spec:</span> </span><br><span class="line">  <span class="attr">selector:</span> <span class="comment"># 必填，用于指定Deployment控制器针对的Pod的标签选择器，需要与template中的标签匹配</span></span><br><span class="line">    <span class="attr">matchLabels:</span>  <span class="comment"># 定义需要匹配的标签集合</span></span><br><span class="line">      <span class="attr">key:</span> <span class="string">value</span> <span class="comment"># 需要匹配的标签，可定义多个标签的键值对</span></span><br><span class="line">  <span class="attr">template:</span> [<span class="string">PodTemplate</span>] <span class="comment"># 必填，Pod模板，它与Pod具有完全相同的结构，不过他是嵌套的，且不需要带apiVersion或kind字段</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="string">int</span> <span class="comment"># 指定所需Pod的数量，默认为1</span></span><br><span class="line">  <span class="attr">strategy:</span> <span class="comment"># 更新时替换旧Pod的策略</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">Recreate/RollingUpdate</span> <span class="comment"># Recreate表示现有的Pod都会在创建新的Pod之前被终止，RollingUpdate表示以滚动更新方式更新Pod</span></span><br><span class="line">    <span class="attr">rollingUpdate:</span></span><br><span class="line">      <span class="attr">maxSurge:</span> <span class="string">int/int%</span> <span class="comment"># 在滚动更新时，在所需数量的Pod上允许创建的最大Pod数，也可用百分比形式</span></span><br><span class="line">      <span class="attr">maxUnavailable:</span> <span class="string">int/int%</span> <span class="comment"># 在滚动更新时，同时存在最大不可用Pod数，也可用百分比形式</span></span><br><span class="line">  <span class="attr">progressDeadlineseconds:</span> <span class="string">int</span> <span class="comment"># Deployment控制器处于进行状态时的等待秒数，超过这个时间将会变为失败</span></span><br><span class="line">  <span class="attr">minReadySeconds:</span> <span class="string">int</span> <span class="comment"># 指定新创建的Pod应该在没有任何容器崩溃的情况下准备好的最短秒数</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="string">int</span> <span class="comment"># 指定要保留的允许回滚的旧ReplicaSet数量</span></span><br><span class="line">  <span class="attr">paused:</span> <span class="string">boolean</span> <span class="comment"># 默认为false，用于暂停和恢复部署，当暂停部署时，Pod模板中spec属性的任何更改都不会触发新的部署</span></span><br></pre></td></tr></table></figure><h2 id="daemonset-控制器有状态副本集">DaemonSet 控制器（有状态副本集）</h2><p>DaemonSet 控制器是一种特殊的Pod控制器，会在集群中的各个节点上运行单一的Pod副本。它非常适合部署那些为节点本身提供服务或执行维护的Pod。如对于日志收集和转发、监控以及运行以增加节点本身功能为目的的服务都使用DaemonSet 控制器。</p><p>DaemonSet 控制器的一些典型用法包括但不限于以下几种：</p><ul><li>运行集群存储Daemon控制器，如在每个Node上运行glusterd、ceph。</li><li>在每个Node上运行日志收集Daemon控制器，如Fluentd、logstash。</li><li>在每个Node上运行监控Daemon控制器，如Prometheus Node Exporter、collectd、Datadog代理、New Relic代理或Ganglia gmond。</li></ul><p>创建DaemonSet 控制器的模板与Deployment控制器的模板相同</p><h2 id="job与cronjob控制器">Job与CronJob控制器</h2><h3 id="job工作负载">Job工作负载</h3><p>Job的工作负载对象基于某一特定任务而运行，当运行任务的容器完成工作后，就会成功退出。若需要执行一次性任务，而非提供连续的服务，则适合创建job工作负载。</p><p>Job控制器可以执行3种类型的任务：</p><ul><li><p>一次性任务：通常只会启动一个Pod（除非Pod失败）。一旦Pod成功终止，Job就算完成了。其模板如下：</p><p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">batch/v1</span> <span class="comment"># 使用的API版本，V1表示使用稳定版本</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Job</span> <span class="comment"># 要创建的资源对象，这里为关键字Job</span></span><br><span class="line"><span class="attr">metadata:</span> <span class="comment"># 表示该资源对象的元数据，一个资源对象可拥有多个元数据。表示资源的标识信息</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">String</span> <span class="comment"># 元数据，必填，Job工作负载的名字</span></span><br><span class="line"><span class="attr">spec:</span> </span><br><span class="line">  <span class="attr">template:</span>  <span class="comment"># 必填，Pod模板，它与Pod具有完全相同的结构，不过他是嵌套的，且不需要带apiVersion或kind字段</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">activeDeadlineSeconds:</span> <span class="string">int</span> <span class="comment"># 指定执行任务的上限时间（单位为秒），超时时任务将强制终止并删除</span></span><br><span class="line">      <span class="attr">ttlSecondsAfterFinished:</span> <span class="string">int</span> <span class="comment"># 用于确定在所有任务执行完成后，需要等待多少秒才可删除Job，默认关闭</span></span><br><span class="line">      <span class="attr">restartPolicy:</span> [<span class="string">Never|OnFailure</span>] </span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">String</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">String</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> </span><br><span class="line">        <span class="attr">command:</span> [<span class="string">String</span>]</span><br><span class="line">          <span class="bullet">-</span> <span class="string">--feature-gates=TTLSecondsAfterFinished=true</span> <span class="comment"># 手动开启自动删除Job功能</span></span><br><span class="line">        <span class="attr">args:</span> [<span class="string">String</span>] </span><br></pre></td></tr></table></figure></p></li><li><p>串行式任务：连续、多次地执行某一任务。当上一个任务完成时，接着执行下一个任务，直到全部任务执行完，可以通过spec.completions属性指定执行次数。其模板如下：</p><p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">batch/v1</span> <span class="comment"># 使用的API版本，V1表示使用稳定版本</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Job</span> <span class="comment"># 要创建的资源对象，这里为关键字Job</span></span><br><span class="line"><span class="attr">metadata:</span> <span class="comment"># 表示该资源对象的元数据，一个资源对象可拥有多个元数据。表示资源的标识信息</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">String</span> <span class="comment"># 元数据，必填，Job工作负载的名字</span></span><br><span class="line"><span class="attr">spec:</span> </span><br><span class="line">  <span class="attr">activeDeadlineSeconds:</span> <span class="string">int</span> <span class="comment"># 指定执行任务的上限时间（单位为秒），超时时任务将强制终止并删除</span></span><br><span class="line">  <span class="attr">completions:</span> <span class="string">int</span> <span class="comment"># 设置任务执行次数</span></span><br><span class="line">  <span class="attr">template:</span>  <span class="comment"># 必填，Pod模板，它与Pod具有完全相同的结构，不过他是嵌套的，且不需要带apiVersion或kind字段</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">restartPolicy:</span> [<span class="string">Never|OnFailure</span>] </span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">String</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">String</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> </span><br><span class="line">        <span class="attr">command:</span> [<span class="string">String</span>] </span><br><span class="line">        <span class="attr">args:</span> [<span class="string">String</span>] </span><br><span class="line">  </span><br></pre></td></tr></table></figure></p></li><li><p>并行式任务：同一时间并发多次执行任务。可以通过spec.parallelism属性指定并发数，也可以配合spec.completions属性指定总任务的执行次数。其模板如下：</p><p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">batch/v1</span> <span class="comment"># 使用的API版本，V1表示使用稳定版本</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Job</span> <span class="comment"># 要创建的资源对象，这里为关键字Job</span></span><br><span class="line"><span class="attr">metadata:</span> <span class="comment"># 表示该资源对象的元数据，一个资源对象可拥有多个元数据。表示资源的标识信息</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">String</span> <span class="comment"># 元数据，必填，Job工作负载的名字</span></span><br><span class="line"><span class="attr">spec:</span> </span><br><span class="line">  <span class="attr">activeDeadlineSeconds:</span> <span class="string">int</span> <span class="comment"># 指定执行任务的上限时间（单位为秒），超时时任务将强制终止并删除</span></span><br><span class="line">  <span class="attr">completions:</span> <span class="string">int</span> <span class="comment"># 设置任务执行次数</span></span><br><span class="line">  <span class="attr">parallelism:</span> <span class="string">int</span> <span class="comment"># 设置任务并行数 </span></span><br><span class="line">  <span class="attr">template:</span>  <span class="comment"># 必填，Pod模板，它与Pod具有完全相同的结构，不过他是嵌套的，且不需要带apiVersion或kind字段</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">restartPolicy:</span> [<span class="string">Never|OnFailure</span>] </span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">String</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">String</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> </span><br><span class="line">        <span class="attr">command:</span> [<span class="string">String</span>] </span><br><span class="line">        <span class="attr">args:</span> [<span class="string">String</span>] </span><br><span class="line">  </span><br></pre></td></tr></table></figure></p></li></ul><h3 id="cronjob控制器">CronJob控制器</h3><p>CronJob控制器是在Job的基础上增加了时间调度，可以在给定的时间点运行一个任务，也可以定期地运行。</p><p>通过CronJob控制器，可以实现以下类型的Job：</p><ul><li>在未来的某个指定时间执行一次Job，例如某项临时任务</li><li>周期性地运行Job，例如，定期备份，发送邮件等</li></ul><p>CronJob控制器的模板如下所示：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">batch/v1betal</span> <span class="comment"># CronJob控制器目前只存在betal版本中</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">CronJob</span> <span class="comment"># 要创建的资源对象，这里为关键字CronJob</span></span><br><span class="line"><span class="attr">metadata:</span> <span class="comment"># 表示该资源对象的元数据，一个资源对象可拥有多个元数据。表示资源的标识信息</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">String</span> <span class="comment"># 元数据，必填，CronJob控制器的名字</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">String</span> <span class="comment"># 元数据，CronJob控制器的命名空间</span></span><br><span class="line">  <span class="attr">labels:</span> <span class="comment"># 元数据，标签列表</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">value</span> <span class="comment"># 元数据，可定义多个标签的键值对 </span></span><br><span class="line">  <span class="attr">annotations:</span> <span class="comment"># 元数据，自定义注解列表</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">value</span> <span class="comment"># 元数据，可定义多个标签的键值对 </span></span><br><span class="line"><span class="attr">spec:</span> </span><br><span class="line">  <span class="attr">schedule:</span> <span class="string">String</span> <span class="comment"># 必填，指定任务运行周期，格式同Cron</span></span><br><span class="line">  <span class="attr">jobTemplate:</span> [<span class="string">JobTemplate</span>] <span class="comment"># 必填，Job模板</span></span><br><span class="line">  <span class="attr">startingDeadlineSeconds:</span> <span class="string">int</span> <span class="comment"># 启动Job的期限（秒）。若执行时间超时，Job将被任务是失败的。若没有指定，则没有期限</span></span><br><span class="line">  <span class="attr">concurrencyPolicy:</span> [<span class="string">Allow|Forbid|Replace</span>]</span><br><span class="line">  <span class="comment"># 若上一个周期的Job没执行完，而下一个周期已开始，在这种并发场景下默认采用Allow策略，允许并发运行Job</span></span><br><span class="line">  <span class="comment"># Forbid表示禁止并发运行，若上一个周期的Job没执行完，则下一个周期会被忽略并不再执行</span></span><br><span class="line">  <span class="comment"># Replace表示取消当前正在运行的Job，用一个新的来替换</span></span><br><span class="line">  <span class="attr">suspend:</span> <span class="string">boolean</span> <span class="comment"># 若设置为true，而上一个周期的Job没执行完，而下一个周期已开始，则后续所有执行都会被挂起</span></span><br><span class="line">  <span class="attr">successfulJobsHistoryLimit:</span> <span class="string">int</span> <span class="comment"># 保留多少条执行成功的Job记录，默认为3</span></span><br><span class="line">  <span class="attr">failedJobsHistoryLimit:</span> <span class="string">int</span> <span class="comment"># 保留多少条执行失败的Job记录，默认为1</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Kubernetes实践之从yaml创建工作负载</summary>
    
    
    
    <category term="Kubernetes" scheme="http://tangmenjue.top/categories/Kubernetes/"/>
    
    
    <category term="Kubernetes" scheme="http://tangmenjue.top/tags/Kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>docker-compose一键部署Elasticsearch Logstash Kibana</title>
    <link href="http://tangmenjue.top/2023/03/07/docker-compose%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2Elasticsearch%20Logstash%20elasticsearch-head/"/>
    <id>http://tangmenjue.top/2023/03/07/docker-compose%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2Elasticsearch%20Logstash%20elasticsearch-head/</id>
    <published>2023-03-07T02:16:08.000Z</published>
    <updated>2023-03-07T02:16:08.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介">简介</h1><p>在使用Elasticsearch进行全文搜索时，会使用到Elasticsearch（搜索引擎）、Logstash（数据同步）、Kibana（数据可视化）这三个中间件。在开发或测试环境中部署项目时，常使用docker-compose一键部署项目所需的环境，因此本文记录使用docker-compose一键部署Elasticsearch、Logstash和Kibana的过程。</p><h1 id="部署">部署</h1><h2 id="端口说明">端口说明</h2><ul><li>Elasticsearch：9200（HTTP通信）和9300（TCP通信）</li><li>Logstash：5044和9600（TCP通信）</li><li>Kibana：5601</li></ul><h2 id="配置文件">配置文件</h2><h3 id="docker-compose.yml"><code>docker-compose.yml</code></h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">elasticsearch:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">docker.elastic.co/elasticsearch/elasticsearch:7.16.2</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">elasticsearch_server</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">discovery.type=single-node</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">discovery.zen.minimum_master_nodes=1</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ES_JAVA_OPTS=-Xms3g</span> <span class="string">-Xmx3g</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;/home/docker_data/myproj/elasticsearch/data:/data&quot;</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">9200</span><span class="string">:9200</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">9300</span><span class="string">:9300</span> </span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="attr">default:</span>     <span class="comment"># 指定使用的网络</span></span><br><span class="line">      <span class="attr">common:</span></span><br><span class="line">        <span class="attr">aliases:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">elasticsearch</span>     <span class="comment"># 该容器的别名，在 elk_net 网络中的其他容器可以通过别名 elasticsearch 来访问到该容器</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">kibana:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">docker.elastic.co/kibana/kibana:7.16.2</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">elasticsearch</span>    </span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">kibana_server</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span>    </span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ELASTICSEARCH_URL=http://elasticsearch:9200</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SERVER_NAME=kibana</span>    </span><br><span class="line">    <span class="comment"># 如需具体配置，可以创建./config/kibana.yml，并映射</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;/home/docker_data/myproj/config/kibana.yml:/config/kibana.yml&quot;</span>      </span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;5601:5601&quot;</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="attr">default:</span></span><br><span class="line">      <span class="attr">common:</span></span><br><span class="line">        <span class="attr">aliases:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">kibana</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">logstash:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">docker.elastic.co/logstash/logstash:7.16.2</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">elasticsearch</span>    </span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">logstash_server</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span> </span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">LS_JAVA_OPTS=-Xmx256m</span> <span class="string">-Xms256m</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;/home/docker_data/myproj/config/logstash.conf:/config/logstash.conf&quot;</span>      </span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="attr">default:</span></span><br><span class="line">      <span class="attr">common:</span></span><br><span class="line">        <span class="attr">aliases:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">logstash</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">entrypoint:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">logstash</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">-f</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/config/logstash.conf</span></span><br><span class="line">    <span class="attr">logging:</span></span><br><span class="line">      <span class="attr">driver:</span> <span class="string">&quot;json-file&quot;</span></span><br><span class="line">      <span class="attr">options:</span></span><br><span class="line">        <span class="attr">max-size:</span> <span class="string">&quot;200m&quot;</span></span><br><span class="line">        <span class="attr">max-file:</span> <span class="string">&quot;3&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line"> <span class="attr">common:</span></span><br><span class="line">  <span class="attr">external:</span></span><br><span class="line">   <span class="attr">name:</span> <span class="string">nginx-bridge</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="elasticsearch.yml"><code>elasticsearch.yml</code></h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">cluster.name:</span> <span class="string">&quot;es-server&quot;</span></span><br><span class="line"><span class="attr">network.host:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line"><span class="attr">http.cors.enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">http.cors.allow-origin:</span> <span class="string">&quot;*&quot;</span></span><br><span class="line"><span class="attr">http.cors.allow-headers:</span> <span class="string">Authorization</span></span><br><span class="line"><span class="attr">xpack.security.enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">xpack.security.transport.ssl.enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="kibana.yml"><code>kibana.yml</code></h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server.host:</span> <span class="string">&quot;0.0.0.0&quot;</span></span><br><span class="line"><span class="attr">server.shutdownTimeout:</span> <span class="string">&quot;5s&quot;</span></span><br><span class="line"><span class="attr">elasticsearch.hosts:</span> [ <span class="string">&quot;http://elasticsearch:9200&quot;</span> ]</span><br><span class="line"><span class="attr">monitoring.ui.container.elasticsearch.enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">elasticsearch.username:</span> <span class="string">&quot;elastic&quot;</span></span><br><span class="line"><span class="attr">elasticsearch.password:</span> <span class="string">&quot;123456&quot;</span></span><br></pre></td></tr></table></figure><h3 id="logstash.yml"><code>logstash.yml</code></h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">http.host:</span> <span class="string">&quot;0.0.0.0&quot;</span></span><br><span class="line"><span class="attr">xpack.monitoring.elasticsearch.hosts:</span> [ <span class="string">&quot;http://elasticsearch:9200&quot;</span> ]</span><br><span class="line"><span class="attr">xpack.monitoring.enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">xpack.monitoring.elasticsearch.username:</span> <span class="string">logstash_system</span></span><br><span class="line"><span class="attr">xpack.monitoring.elasticsearch.password:</span> <span class="number">123456</span></span><br></pre></td></tr></table></figure><h3 id="logstash.conf"><code>logstash.conf</code></h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">input</span> &#123;</span><br><span class="line">    <span class="string">stdin</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="string">jdbc</span> &#123;</span><br><span class="line">      <span class="comment"># 数据库连接地址</span></span><br><span class="line">      <span class="string">jdbc_connection_string</span> <span class="string">=&gt;</span> <span class="string">&quot;jdbc:postgresql://127.0.0.1:5432/postgres&quot;</span></span><br><span class="line">      <span class="comment"># 数据库连接账号密码：</span></span><br><span class="line">      <span class="string">jdbc_user</span> <span class="string">=&gt;</span> <span class="string">&quot;postgres&quot;</span></span><br><span class="line">      <span class="string">jdbc_password</span> <span class="string">=&gt;</span> <span class="string">&quot;123456&quot;</span></span><br><span class="line">      <span class="comment"># Pg依赖包路径</span></span><br><span class="line">      <span class="string">jdbc_driver_library</span> <span class="string">=&gt;</span> <span class="string">&quot;pgsql\postgresql-42.5.1.jar&quot;</span></span><br><span class="line">      <span class="string">jdbc_driver_class</span> <span class="string">=&gt;</span> <span class="string">&quot;org.postgresql.Driver&quot;</span></span><br><span class="line">      <span class="comment"># 开启分页查询，默认为false</span></span><br><span class="line">      <span class="string">jdbc_paging_enabled</span> <span class="string">=&gt;</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">      <span class="comment"># 单次分页查询条数（默认100000，若字段较多且更新频率较高，则建议调低此值）</span></span><br><span class="line">      <span class="string">jdbc_page_size</span> <span class="string">=&gt;</span> <span class="string">&quot;300000&quot;</span></span><br><span class="line">      <span class="string">use_column_value</span> <span class="string">=&gt;</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">      <span class="string">tracking_column</span> <span class="string">=&gt;</span> <span class="string">&quot;id&quot;</span> <span class="comment">#根据id字段更新</span></span><br><span class="line">      <span class="comment"># statement为查询数据sql，若sql较复杂，建议通过statement_filepath 配置sql文件的存放路径；</span></span><br><span class="line">      <span class="comment"># statement =&gt; &quot;SELECT * FROM public.SystemName&quot;</span></span><br><span class="line">      <span class="string">statement_filepath</span> <span class="string">=&gt;</span> <span class="string">&quot;pgsql\logstash-pgsql1.sql&quot;</span>  <span class="comment">#这是要操作的sql 表，下面会提供</span></span><br><span class="line">          <span class="comment"># 同步频率（分时天月年），全*默认为每分钟同步一次。现设置每天凌晨4点执行</span></span><br><span class="line">          <span class="string">schedule</span> <span class="string">=&gt;</span> <span class="string">&quot;* 4 * * *&quot;</span></span><br><span class="line">          <span class="comment"># 多表同步时，表类型区分，建议命名为“库名_表名”，每个jdbc模块需对应一个type；</span></span><br><span class="line">          <span class="string">type</span> <span class="string">=&gt;</span> <span class="string">&quot;postgres_SystemName&quot;</span></span><br><span class="line">          <span class="string">jdbc_default_timezone</span> <span class="string">=&gt;&quot;Asia/Shanghai&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="string">jdbc</span> &#123;</span><br><span class="line">      <span class="comment"># 数据库连接地址</span></span><br><span class="line">      <span class="string">jdbc_connection_string</span> <span class="string">=&gt;</span> <span class="string">&quot;jdbc:postgresql://127.0.0.1:5432/postgres&quot;</span></span><br><span class="line">      <span class="comment"># 数据库连接账号密码：</span></span><br><span class="line">      <span class="string">jdbc_user</span> <span class="string">=&gt;</span> <span class="string">&quot;postgres&quot;</span></span><br><span class="line">      <span class="string">jdbc_password</span> <span class="string">=&gt;</span> <span class="string">&quot;123456&quot;</span></span><br><span class="line">      <span class="comment"># Pg依赖包路径</span></span><br><span class="line">      <span class="string">jdbc_driver_library</span> <span class="string">=&gt;</span> <span class="string">&quot;pgsql\postgresql-42.5.1.jar&quot;</span></span><br><span class="line">      <span class="string">jdbc_driver_class</span> <span class="string">=&gt;</span> <span class="string">&quot;org.postgresql.Driver&quot;</span></span><br><span class="line">      <span class="comment"># 开启分页查询，默认为false</span></span><br><span class="line">      <span class="string">jdbc_paging_enabled</span> <span class="string">=&gt;</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">      <span class="comment"># 单次分页查询条数（默认100000，若字段较多且更新频率较高，则建议调低此值）</span></span><br><span class="line">      <span class="string">jdbc_page_size</span> <span class="string">=&gt;</span> <span class="string">&quot;300000&quot;</span></span><br><span class="line">      <span class="string">use_column_value</span> <span class="string">=&gt;</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">      <span class="string">tracking_column</span> <span class="string">=&gt;</span> <span class="string">&quot;id&quot;</span> <span class="comment">#根据id字段更新</span></span><br><span class="line">      <span class="comment"># statement为查询数据sql，若sql较复杂，建议通过statement_filepath 配置sql文件的存放路径；</span></span><br><span class="line">      <span class="comment"># statement =&gt; &quot;SELECT * FROM public.&quot;SystemDetail&quot;&quot;</span></span><br><span class="line">      <span class="string">statement_filepath</span> <span class="string">=&gt;</span> <span class="string">&quot;pgsql\logstash-pgsql2.sql&quot;</span>  <span class="comment">#这是要操作的sql 表，下面会提供</span></span><br><span class="line">          <span class="comment"># 同步频率（分时天月年），默认为每分钟同步一次</span></span><br><span class="line">          <span class="string">schedule</span> <span class="string">=&gt;</span> <span class="string">&quot;* 4 * * *&quot;</span></span><br><span class="line">          <span class="comment"># 多表同步时，表类型区分，建议命名为“库名_表名”，每个jdbc模块需对应一个type；</span></span><br><span class="line">          <span class="string">type</span> <span class="string">=&gt;</span> <span class="string">&quot;postgres_SystemDetail&quot;</span></span><br><span class="line">          <span class="string">jdbc_default_timezone</span> <span class="string">=&gt;&quot;Asia/Shanghai&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="string">jdbc</span> &#123;</span><br><span class="line">      <span class="comment"># 数据库连接地址</span></span><br><span class="line">      <span class="string">jdbc_connection_string</span> <span class="string">=&gt;</span> <span class="string">&quot;jdbc:postgresql://127.0.0.1:5432/postgres&quot;</span></span><br><span class="line">      <span class="comment"># 数据库连接账号密码：</span></span><br><span class="line">      <span class="string">jdbc_user</span> <span class="string">=&gt;</span> <span class="string">&quot;postgres&quot;</span></span><br><span class="line">      <span class="string">jdbc_password</span> <span class="string">=&gt;</span> <span class="string">&quot;123456&quot;</span></span><br><span class="line">      <span class="comment"># Pg依赖包路径</span></span><br><span class="line">      <span class="string">jdbc_driver_library</span> <span class="string">=&gt;</span> <span class="string">&quot;pgsql\postgresql-42.5.1.jar&quot;</span></span><br><span class="line">      <span class="string">jdbc_driver_class</span> <span class="string">=&gt;</span> <span class="string">&quot;org.postgresql.Driver&quot;</span></span><br><span class="line">      <span class="comment"># 开启分页查询，默认为false</span></span><br><span class="line">      <span class="string">jdbc_paging_enabled</span> <span class="string">=&gt;</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">      <span class="comment"># 单次分页查询条数（默认100000，若字段较多且更新频率较高，则建议调低此值）</span></span><br><span class="line">      <span class="string">jdbc_page_size</span> <span class="string">=&gt;</span> <span class="string">&quot;300000&quot;</span></span><br><span class="line">      <span class="string">use_column_value</span> <span class="string">=&gt;</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">      <span class="string">tracking_column</span> <span class="string">=&gt;</span> <span class="string">&quot;id&quot;</span> <span class="comment">#根据id字段更新</span></span><br><span class="line">      <span class="comment"># statement为查询数据sql，若sql较复杂，建议通过statement_filepath 配置sql文件的存放路径；</span></span><br><span class="line">      <span class="comment"># statement =&gt; &quot;SELECT * FROM public.&quot;ProblemList&quot;&quot;</span></span><br><span class="line">      <span class="string">statement_filepath</span> <span class="string">=&gt;</span> <span class="string">&quot;pgsql\logstash-pgsql3.sql&quot;</span>  <span class="comment">#这是要操作的sql 表，下面会提供</span></span><br><span class="line">          <span class="comment"># 同步频率（分时天月年），默认为每分钟同步一次</span></span><br><span class="line">          <span class="string">schedule</span> <span class="string">=&gt;</span> <span class="string">&quot;* 4 * * *&quot;</span></span><br><span class="line">          <span class="comment"># 多表同步时，表类型区分，建议命名为“库名_表名”，每个jdbc模块需对应一个type；</span></span><br><span class="line">          <span class="string">type</span> <span class="string">=&gt;</span> <span class="string">&quot;postgres_ProblemList&quot;</span></span><br><span class="line">          <span class="string">jdbc_default_timezone</span> <span class="string">=&gt;&quot;Asia/Shanghai&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="string">filter</span> &#123;</span><br><span class="line">    <span class="string">json</span> &#123;</span><br><span class="line">        <span class="string">source</span> <span class="string">=&gt;</span> <span class="string">&quot;message&quot;</span></span><br><span class="line">        <span class="string">remove_field</span> <span class="string">=&gt;</span> [<span class="string">&quot;message&quot;</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="string">output</span> &#123;</span><br><span class="line">    <span class="comment"># output模块的type需和jdbc模块的type一致</span></span><br><span class="line">    <span class="string">if</span> [<span class="string">type</span>] <span class="string">==</span> <span class="string">&quot;postgres_SystemName&quot;</span>&#123;</span><br><span class="line">        <span class="string">elasticsearch</span> &#123;</span><br><span class="line">            <span class="comment"># 配置es集群的地址</span></span><br><span class="line">            <span class="string">hosts</span> <span class="string">=&gt;</span> [<span class="string">&quot;localhost:9200&quot;</span>]</span><br><span class="line">            <span class="comment"># 索引名称，必须小写</span></span><br><span class="line">            <span class="string">index</span> <span class="string">=&gt;</span> <span class="string">&quot;test&quot;</span></span><br><span class="line">            <span class="comment"># 模板地址</span></span><br><span class="line">                  <span class="string">template</span> <span class="string">=&gt;</span> <span class="string">&quot;pgsql\es-template.json&quot;</span>   <span class="comment">#es 索引模板，可不定义</span></span><br><span class="line">                  <span class="string">template_name</span> <span class="string">=&gt;</span> <span class="string">&quot;t-statistic-out-logstash&quot;</span></span><br><span class="line">                  <span class="string">template_overwrite</span> <span class="string">=&gt;</span> <span class="literal">true</span></span><br><span class="line">                  <span class="string">document_type</span> <span class="string">=&gt;</span> <span class="string">&quot;text&quot;</span></span><br><span class="line">            <span class="comment"># 数据唯一索引</span></span><br><span class="line">            <span class="string">document_id</span> <span class="string">=&gt;</span> <span class="string">&quot;<span class="template-variable">%&#123;id&#125;</span>&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="string">if</span> [<span class="string">type</span>] <span class="string">==</span> <span class="string">&quot;postgres_SystemDetail&quot;</span>&#123;</span><br><span class="line">        <span class="string">elasticsearch</span> &#123;</span><br><span class="line">            <span class="comment"># 配置es集群的地址</span></span><br><span class="line">            <span class="string">hosts</span> <span class="string">=&gt;</span> [<span class="string">&quot;localhost:9200&quot;</span>]</span><br><span class="line">            <span class="comment"># 索引名称，必须小写</span></span><br><span class="line">            <span class="string">index</span> <span class="string">=&gt;</span> <span class="string">&quot;test&quot;</span></span><br><span class="line">            <span class="comment"># 模板地址</span></span><br><span class="line">                  <span class="string">template</span> <span class="string">=&gt;</span> <span class="string">&quot;pgsql\es-template.json&quot;</span>   <span class="comment">#es 索引模板，可不定义</span></span><br><span class="line">                  <span class="string">template_name</span> <span class="string">=&gt;</span> <span class="string">&quot;t-statistic-out-logstash&quot;</span></span><br><span class="line">                  <span class="string">template_overwrite</span> <span class="string">=&gt;</span> <span class="literal">true</span></span><br><span class="line">                  <span class="string">document_type</span> <span class="string">=&gt;</span> <span class="string">&quot;text&quot;</span></span><br><span class="line">            <span class="comment"># 数据唯一索引</span></span><br><span class="line">            <span class="string">document_id</span> <span class="string">=&gt;</span> <span class="string">&quot;<span class="template-variable">%&#123;id&#125;</span>&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="string">if</span> [<span class="string">type</span>] <span class="string">==</span> <span class="string">&quot;postgres_ProblemList&quot;</span>&#123;</span><br><span class="line">        <span class="string">elasticsearch</span> &#123;</span><br><span class="line">            <span class="comment"># 配置es集群的地址</span></span><br><span class="line">            <span class="string">hosts</span> <span class="string">=&gt;</span> [<span class="string">&quot;localhost:9200&quot;</span>]</span><br><span class="line">            <span class="comment"># 索引名称，必须小写</span></span><br><span class="line">            <span class="string">index</span> <span class="string">=&gt;</span> <span class="string">&quot;test&quot;</span></span><br><span class="line">            <span class="comment"># 模板地址</span></span><br><span class="line">                  <span class="string">template</span> <span class="string">=&gt;</span> <span class="string">&quot;pgsql\es-template.json&quot;</span>   <span class="comment">#es 索引模板，可不定义</span></span><br><span class="line">                  <span class="string">template_name</span> <span class="string">=&gt;</span> <span class="string">&quot;t-statistic-out-logstash&quot;</span></span><br><span class="line">                  <span class="string">template_overwrite</span> <span class="string">=&gt;</span> <span class="literal">true</span></span><br><span class="line">                  <span class="string">document_type</span> <span class="string">=&gt;</span> <span class="string">&quot;text&quot;</span></span><br><span class="line">            <span class="comment"># 数据唯一索引</span></span><br><span class="line">            <span class="string">document_id</span> <span class="string">=&gt;</span> <span class="string">&quot;<span class="template-variable">%&#123;id&#125;</span>&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="string">stdout</span> &#123;</span><br><span class="line">        <span class="string">codec</span> <span class="string">=&gt;</span> <span class="string">json_lines</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="设置配置密码">设置&amp;配置密码</h2><h3 id="elasticsearch">elasticsearch</h3><p>使用上述配置创建容器后，进入容器中执行以下命令，可配置elastic、kibana、logstash_system等账号的密码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">elasticsearch-setup-passwords interactive</span><br></pre></td></tr></table></figure><p>设置完成后，登录kibana的账号名是kibana，elasticsearch的账户名为elastic。</p><h1 id="一键部署">一键部署</h1><p>梳理好部署目录并创建好对应文件后，执行以下命令启动容器<code>docker-compose up -d</code>。</p><p>在内网使用Elasticsearch、Logstash时，可以不设置密码，但kibana需要设置。</p>]]></content>
    
    
    <summary type="html">使用docker-compose一键部署Elasticsearch Logstash Kibana</summary>
    
    
    
    <category term="Docker" scheme="http://tangmenjue.top/categories/Docker/"/>
    
    <category term="Elasticsearch" scheme="http://tangmenjue.top/categories/Elasticsearch/"/>
    
    
    <category term="Docker" scheme="http://tangmenjue.top/tags/Docker/"/>
    
    <category term="应用部署" scheme="http://tangmenjue.top/tags/%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/"/>
    
    <category term="Elasticsearch" scheme="http://tangmenjue.top/tags/Elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>初探vue-quill-editor</title>
    <link href="http://tangmenjue.top/2023/02/23/%E5%88%9D%E6%8E%A2vue-quill-editor/"/>
    <id>http://tangmenjue.top/2023/02/23/%E5%88%9D%E6%8E%A2vue-quill-editor/</id>
    <published>2023-02-23T09:34:16.000Z</published>
    <updated>2023-02-23T09:34:16.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="富文本编辑器vue-quill-editor">富文本编辑器：vue-quill-editor</h1><p>vue-quill-editor是一款可适配PC端和移动端富文本编辑器，具有可设置自定义配置项、外观简洁且轻量的优点。</p><p>PC端效果图如下：<img src="/2023/02/23/%E5%88%9D%E6%8E%A2vue-quill-editor/1.png"></p><p>移动端的效果图如下：<img src="/2023/02/23/%E5%88%9D%E6%8E%A2vue-quill-editor/2.png"></p><h1 id="vue-quill-editor配置">vue-quill-editor配置</h1><ul><li><p>在项目目录下载vue-quill-editor：</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i vue-quill-editor -S</span><br></pre></td></tr></table></figure></p></li><li><p>在Vue页面的script模块中引入vue-quill-editor：</p><p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Quill</span> <span class="keyword">from</span> <span class="string">&quot;quill&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; quillEditor &#125; <span class="keyword">from</span> <span class="string">&quot;vue-quill-editor&quot;</span>; </span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;quill/dist/quill.core.css&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;quill/dist/quill.snow.css&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;quill/dist/quill.bubble.css&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(quillEditor)<span class="comment">//注册组件的方式之一</span></span><br></pre></td></tr></table></figure></p></li><li><p>在Vue页面的template模块中引入组件：</p><p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">quill-editor</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">v-model</span>=<span class="string">&quot;content&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">ref</span>=<span class="string">&quot;myQuillEditor&quot;</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">:options</span>=<span class="string">&quot;editorOption&quot;</span> </span></span><br><span class="line"><span class="tag">    @<span class="attr">blur</span>=<span class="string">&quot;onEditorBlur($event)&quot;</span> </span></span><br><span class="line"><span class="tag">    @<span class="attr">focus</span>=<span class="string">&quot;onEditorFocus($event)&quot;</span></span></span><br><span class="line"><span class="tag">    @<span class="attr">change</span>=<span class="string">&quot;onEditorChange($event)&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">quill-editor</span>&gt;</span></span><br></pre></td></tr></table></figure></p></li><li><p>在Vue页面的scripts模块中完善组件的设置，完整的scripts模块代码如下：</p><p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Quill</span> <span class="keyword">from</span> <span class="string">&quot;quill&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; quillEditor &#125; <span class="keyword">from</span> <span class="string">&quot;vue-quill-editor&quot;</span>; </span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;quill/dist/quill.core.css&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;quill/dist/quill.snow.css&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;quill/dist/quill.bubble.css&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">components</span>: &#123;</span><br><span class="line">    quillEditor,<span class="comment">//另一种组件注册方式</span></span><br><span class="line">&#125;,</span><br><span class="line">  <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">content</span>:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      <span class="attr">str</span>:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      <span class="attr">editorOption</span>: &#123;</span><br><span class="line">        <span class="attr">placeholder</span>: <span class="string">&quot;请在这里输入&quot;</span>,</span><br><span class="line">        <span class="attr">modules</span>:&#123;</span><br><span class="line">          <span class="attr">toolbar</span>:[</span><br><span class="line">            [<span class="string">&#x27;bold&#x27;</span>, <span class="string">&#x27;italic&#x27;</span>, <span class="string">&#x27;underline&#x27;</span>, <span class="string">&#x27;strike&#x27;</span>],    <span class="comment">//加粗，斜体，下划线，删除线</span></span><br><span class="line">            [<span class="string">&#x27;blockquote&#x27;</span>, <span class="string">&#x27;code-block&#x27;</span>],     <span class="comment">//引用，代码块</span></span><br><span class="line">            [&#123; <span class="string">&#x27;header&#x27;</span>: <span class="number">1</span> &#125;, &#123; <span class="string">&#x27;header&#x27;</span>: <span class="number">2</span> &#125;],        <span class="comment">// 标题，键值对的形式；1、2表示字体大小</span></span><br><span class="line">            [&#123; <span class="string">&#x27;list&#x27;</span>: <span class="string">&#x27;ordered&#x27;</span>&#125;, &#123; <span class="string">&#x27;list&#x27;</span>: <span class="string">&#x27;bullet&#x27;</span> &#125;],     <span class="comment">//列表</span></span><br><span class="line">            [&#123; <span class="string">&#x27;script&#x27;</span>: <span class="string">&#x27;sub&#x27;</span>&#125;, &#123; <span class="string">&#x27;script&#x27;</span>: <span class="string">&#x27;super&#x27;</span> &#125;],   <span class="comment">// 上下标</span></span><br><span class="line">            [&#123; <span class="string">&#x27;indent&#x27;</span>: <span class="string">&#x27;-1&#x27;</span>&#125;, &#123; <span class="string">&#x27;indent&#x27;</span>: <span class="string">&#x27;+1&#x27;</span> &#125;],     <span class="comment">// 缩进</span></span><br><span class="line">            [&#123; <span class="string">&#x27;direction&#x27;</span>: <span class="string">&#x27;rtl&#x27;</span> &#125;], <span class="comment">// 文本方向</span></span><br><span class="line">            [&#123; <span class="string">&#x27;header&#x27;</span>: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="literal">false</span>] &#125;],     <span class="comment">//几级标题</span></span><br><span class="line">            [&#123; <span class="string">&#x27;color&#x27;</span>: [] &#125;, &#123; <span class="string">&#x27;background&#x27;</span>: [] &#125;],     <span class="comment">// 字体颜色，字体背景颜色</span></span><br><span class="line">            [&#123; <span class="string">&#x27;font&#x27;</span>: []&#125;],</span><br><span class="line">            [&#123;<span class="string">&#x27;align&#x27;</span>: []&#125;],    <span class="comment">//对齐方式</span></span><br><span class="line">            [<span class="string">&#x27;clean&#x27;</span>],    <span class="comment">//清除字体样式</span></span><br><span class="line">            [<span class="string">&#x27;image&#x27;</span>,<span class="string">&#x27;video&#x27;</span>]    <span class="comment">//上传图片、上传视频</span></span><br><span class="line">          ],</span><br><span class="line">        &#125;,   </span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">methods</span>: &#123;</span><br><span class="line">      <span class="title function_">onEditorReady</span>(<span class="params">editor</span>) &#123;&#125;,<span class="comment">// 准备编辑器</span></span><br><span class="line">      <span class="title function_">onEditorBlur</span>(<span class="params"></span>)&#123;&#125;, <span class="comment">// 失去焦点事件</span></span><br><span class="line">      <span class="title function_">onEditorFocus</span>(<span class="params"></span>)&#123;&#125;, <span class="comment">// 获得焦点事件</span></span><br><span class="line">      <span class="comment">// 内容改变事件--给父组件传值</span></span><br><span class="line">      <span class="title function_">onEditorChange</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.$emit(<span class="string">&quot;input&quot;</span>, <span class="variable language_">this</span>.<span class="property">content</span>);</span><br><span class="line">      &#125;, </span><br><span class="line">      <span class="comment">// 转码</span></span><br><span class="line">      <span class="title function_">escapeStringHTML</span>(<span class="params">str</span>) &#123;</span><br><span class="line">            str = str.<span class="title function_">replace</span>(<span class="regexp">/&amp;lt;/g</span>,<span class="string">&#x27;&lt;&#x27;</span>);</span><br><span class="line">            str = str.<span class="title function_">replace</span>(<span class="regexp">/&amp;gt;/g</span>,<span class="string">&#x27;&gt;&#x27;</span>);</span><br><span class="line">            <span class="keyword">return</span> str;</span><br><span class="line">        &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">computed</span>: &#123;</span><br><span class="line">      <span class="title function_">editor</span>(<span class="params"></span>) &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">myQuillEditor</span>.<span class="property">quill</span>;</span><br><span class="line">      &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">    <span class="title function_">mounted</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">let</span> content = <span class="string">&#x27;&#x27;</span>;  <span class="comment">// 请求后台返回的内容字符串</span></span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">str</span> = <span class="variable language_">this</span>.escapeStringHTML(content);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></li><li><p>至此便可以使用富文本了。需要注意的是，该富文本编辑器的所编辑的内容，在存储数据时会按照html的格式存储，例如：</p><p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入内容为123时，</span><br><span class="line">存储到后台的实际文本为<span class="tag">&lt;<span class="name">p</span>&gt;</span>123<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></p></li><li><p>因此要从后台读取数据时，需要使用<code>v-html</code>的方式来解析数据，在需要让存储数据显示的Vue页面里，添加如下代码即可：</p><p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-html</span>=<span class="string">&quot;item.answer&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ql-editor&quot;</span> &gt;</span></span><br><span class="line">  &#123;&#123;content&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&lt;--其中content为存储vue-quill-editor内容的参数--&gt;</span><br></pre></td></tr></table></figure></p></li></ul><p>使用<code>v-html</code>解析数据时，会出现所展示的图片尺寸异常的情况，若想让图片显示出正常的大小，只需在样式style中添加以下CSS代码即可：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.ql-editor</span> <span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="调整图片尺寸图片拖拽上传pc端">调整图片尺寸&amp;图片拖拽上传（PC端）</h1><p>直接使用vue-quill-editor上传图片时，图片是不能实现调整图片尺寸和图片拖拽上传的，若想要实现这些功能，则需要下载插件<code>quill-image-resize-module</code>和<code>quill-image-drop-module</code>。</p><h2 id="插件配置">插件配置</h2><ul><li><p>首先需要下载插件：</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm i quill-image-drop-module -S</span><br><span class="line">npm i quill-image-resize-module -S</span><br></pre></td></tr></table></figure></p></li><li><p>然后在Vue页面的script模块中引入这两个插件：</p><p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">ImageDrop</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;quill-image-drop-module&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ImageResize</span> <span class="keyword">from</span> <span class="string">&#x27;quill-image-resize-module&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Quill</span>.<span class="title function_">register</span>(<span class="string">&#x27;modules/imageDrop&#x27;</span>,<span class="title class_">ImageDrop</span>);</span><br><span class="line"><span class="title class_">Quill</span>.<span class="title function_">register</span>(<span class="string">&#x27;modules/imageResize&#x27;</span>, <span class="title class_">ImageResize</span>);</span><br></pre></td></tr></table></figure></p></li><li><p>然后在<code>data return</code> 中引入插件的配置如下：</p><p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">editorOption</span>: &#123;</span><br><span class="line">  <span class="attr">modules</span>:&#123;               </span><br><span class="line">    <span class="attr">imageDrop</span>:<span class="literal">true</span>,</span><br><span class="line">    <span class="attr">imageResize</span>:&#123;</span><br><span class="line">      <span class="attr">displaySize</span>:&#123;</span><br><span class="line">        <span class="attr">backgroundColor</span>: <span class="string">&quot;black&quot;</span>,</span><br><span class="line">        <span class="attr">border</span>: <span class="string">&quot;none&quot;</span>,</span><br><span class="line">        <span class="attr">color</span>: <span class="string">&quot;white&quot;</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">modules</span>:[<span class="string">&#x27;Resize&#x27;</span>,<span class="string">&#x27;DisplaySize&#x27;</span>,<span class="string">&#x27;Toolbar&#x27;</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></li><li><p>配置引入后，在<code>vue.config.js</code>文件中引入一下配置：</p><p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> webpack = <span class="built_in">require</span>(<span class="string">&#x27;webpack&#x27;</span>);</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">configureWebpack</span>: &#123;</span><br><span class="line">    <span class="attr">plugins</span>:[</span><br><span class="line">      <span class="keyword">new</span> webpack.<span class="title class_">ProvidePlugin</span>(&#123;</span><br><span class="line">        <span class="string">&#x27;window.Quill&#x27;</span>:<span class="string">&#x27;quill/dist/quill.js&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Quill&#x27;</span>:<span class="string">&#x27;quill/dist/quill.js&#x27;</span></span><br><span class="line">      &#125;)</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p></li><li><p>重启vue-cli后，便可在PC端实现调整图片尺寸和图片拖拽上传的功能</p></li></ul>]]></content>
    
    
    <summary type="html">富文本编辑器vue-quill-editor的使用</summary>
    
    
    
    <category term="前端" scheme="http://tangmenjue.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
    <category term="Vue.js" scheme="http://tangmenjue.top/tags/Vue-js/"/>
    
    <category term="前端" scheme="http://tangmenjue.top/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>Oracle Sql语句查库</title>
    <link href="http://tangmenjue.top/2023/02/21/Oracle%20Sql%E8%AF%AD%E5%8F%A5%E6%9F%A5%E5%BA%93/"/>
    <id>http://tangmenjue.top/2023/02/21/Oracle%20Sql%E8%AF%AD%E5%8F%A5%E6%9F%A5%E5%BA%93/</id>
    <published>2023-02-21T04:00:45.000Z</published>
    <updated>2023-02-21T04:00:45.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数据库连接工具dbeaver">数据库连接工具：DBeaver</h1><p>本文中使用的数据库连接工具是DBeaver，其是一款免费且跨平台的数据库连接工具。其优势是会在首次链接数据库时，下载所需驱动，解决了数据库版本不兼容的问题。</p><p>该工具的下载地址为：<a href="https://dbeaver.io/download/">Download | DBeaver Community</a>，直接根据安装指示点击下一步即可完成安装。</p><p>安装好后打开软件，点击左上角的图标新建连接：<img src="/2023/02/21/Oracle%20Sql%E8%AF%AD%E5%8F%A5%E6%9F%A5%E5%BA%93/1.png"></p><p>在弹出的窗口里选择Oracle，填好相应的信息后，点击完成。然后会弹出下载驱动文件的页面，点击下载驱动：<img src="/2023/02/21/Oracle%20Sql%E8%AF%AD%E5%8F%A5%E6%9F%A5%E5%BA%93/2.png"></p><p>在左方便可看到已连接的数据库，右键数据库名字-SQL编辑器-SQL编辑器便可打开一个可以编写sql语句的脚本编辑器，其他模块的使用方法与pgAdmin 、Navicat等工具的相同。</p><h1 id="模糊查询">模糊查询</h1><p>查询test_table表中名字含有“张三”的数据：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test_table</span><br><span class="line"><span class="keyword">WHERE</span> name <span class="keyword">like</span> <span class="string">&#x27;%张三%&#x27;</span></span><br><span class="line"><span class="comment">-- %张三，表示匹配结尾为张三的数据</span></span><br><span class="line"><span class="comment">-- 张三%，表示匹配开头为张三的数据</span></span><br><span class="line"><span class="comment">-- %张三%，表示匹配任意位置含有张三的数据</span></span><br></pre></td></tr></table></figure><h1 id="查询语句中含有变量">查询语句中含有变量</h1><p>查询test_table表中年龄等于参数year值的数据，其中year参数的值在运行sql语句时输入：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test_table a</span><br><span class="line"><span class="keyword">WHERE</span> a.old<span class="operator">=</span>:<span class="keyword">year</span></span><br><span class="line"><span class="comment">-- test_table a，即设置表格test_table的别名为a，后续可用a来代替表格test_table</span></span><br><span class="line"><span class="comment">-- :year，表示变量year</span></span><br></pre></td></tr></table></figure><p>查询test_table表中名字含有参数search值的数据，其中search参数的值在运行sql语句时输入：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> test_table</span><br><span class="line"><span class="keyword">WHERE</span> name <span class="keyword">like</span> <span class="string">&#x27;%&#x27;</span><span class="operator">||</span>:<span class="keyword">search</span><span class="operator">||</span><span class="string">&#x27;%&#x27;</span></span><br><span class="line"><span class="comment">-- :search，表示变量search</span></span><br><span class="line"><span class="comment">-- ||:search||中，||为连接符，类似于Python中print里的+号，即&#x27;%&#x27;||:search||&#x27;%&#x27;等价于Python中的print里的(&#x27;%&#x27;+search+&#x27;%&#x27;)</span></span><br></pre></td></tr></table></figure><p>查询test_table表中学号为参数num值的名字，其中num参数的值在运行sql语句时输入:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> name <span class="keyword">from</span> test_table a</span><br><span class="line"><span class="keyword">WHERE</span> a.snum<span class="operator">=</span>to_char(:num)</span><br><span class="line"><span class="comment">-- to_char函数用来将数组转为字符串</span></span><br><span class="line"><span class="comment">-- distinct参数用来去除重复数据</span></span><br></pre></td></tr></table></figure><p>查询test_table表中名字为参数search值的数据，所查询的结果中含有参数值的数据排在前面：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>  <span class="operator">*</span> <span class="keyword">from</span> test_table</span><br><span class="line"><span class="keyword">WHERE</span> name <span class="keyword">like</span> <span class="string">&#x27;%&#x27;</span><span class="operator">||</span>:<span class="keyword">search</span><span class="operator">||</span><span class="string">&#x27;%&#x27;</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> (<span class="keyword">case</span> <span class="keyword">when</span> name <span class="keyword">like</span> <span class="string">&#x27;%&#x27;</span><span class="operator">||</span>:<span class="keyword">search</span><span class="operator">||</span><span class="string">&#x27;%&#x27;</span> <span class="keyword">then</span> <span class="number">0</span> <span class="keyword">end</span>)</span><br><span class="line"><span class="comment">-- case 条件 then 0 end，表示满足条件的数据排在第0位，即满足条件的数据优先显示</span></span><br></pre></td></tr></table></figure><h1 id="左连接查询">左连接查询</h1><p>进行左连接(Left join)时，查询将左边表格T1中的每一行都与右边表格T2中的行进行比较，返回的结果会有以下三种情况：</p><ul><li>若T1中的某条记录在T2中刚好只有一条记录可以匹配，则返回的结果中会生成一个新的行</li><li>若T1中的某条记录在T2中有N条记录可以匹配，则返回的结果中也会生成N个新的行，这些行所包含的T1的字段值是重复的</li><li>若T1中的某条记录在T2中没有可以匹配的记录，则返回的结果中会生成一个新的行，该行所包含的T2的字段值是NULL</li></ul><p>例如，左表为T1，其有如下数据：<img src="/2023/02/21/Oracle%20Sql%E8%AF%AD%E5%8F%A5%E6%9F%A5%E5%BA%93/3.png">右表为T2，其有如下数据：<img src="/2023/02/21/Oracle%20Sql%E8%AF%AD%E5%8F%A5%E6%9F%A5%E5%BA%93/4.png"></p><p>将两者进行左连接查询，即需要返回左表中所有行的数据以及右表中包含number行的数据：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> T1 </span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> T2 </span><br><span class="line"><span class="keyword">on</span> T1.num<span class="operator">=</span>T2.number</span><br><span class="line"><span class="comment">-- T1的num列引用T2表中的number列。其中num列的部分值是无效的</span></span><br><span class="line"><span class="comment">-- 若要过滤掉所有name为NULL的记录，可以增加以下where子句</span></span><br><span class="line"><span class="keyword">where</span> number <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span></span><br></pre></td></tr></table></figure><p>查询结果如下：<img src="/2023/02/21/Oracle%20Sql%E8%AF%AD%E5%8F%A5%E6%9F%A5%E5%BA%93/5.png"></p><p>去除NULL记录后的查询结果如下：<img src="/2023/02/21/Oracle%20Sql%E8%AF%AD%E5%8F%A5%E6%9F%A5%E5%BA%93/6.png"></p>]]></content>
    
    
    <summary type="html">使用Oracle Sql语句查库</summary>
    
    
    
    <category term="数据库" scheme="http://tangmenjue.top/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="数据库" scheme="http://tangmenjue.top/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>实现Postgresql与Elasticsearch的数据同步</title>
    <link href="http://tangmenjue.top/2023/01/17/%E5%AE%9E%E7%8E%B0Postgresql%E4%B8%8EElasticsearch%E7%9A%84%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5/"/>
    <id>http://tangmenjue.top/2023/01/17/%E5%AE%9E%E7%8E%B0Postgresql%E4%B8%8EElasticsearch%E7%9A%84%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5/</id>
    <published>2023-01-17T09:20:52.000Z</published>
    <updated>2023-01-17T09:20:52.000Z</updated>
    
    <content type="html"><![CDATA[<p>遇到一个针对业务数据实现全文搜素的需求，而数据存在于pgsql数据库中，因此要将数据库中的数据同步到ES里。有两种方式可以实现：一是通过ES的API进行增删改查，二是通过中间件来进行数据全量、增量的同步。由于调用API的方式比较麻烦，本文便为第二种实现方式。</p><p>刚开始时是准备使用<code>multicorn</code>插件的，奈何在windows 10的环境下一直都无法进行<code>make&amp;&amp;make install</code>安装，而由于环境问题也无法使用<a href="https://github.com/appbaseio/abc">ABC</a>工具（不支持postgresql14），随即作罢，改换成实时数据采集引擎<code>logstash</code>来同步数据。</p><h1 id="logstash概要"><code>logstash</code>概要</h1><p><code>Logstash</code>作为Elasicsearch常用的实时数据采集引擎，可以采集来自不同数据源的数据，并对数据进行处理后输出到多种输出源，是Elastic Stack 的重要组成部分。官网网址为：<a href="https://www.elastic.co/cn/downloads/logstash">Logstash</a></p><p>其数据处理的过程包括Inputs、Filters、Outputs三部分，在Inputs和Outputs中可以使用Codecs对数据格式进行处理。这四个部分均是以插件形式存在，用户通过定义pipeline配置文件，设置需要使用的input、filter、output、codec插件以实现特定的数据采集、数据处理、数据输出等功能。</p><ul><li>Inputs：用于从数据源获取数据，常见的插件如<code>file</code>、<code>syslog</code>、<code>redis</code>、<code>beats</code>等</li><li>Filters：用于处理数据如格式转换、数据派生等，常见的插件如<code>grok</code>、<code>mutate</code>、<code>drop</code>、<code>clone</code>、<code>geoip</code>等</li><li>Outputs：用于数据输出，常见的插件如<code>elasticsearch</code>、<code>file</code>、<code>graphite</code>、<code>statsd</code>等</li><li><code>Codecs</code>：<code>Codecs</code>不是一个单独的流程，而是在输入和输出等插件中用于数据转换的模块，用于对数据进行编码处理，常见的插件如<code>json</code>、<code>multiline</code>等</li></ul><p>在<a href="https://github.com/appbaseio/abc/releases/tag/1.0.0">网页</a>中下载好对应版本的可运行文件并解压，将解压目录增加到环境变量中，即可在cmd命令行里运行。</p><h1 id="安装配置">安装配置</h1><h2 id="本文环境要求">本文环境要求</h2><p>系统版本：window10</p><p>JDK版本：1.8.0_351（要求jdk版本在1.8以上）</p><p>Elasticsearch版本：5.5.3</p><p>Postgresql版本：14.5</p><h2 id="安装--单表同步配置">安装--单表同步配置</h2><ul><li><p>安装logstash：5.5.3（ELK版本要求保持一致），下载网址：<a href="https://www.elastic.co/cn/downloads/past-releases/logstash-5-5-3">logstash 5.5.3</a></p></li><li><p>将安装包解压后，进入解压目录<code>logstash-5.5.3\bin</code>后，新建pgsql文件夹（名字随意）</p></li><li><p>下载连接postgreSQL数据库的pg引擎，即与JDK版本对应的jdbc驱动：<a href="https://jdbc.postgresql.org/download/">Java 8-42.5.1</a>，解压后放到pgsql文件夹中</p></li><li><p>在pgsql文件夹中新建文件<code>logstash-pgsql.conf</code>，内容如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">input</span> &#123;</span><br><span class="line">    <span class="string">stdin</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="string">jdbc</span> &#123;</span><br><span class="line">      <span class="comment"># 数据库连接地址</span></span><br><span class="line">      <span class="string">jdbc_connection_string</span> <span class="string">=&gt;</span> <span class="string">&quot;jdbc:postgresql://127.0.0.1:5432/postgres&quot;</span></span><br><span class="line">      <span class="comment"># 数据库连接账号密码：</span></span><br><span class="line">      <span class="string">jdbc_user</span> <span class="string">=&gt;</span> <span class="string">&quot;***&quot;</span></span><br><span class="line">      <span class="string">jdbc_password</span> <span class="string">=&gt;</span> <span class="string">&quot;******&quot;</span></span><br><span class="line">      <span class="comment"># Pg依赖包路径</span></span><br><span class="line">      <span class="string">jdbc_driver_library</span> <span class="string">=&gt;</span> <span class="string">&quot;pgsql\postgresql-42.5.1.jar&quot;</span></span><br><span class="line">      <span class="string">jdbc_driver_class</span> <span class="string">=&gt;</span> <span class="string">&quot;org.postgresql.Driver&quot;</span></span><br><span class="line">      <span class="comment"># 开启分页查询，默认为false</span></span><br><span class="line">      <span class="string">jdbc_paging_enabled</span> <span class="string">=&gt;</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">      <span class="comment"># 单次分页查询条数（默认100000，若字段较多且更新频率较高，则建议调低此值）</span></span><br><span class="line">      <span class="string">jdbc_page_size</span> <span class="string">=&gt;</span> <span class="string">&quot;300000&quot;</span></span><br><span class="line">      <span class="string">use_column_value</span> <span class="string">=&gt;</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">      <span class="string">tracking_column</span> <span class="string">=&gt;</span> <span class="string">&quot;id&quot;</span> <span class="comment">#根据id字段更新</span></span><br><span class="line">      <span class="comment"># statement为查询数据sql，若sql较复杂，建议通过statement_filepath 配置sql文件的存放路径；</span></span><br><span class="line">      <span class="comment"># statement =&gt; &quot;SELECT * FROM public.表名&quot;</span></span><br><span class="line">      <span class="string">statement_filepath</span> <span class="string">=&gt;</span> <span class="string">&quot;pgsql\logstash-pgsql.sql&quot;</span>  <span class="comment">#这是要操作的sql 表，下面会提供</span></span><br><span class="line">          <span class="comment"># 同步频率（分时天月年），默认为每分钟同步一次</span></span><br><span class="line">          <span class="string">schedule</span> <span class="string">=&gt;</span> <span class="string">&quot;* * * * *&quot;</span></span><br><span class="line">          <span class="string">type</span> <span class="string">=&gt;</span> <span class="string">&quot;jdbc&quot;</span></span><br><span class="line">          <span class="string">jdbc_default_timezone</span> <span class="string">=&gt;&quot;Asia/Shanghai&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="string">filter</span> &#123;</span><br><span class="line">    <span class="string">json</span> &#123;</span><br><span class="line">        <span class="string">source</span> <span class="string">=&gt;</span> <span class="string">&quot;message&quot;</span></span><br><span class="line">        <span class="string">remove_field</span> <span class="string">=&gt;</span> [<span class="string">&quot;message&quot;</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="string">output</span> &#123;</span><br><span class="line">    <span class="string">elasticsearch</span> &#123;</span><br><span class="line">        <span class="comment"># 配置es集群的地址</span></span><br><span class="line">        <span class="string">hosts</span> <span class="string">=&gt;</span> [<span class="string">&quot;localhost:9200&quot;</span>]</span><br><span class="line">        <span class="comment"># 索引名称，必须小写</span></span><br><span class="line">        <span class="string">index</span> <span class="string">=&gt;</span> <span class="string">&quot;test&quot;</span></span><br><span class="line">        <span class="comment"># 模板地址</span></span><br><span class="line">              <span class="string">template</span> <span class="string">=&gt;</span> <span class="string">&quot;pgsql\es-template.json&quot;</span>   <span class="comment">#es 索引模板，可不定义</span></span><br><span class="line">              <span class="string">template_name</span> <span class="string">=&gt;</span> <span class="string">&quot;t-statistic-out-logstash&quot;</span></span><br><span class="line">              <span class="string">template_overwrite</span> <span class="string">=&gt;</span> <span class="literal">true</span></span><br><span class="line">              <span class="string">document_type</span> <span class="string">=&gt;</span> <span class="string">&quot;out&quot;</span></span><br><span class="line">        <span class="comment"># 数据唯一索引</span></span><br><span class="line">        <span class="string">document_id</span> <span class="string">=&gt;</span> <span class="string">&quot;<span class="template-variable">%&#123;id&#125;</span>&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="string">stdout</span> &#123;</span><br><span class="line">        <span class="string">codec</span> <span class="string">=&gt;</span> <span class="string">json_lines</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在pgsql文件夹中新建文件<code>logstash-pgsql.sql</code>，内容如下：</p><p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> public.&quot;表名&quot;</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> id <span class="keyword">ASC</span> </span><br></pre></td></tr></table></figure></p></li><li><p>在pgsql文件夹中新建文件<code>es-template.json</code>，内容如下：</p><p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;template&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;t-statistis-out-template&quot;</span><span class="punctuation">,</span> </span><br><span class="line">    <span class="attr">&quot;order&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;settings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;index&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;refresh_interval&quot;</span><span class="punctuation">:</span> <span class="string">&quot;5s&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;mappings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;_default_&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;_all&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="attr">&quot;enabled&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">&#125;</span><span class="punctuation">,</span> </span><br><span class="line">                <span class="attr">&quot;dynamic_templates&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                    <span class="punctuation">&#123;</span> </span><br><span class="line">              <span class="attr">&quot;message_field&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span> </span><br><span class="line">                <span class="attr">&quot;match&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;message&quot;</span><span class="punctuation">,</span> </span><br><span class="line">                <span class="attr">&quot;match_mapping_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;string&quot;</span><span class="punctuation">,</span> </span><br><span class="line">                <span class="attr">&quot;mapping&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;string&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;not_analyzed&quot;</span> <span class="punctuation">&#125;</span> </span><br><span class="line">              <span class="punctuation">&#125;</span> </span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> </span><br><span class="line">              <span class="attr">&quot;string_fields&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span> </span><br><span class="line">                <span class="attr">&quot;match&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;*&quot;</span><span class="punctuation">,</span> </span><br><span class="line">                <span class="attr">&quot;match_mapping_type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;string&quot;</span><span class="punctuation">,</span> </span><br><span class="line">                <span class="attr">&quot;mapping&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;string&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;index&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;not_analyzed&quot;</span> <span class="punctuation">&#125;</span> </span><br><span class="line">              <span class="punctuation">&#125;</span> </span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">                <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;properties&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="comment">//将id、name、tag更换为自己表中的表头，其中keyword为Elasticsearch中用于索引结构化内容的字段</span></span><br><span class="line">                    <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;integer&quot;</span></span><br><span class="line">                    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span></span><br><span class="line">                    <span class="punctuation">&#125;</span><span class="punctuation">,</span>                    </span><br><span class="line">                    <span class="attr">&quot;tag&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;keyword&quot;</span></span><br><span class="line">                    <span class="punctuation">&#125;</span>                  </span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;aliases&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></p></li><li><p>打开cmd，将目录切换到<code>logstash-5.5.3\bin</code>，输入命令启动logstash：</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">logstash -f ./pgsql/logstash-pgsql.conf</span><br></pre></td></tr></table></figure></p></li><li><p>成功启动的截图如下：<img src="/2023/01/17/%E5%AE%9E%E7%8E%B0Postgresql%E4%B8%8EElasticsearch%E7%9A%84%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5/1.png"></p></li></ul><h2 id="安装--多表同步配置">安装--多表同步配置</h2><p>多表配置和单表配置的区别在于input模块的jdbc模块有几个type，output模块就需对应有几个type：</p><ul><li><p><code>logstash-pgsql.conf</code>文件的内容如下：</p><p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">input</span> &#123;</span><br><span class="line">    <span class="string">stdin</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="string">jdbc</span> &#123;</span><br><span class="line">      <span class="comment"># 数据库连接地址</span></span><br><span class="line">      <span class="string">jdbc_connection_string</span> <span class="string">=&gt;</span> <span class="string">&quot;jdbc:postgresql://127.0.0.1:5432/postgres&quot;</span></span><br><span class="line">      <span class="comment"># 数据库连接账号密码：</span></span><br><span class="line">      <span class="string">jdbc_user</span> <span class="string">=&gt;</span> <span class="string">&quot;***&quot;</span></span><br><span class="line">      <span class="string">jdbc_password</span> <span class="string">=&gt;</span> <span class="string">&quot;******&quot;</span></span><br><span class="line">      <span class="comment"># Pg依赖包路径</span></span><br><span class="line">      <span class="string">jdbc_driver_library</span> <span class="string">=&gt;</span> <span class="string">&quot;pgsql\postgresql-42.5.1.jar&quot;</span></span><br><span class="line">      <span class="string">jdbc_driver_class</span> <span class="string">=&gt;</span> <span class="string">&quot;org.postgresql.Driver&quot;</span></span><br><span class="line">      <span class="comment"># 开启分页查询，默认为false</span></span><br><span class="line">      <span class="string">jdbc_paging_enabled</span> <span class="string">=&gt;</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">      <span class="comment"># 单次分页查询条数（默认100000，若字段较多且更新频率较高，则建议调低此值）</span></span><br><span class="line">      <span class="string">jdbc_page_size</span> <span class="string">=&gt;</span> <span class="string">&quot;300000&quot;</span></span><br><span class="line">      <span class="string">use_column_value</span> <span class="string">=&gt;</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">      <span class="string">tracking_column</span> <span class="string">=&gt;</span> <span class="string">&quot;id&quot;</span> <span class="comment">#根据id字段更新</span></span><br><span class="line">      <span class="comment"># statement为查询数据sql，若sql较复杂，建议通过statement_filepath 配置sql文件的存放路径；</span></span><br><span class="line">      <span class="comment"># statement =&gt; &quot;SELECT * FROM public.test1&quot;</span></span><br><span class="line">      <span class="string">statement_filepath</span> <span class="string">=&gt;</span> <span class="string">&quot;pgsql\logstash-pgsql1.sql&quot;</span>  <span class="comment">#这是要操作的sql 表，下面会提供</span></span><br><span class="line">          <span class="comment"># 同步频率（分时天月年），默认为每分钟同步一次</span></span><br><span class="line">          <span class="string">schedule</span> <span class="string">=&gt;</span> <span class="string">&quot;* * * * *&quot;</span></span><br><span class="line">          <span class="comment"># 多表同步时，表类型区分，建议命名为“库名_表名”，每个jdbc模块需对应一个type；</span></span><br><span class="line">          <span class="string">type</span> <span class="string">=&gt;</span> <span class="string">&quot;postgres_test1&quot;</span></span><br><span class="line">          <span class="string">jdbc_default_timezone</span> <span class="string">=&gt;&quot;Asia/Shanghai&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="string">jdbc</span> &#123;</span><br><span class="line">          <span class="comment">#其他配置此处省略，详情参考前一个jdbc的配置</span></span><br><span class="line">          <span class="comment"># ...</span></span><br><span class="line">          </span><br><span class="line">          <span class="comment"># 多表同步时，表类型区分，建议命名为“库名_表名”，每个jdbc模块需对应一个type；</span></span><br><span class="line">          <span class="string">type</span> <span class="string">=&gt;</span> <span class="string">&quot;postgres_test2&quot;</span></span><br><span class="line">          <span class="string">jdbc_default_timezone</span> <span class="string">=&gt;&quot;Asia/Shanghai&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="string">filter</span> &#123;</span><br><span class="line">    <span class="string">json</span> &#123;</span><br><span class="line">        <span class="string">source</span> <span class="string">=&gt;</span> <span class="string">&quot;message&quot;</span></span><br><span class="line">        <span class="string">remove_field</span> <span class="string">=&gt;</span> [<span class="string">&quot;message&quot;</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="string">output</span> &#123;</span><br><span class="line">    <span class="comment"># output模块的type需和jdbc模块的type一致</span></span><br><span class="line">    <span class="string">if</span> [<span class="string">type</span>] <span class="string">==</span> <span class="string">&quot;postgres_test1&quot;</span>&#123;</span><br><span class="line">        <span class="string">elasticsearch</span> &#123;</span><br><span class="line">            <span class="comment"># 配置es集群的地址</span></span><br><span class="line">            <span class="string">hosts</span> <span class="string">=&gt;</span> [<span class="string">&quot;localhost:9200&quot;</span>]</span><br><span class="line">            <span class="comment"># 索引名称，必须小写</span></span><br><span class="line">            <span class="string">index</span> <span class="string">=&gt;</span> <span class="string">&quot;test&quot;</span></span><br><span class="line">            <span class="comment"># 模板地址</span></span><br><span class="line">                  <span class="string">template</span> <span class="string">=&gt;</span> <span class="string">&quot;pgsql\es-template.json&quot;</span>   <span class="comment">#es 索引模板，可不定义</span></span><br><span class="line">                  <span class="string">template_name</span> <span class="string">=&gt;</span> <span class="string">&quot;t-statistic-out-logstash&quot;</span></span><br><span class="line">                  <span class="string">template_overwrite</span> <span class="string">=&gt;</span> <span class="literal">true</span></span><br><span class="line">                  <span class="string">document_type</span> <span class="string">=&gt;</span> <span class="string">&quot;out&quot;</span></span><br><span class="line">            <span class="comment"># 数据唯一索引</span></span><br><span class="line">            <span class="string">document_id</span> <span class="string">=&gt;</span> <span class="string">&quot;<span class="template-variable">%&#123;id&#125;</span>&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="string">if</span> [<span class="string">type</span>] <span class="string">==</span> <span class="string">&quot;postgres_test2&quot;</span>&#123;</span><br><span class="line">        <span class="string">elasticsearch</span> &#123;</span><br><span class="line">            <span class="comment"># 配置es集群的地址</span></span><br><span class="line">            <span class="string">hosts</span> <span class="string">=&gt;</span> [<span class="string">&quot;localhost:9200&quot;</span>]</span><br><span class="line">            <span class="comment"># 索引名称，必须小写</span></span><br><span class="line">            <span class="string">index</span> <span class="string">=&gt;</span> <span class="string">&quot;test&quot;</span></span><br><span class="line">            <span class="comment"># 模板地址</span></span><br><span class="line">                  <span class="string">template</span> <span class="string">=&gt;</span> <span class="string">&quot;pgsql\es-template.json&quot;</span>   <span class="comment">#es 索引模板，可不定义</span></span><br><span class="line">                  <span class="string">template_name</span> <span class="string">=&gt;</span> <span class="string">&quot;t-statistic-out-logstash&quot;</span></span><br><span class="line">                  <span class="string">template_overwrite</span> <span class="string">=&gt;</span> <span class="literal">true</span></span><br><span class="line">                  <span class="string">document_type</span> <span class="string">=&gt;</span> <span class="string">&quot;out&quot;</span></span><br><span class="line">            <span class="comment"># 数据唯一索引</span></span><br><span class="line">            <span class="string">document_id</span> <span class="string">=&gt;</span> <span class="string">&quot;<span class="template-variable">%&#123;id&#125;</span>&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="string">stdout</span> &#123;</span><br><span class="line">        <span class="string">codec</span> <span class="string">=&gt;</span> <span class="string">json_lines</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></li></ul>]]></content>
    
    
    <summary type="html">python环境中使用Elasticsearch</summary>
    
    
    
    <category term="Elasticsearch" scheme="http://tangmenjue.top/categories/Elasticsearch/"/>
    
    <category term="python" scheme="http://tangmenjue.top/categories/python/"/>
    
    
    <category term="Elasticsearch" scheme="http://tangmenjue.top/tags/Elasticsearch/"/>
    
    <category term="python" scheme="http://tangmenjue.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python环境中Elasticsearch的使用</title>
    <link href="http://tangmenjue.top/2023/01/13/python%E7%8E%AF%E5%A2%83%E4%B8%ADElasticsearch%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://tangmenjue.top/2023/01/13/python%E7%8E%AF%E5%A2%83%E4%B8%ADElasticsearch%E7%9A%84%E4%BD%BF%E7%94%A8/</id>
    <published>2023-01-13T09:20:41.000Z</published>
    <updated>2023-01-13T09:20:41.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="elasticsearch简介">Elasticsearch简介</h1><p>Elasticsearch是目前全文搜索引擎的首选项，它可以快速地存储、搜索和分析海量数据。Elastic的底层是开源库Lucene，而Elastic是Lucene的封装，其提供了REST API的操作接口，使之可以开箱即用。维基百科、Stack Overflow、Github等网站的搜索引擎都是采用它。</p><h1 id="windows系统下elasticsearch的安装和配置">Windows系统下Elasticsearch的安装和配置</h1><h2 id="安装elasticsearch服务端">安装Elasticsearch服务端</h2><ul><li>在<a href="https://www.elastic.co/cn/downloads/elasticsearch">官网</a>中选择所需的合适版本下载即可。本文使用的Elasticsearch版本为5.5.3，下载链接为<a href="https://www.elastic.co/cn/downloads/past-releases/elasticsearch-5-5-3">Elasticsearch 5.5.3 | Elastic</a>，选择zip版本下载。</li><li>下载完成后将程序解压到电脑中，打开解压目录进入到bin文件夹，双击<code>elasticsearch.bat</code>文件即可启动Elasticsearch服务（若启动失败，则查看环境中是否安装了jdk），窗口出现以下结果则表示服务启动成功<img src="/2023/01/13/python%E7%8E%AF%E5%A2%83%E4%B8%ADElasticsearch%E7%9A%84%E4%BD%BF%E7%94%A8/0.png"></li><li>服务启动成功后，访问<code>localhost:9200</code>，若看到以下显示，则代表安装成功<img src="/2023/01/13/python%E7%8E%AF%E5%A2%83%E4%B8%ADElasticsearch%E7%9A%84%E4%BD%BF%E7%94%A8/1.png"></li></ul><h3 id="相关配置">相关配置</h3><ul><li><p>由于Elasticsearch可直接通过http请求访问，所以将9200端口直接暴露在网络当中是十分危险的，需要对访问进行限制。</p></li><li><p>在Elasticsearch安装目录下，进入config目录，打开<code>elasticsearch.yml</code>配置文件。在配置文件中，修改<code>network.host</code>配置如下：</p><p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置网络请求中的相关参数及设置</span></span><br><span class="line"><span class="attr">network.host:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line"><span class="attr">http.cors.enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">http.cors.allow-origin:</span> <span class="string">&quot;*&quot;</span></span><br></pre></td></tr></table></figure></p><p>由于本人是自己测试，因此设为了允许所有来源访问且使Elasticsearch支持跨域请求，如对访问安全有要求或者是线上的服务，建议配置为具体的IP地址<img src="/2023/01/13/python%E7%8E%AF%E5%A2%83%E4%B8%ADElasticsearch%E7%9A%84%E4%BD%BF%E7%94%A8/2.png"></p></li></ul><h2 id="安装elasticsearch客户端">安装Elasticsearch客户端</h2><ul><li><p>打开cmd，使用pip命令在项目目录中安装Elasticsearch，由于本人服务端使用的版本是5.5.3，因此客户端版本也是安装.5.3版本：</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装最新版本</span></span><br><span class="line">pip install elasticsearch</span><br><span class="line"><span class="comment"># 安装指定版本</span></span><br><span class="line">pip install elasticsearch==5.5.3</span><br></pre></td></tr></table></figure></p></li><li><p>安装完成后，在python代码中导入elasticsearch包：</p><p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> elasticsearch <span class="keyword">import</span> Elasticsearch</span><br></pre></td></tr></table></figure></p></li><li><p>接着获取elasticsearch的示例对象，不传入参数时则默认连接本地的，这里介绍三种连接方式：</p><ul><li><p>默认连接本地elasticsearch：</p><p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">es=Elasticsearch()</span><br></pre></td></tr></table></figure></p></li><li><p>连接本地9200端口：</p><p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">es=Elasticsearch([<span class="string">&#x27;127.0.0.1:9200&#x27;</span>])</span><br><span class="line">es=Elasticsearch(hosts=<span class="string">&quot;127.0.0.1&quot;</span>,port=<span class="number">9200</span>,timeout=<span class="number">3600</span>) <span class="comment"># timeout为超时时间</span></span><br></pre></td></tr></table></figure></p></li><li><p>连接集群，以列表的形式存放各节点的ip地址</p><p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">es=Elasticsearch(</span><br><span class="line">    [</span><br><span class="line">        &#123;<span class="string">&quot;host&quot;</span>:<span class="string">&quot;10.17.212.3&quot;</span>,<span class="string">&quot;port&quot;</span>:<span class="number">139</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;host&quot;</span>:<span class="string">&quot;192.168.233.1&quot;</span>,<span class="string">&quot;port&quot;</span>:<span class="number">139</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;host&quot;</span>:<span class="string">&quot;192.168.18.1&quot;</span>,<span class="string">&quot;port&quot;</span>:<span class="number">139</span>&#125;</span><br><span class="line">    ],</span><br></pre></td></tr></table></figure></p></li></ul></li><li><p>若需要配置忽略响应状态码，可编写代码如下：</p><p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">es=Elasticsearch([<span class="string">&#x27;127.0.0.1:9200&#x27;</span>],ignore=<span class="number">400</span>) <span class="comment"># 忽略返回的400状态码</span></span><br><span class="line">es=Elasticsearch([<span class="string">&#x27;127.0.0.1:9200&#x27;</span>],ignore=<span class="number">400</span>) <span class="comment"># 以列表的形式忽略多个状态码</span></span><br></pre></td></tr></table></figure></p></li></ul><h4 id="一个简单的示例">一个简单的示例</h4><p>保持Elasticsearch服务端正在运行的情况下，运行以下代码，便可以检验Elasticsearch服务端与客户端之间是否能连接：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> elasticsearch <span class="keyword">import</span> Elasticsearch</span><br><span class="line">es=Elasticsearch([<span class="string">&#x27;127.0.0.1:9200&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(es.index(index=<span class="string">&#x27;py2&#x27;</span>,doc_type=<span class="string">&#x27;doc&#x27;</span>,<span class="built_in">id</span>=<span class="number">1</span>,body=&#123;<span class="string">&quot;name&quot;</span>:<span class="string">&quot;张三&quot;</span>,<span class="string">&quot;age&quot;</span>:<span class="number">18</span>&#125;))</span><br><span class="line"><span class="built_in">print</span>(es.get(index=<span class="string">&#x27;py2&#x27;</span>,doc_type=<span class="string">&#x27;doc&#x27;</span>,<span class="built_in">id</span>=<span class="number">1</span>))</span><br><span class="line"><span class="comment"># 第1个print为创建py2索引，并插入一条数据，第2个print查询指定文档。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询结果如下：</span></span><br><span class="line">&#123;<span class="string">&#x27;_index&#x27;</span>: <span class="string">&#x27;py2&#x27;</span>, <span class="string">&#x27;_type&#x27;</span>: <span class="string">&#x27;doc&#x27;</span>, <span class="string">&#x27;_id&#x27;</span>: <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;_version&#x27;</span>: <span class="number">4</span>, <span class="string">&#x27;result&#x27;</span>: <span class="string">&#x27;updated&#x27;</span>, <span class="string">&#x27;_shards&#x27;</span>: &#123;<span class="string">&#x27;total&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;successful&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;failed&#x27;</span>: <span class="number">0</span>&#125;, <span class="string">&#x27;created&#x27;</span>: <span class="literal">False</span>&#125;</span><br><span class="line">&#123;<span class="string">&#x27;_index&#x27;</span>: <span class="string">&#x27;py2&#x27;</span>, <span class="string">&#x27;_type&#x27;</span>: <span class="string">&#x27;doc&#x27;</span>, <span class="string">&#x27;_id&#x27;</span>: <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;_version&#x27;</span>: <span class="number">4</span>, <span class="string">&#x27;found&#x27;</span>: <span class="literal">True</span>, <span class="string">&#x27;_source&#x27;</span>: &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;张三&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">18</span>&#125;&#125;</span><br></pre></td></tr></table></figure><h2 id="安装图形化插件">安装图形化插件</h2><ul><li><p>点击<a href="https://github.com/mobz/elasticsearch-head">链接</a>下载head插件，下载后解压即可</p></li><li><p>确保node.js已安装，若未安装可以在<a href="https://nodejs.org/en/download/">官网</a>处下载安装</p></li><li><p>打开cmd，进入到head插件的解压目录中，打开<code>package.json</code>文件查看使用的grunt版本，输入以下命令安装相应版本的grunt-cli</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PS D:\elasticsearch-head-master&gt; npm install grunt@1.0.1</span><br><span class="line">PS D:\elasticsearch-head-master&gt; npm install grunt@1.0.1 --save-dev</span><br></pre></td></tr></table></figure></p></li><li><p>继续输入以下命令下载项目所需的插件，启动图形化插件：</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PS D:\elasticsearch-head-master&gt; npm install</span><br><span class="line">PS D:\elasticsearch-head-master&gt; grunt server</span><br></pre></td></tr></table></figure></p><p>图像化插件成功启动的截图如下：<img src="/2023/01/13/python%E7%8E%AF%E5%A2%83%E4%B8%ADElasticsearch%E7%9A%84%E4%BD%BF%E7%94%A8/3.png"></p></li></ul><h1 id="python环境下操作elasticsearch">Python环境下操作Elasticsearch</h1><h2 id="基础操作">基础操作</h2><h3 id="创建索引">创建索引</h3><p><code>es.indices.create()</code>：创建索引</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个索引为test的索引</span></span><br><span class="line">es.indices.create(index=<span class="string">&#x27;test&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="删除索引">删除索引</h3><p><code>es.indices.delete()</code>：删除索引</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除索引为test的索引</span></span><br><span class="line">es.indices.delete(index=<span class="string">&#x27;test&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="插入数据">插入数据</h3><p><code>es.index()</code>：插入数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">doc = &#123;</span><br><span class="line">    <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;方天&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;age&#x27;</span>: <span class="string">&#x27;23&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 在test索引id为2的位置插入一条数据</span></span><br><span class="line">es.index(index=<span class="string">&#x27;test&#x27;</span>, <span class="built_in">id</span>=<span class="string">&#x27;2&#x27;</span>, document=doc)</span><br></pre></td></tr></table></figure><h3 id="删除数据">删除数据</h3><p><code>es.delete()</code>：删除指定数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除test索引id为3的数据</span></span><br><span class="line">es.delete(index=<span class="string">&#x27;test&#x27;</span>,<span class="built_in">id</span>=<span class="string">&#x27;3&#x27;</span>,doc_type=<span class="string">&#x27;_doc&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="更新数据">更新数据</h3><p><code>es.update()</code>：更新指定字段</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">doc = &#123;</span><br><span class="line">    <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;李邱俊&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;age&#x27;</span>: <span class="string">&#x27;20&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 将test索引id为2的数据更新为新数据</span></span><br><span class="line">es.update(index=<span class="string">&#x27;test&#x27;</span>,<span class="built_in">id</span>=<span class="string">&#x27;2&#x27;</span>,doc=doc)</span><br></pre></td></tr></table></figure><h3 id="查询操作">查询操作</h3><p><code>es.get()</code>：查询数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查询test索引id为1的数据</span></span><br><span class="line">es.get(index=<span class="string">&#x27;test&#x27;</span>,<span class="built_in">id</span>=<span class="string">&#x27;1&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="查询函数">查询函数</h2><h3 id="基础查询">基础查询</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查询test索引前10条数据，其中index为所需查询数据的索引</span></span><br><span class="line">es.search(index=<span class="string">&#x27;test&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="过滤字段查询">过滤字段查询</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 只显示test索引的age字段信息，其中filter_path参数为添加过滤路径，显示指定字段(默认显示所有字段信息)</span></span><br><span class="line">es.search(index=<span class="string">&#x27;test&#x27;</span>,filter_path=[<span class="string">&#x27;hits.hits._source.age&#x27;</span>])</span><br></pre></td></tr></table></figure><h3 id="切片查询">切片查询</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查询test索引中，从序号为1的位置查询两条数据，其中from_参数为从指定索引开始查询，size为查询数据的条数</span></span><br><span class="line">es.search(index=<span class="string">&#x27;test&#x27;</span>, from_=<span class="number">1</span>, size=<span class="number">2</span>)</span><br></pre></td></tr></table></figure><h3 id="模糊查询分词">模糊查询（分词）</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查询test索引中，age字段为20的数据</span></span><br><span class="line"><span class="comment"># 其中query为要查询数据的规则,match表示为模糊查询(分词)，语句query=&#123;&#x27;match&#x27;:&#123;&#x27;age&#x27;:20&#125;&#125;为检索指定的字段</span></span><br><span class="line">es.search(index=<span class="string">&#x27;test&#x27;</span>, query=&#123;<span class="string">&#x27;match&#x27;</span>:&#123;<span class="string">&#x27;age&#x27;</span>:<span class="number">20</span>&#125;&#125;)</span><br></pre></td></tr></table></figure><h3 id="模糊查询不分词">模糊查询（不分词）</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查询test索引中，name字段为杨晨的数据,match_phrase表示为模糊查询(不分词)，</span></span><br><span class="line">es.search(index=<span class="string">&#x27;test&#x27;</span>, query=&#123;<span class="string">&#x27;match_phrase&#x27;</span>:&#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;杨晨&#x27;</span>&#125;&#125;)</span><br></pre></td></tr></table></figure><h3 id="精准单值查询">精准单值查询</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查询test索引中，age为20的数据，term表示为精确单值查询，terms表示为精确多值查询</span></span><br><span class="line">es.search(index=<span class="string">&#x27;test&#x27;</span>, query=&#123;<span class="string">&#x27;term&#x27;</span>:&#123;<span class="string">&#x27;age&#x27;</span>:<span class="number">20</span>&#125;&#125;)</span><br><span class="line"><span class="comment"># 查询test索引中，name为杨晨的数据，查询中文，要在字段后面加上.keyword</span></span><br><span class="line">es.search(index=<span class="string">&#x27;test&#x27;</span>, query=&#123;<span class="string">&#x27;term&#x27;</span>:&#123;<span class="string">&#x27;name.keyword&#x27;</span>:<span class="string">&#x27;杨晨&#x27;</span>&#125;&#125;)</span><br></pre></td></tr></table></figure><h3 id="多字段查询">多字段查询</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查询test索引中，name和about都为小美的数据，multi_match表示为多字段查询</span></span><br><span class="line">es.search(index=<span class="string">&#x27;test&#x27;</span>,query=&#123;<span class="string">&#x27;multi_match&#x27;</span>:&#123;<span class="string">&#x27;query&#x27;</span>:<span class="string">&#x27;小美&#x27;</span>,<span class="string">&quot;fields&quot;</span>:[<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;about&#x27;</span>]&#125;&#125;)</span><br></pre></td></tr></table></figure><h3 id="前缀查询">前缀查询</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查询test索引中，name字段前缀为小的数据，prefix表示为前缀查询</span></span><br><span class="line">es.search(index=<span class="string">&#x27;test&#x27;</span>,query=&#123;<span class="string">&#x27;prefix&#x27;</span>:&#123;<span class="string">&#x27;name.keyword&#x27;</span>:<span class="string">&#x27;小&#x27;</span>&#125;&#125;)</span><br></pre></td></tr></table></figure><h3 id="通配符查询">通配符查询</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查询test索引中，name字段为杨*的数据，wildcard表示启用通配符查询，?代表一个字符，*代表0或多个字符，只能查询单一格式的数据</span></span><br><span class="line">es.search(index=<span class="string">&#x27;test&#x27;</span>,query=&#123;<span class="string">&#x27;wildcard&#x27;</span>:&#123;<span class="string">&#x27;name.keyword&#x27;</span>:<span class="string">&#x27;杨?&#x27;</span>&#125;&#125;)</span><br></pre></td></tr></table></figure><h3 id="正则查询">正则查询</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查询test索引中，name字段为杨*的数据，regexp表示启用正则查询</span></span><br><span class="line"><span class="built_in">print</span>(es.search(index=<span class="string">&#x27;test&#x27;</span>,query=&#123;<span class="string">&#x27;regexp&#x27;</span>:&#123;<span class="string">&#x27;name.keyword&#x27;</span>:<span class="string">&#x27;杨.&#x27;</span>&#125;&#125;))</span><br></pre></td></tr></table></figure><h3 id="多条件查询">多条件查询</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查询test索引中，name字段为小美，id字段为1的数据</span></span><br><span class="line"><span class="comment"># 其中bool表示多条件查询，must表示与，should表示或,must_not表示非</span></span><br><span class="line"><span class="built_in">print</span>(es.search(index=<span class="string">&#x27;test&#x27;</span>,query=&#123;<span class="string">&#x27;bool&#x27;</span>:&#123;<span class="string">&#x27;must&#x27;</span>:&#123;<span class="string">&#x27;term&#x27;</span>:&#123;<span class="string">&#x27;name&#x27;</span>:<span class="string">&#x27;小美&#x27;</span>&#125;,<span class="string">&#x27;term&#x27;</span>:&#123;<span class="string">&#x27;id&#x27;</span>:<span class="string">&#x27;1&#x27;</span>&#125;&#125;&#125;&#125;))</span><br></pre></td></tr></table></figure><h3 id="存在字段查询">存在字段查询</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查询test索引中，包含age字段的数据，其中exists表示存在字段查询</span></span><br><span class="line"><span class="built_in">print</span>(es.search(index=<span class="string">&#x27;test&#x27;</span>,query=&#123;<span class="string">&#x27;exists&#x27;</span>:&#123;<span class="string">&#x27;field&#x27;</span>:<span class="string">&#x27;age&#x27;</span>&#125;&#125;))</span><br></pre></td></tr></table></figure><h3 id="范围查询">范围查询</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查询test索引中，age字段大于20小于等于23的数据</span></span><br><span class="line"><span class="comment"># 其中range表示范围查询，gt表示大于，gte表示大于等于，lt表示小于，lte表示小于等于</span></span><br><span class="line"><span class="built_in">print</span>(es.search(index=<span class="string">&#x27;test&#x27;</span>,query=&#123;<span class="string">&#x27;range&#x27;</span>:&#123;<span class="string">&#x27;age&#x27;</span>:&#123;<span class="string">&#x27;gt&#x27;</span>:<span class="number">20</span>,<span class="string">&#x27;lte&#x27;</span>:<span class="number">23</span>&#125;&#125;&#125;))</span><br></pre></td></tr></table></figure><h3 id="json字段查询">Json字段查询</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查询test索引中，jsonfield1字段下json数据jsonfield2字段的数据包含&#x27;json&#x27;的数据</span></span><br><span class="line"><span class="comment"># 其中nested表示json数据查询，path参数为指定json数据的字段，query参数为指定的查询方式</span></span><br><span class="line"><span class="built_in">print</span>(es.search(index=<span class="string">&#x27;test&#x27;</span>,query=&#123;<span class="string">&#x27;nested&#x27;</span>:&#123;<span class="string">&#x27;path&#x27;</span>:<span class="string">&#x27;jsonfield1&#x27;</span>,<span class="string">&#x27;query&#x27;</span>:&#123;<span class="string">&#x27;term&#x27;</span>:&#123;<span class="string">&#x27;jsonfield1.jsonfield2&#x27;</span>:<span class="string">&#x27;json&#x27;</span>&#125;&#125;&#125;&#125;))</span><br></pre></td></tr></table></figure><h3 id="排序">排序</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查询test索引中的数据，按照age字段降序，其中sort表示排序查询，参数asc为升序，desc为降序</span></span><br><span class="line"><span class="built_in">print</span>(es.search(index=<span class="string">&#x27;test&#x27;</span>, sort=&#123;<span class="string">&#x27;age.keyword&#x27;</span>:&#123;<span class="string">&#x27;order&#x27;</span>:<span class="string">&#x27;desc&#x27;</span>&#125;&#125;))</span><br></pre></td></tr></table></figure><h1 id="通过网络请求操作elasticsearch">通过网络请求操作ElasticSearch</h1><h2 id="创建索引与映射字段">创建索引与映射字段</h2><p>创建索引的语法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">PUT http://localhost:9200/索引库名</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;mappings&quot;</span>:&#123;</span><br><span class="line">    <span class="string">&quot;类型名称&quot;</span>:&#123;</span><br><span class="line">      <span class="string">&quot;properties&quot;</span>:&#123;</span><br><span class="line">        <span class="string">&quot;字段名&quot;</span>:&#123;</span><br><span class="line">          <span class="string">&quot;type&quot;</span>:<span class="string">&quot;类型&quot;</span>,</span><br><span class="line">          <span class="string">&quot;index&quot;</span>:<span class="literal">true</span>,</span><br><span class="line">          <span class="string">&quot;store&quot;</span>:<span class="literal">true</span>,</span><br><span class="line">          <span class="string">&quot;analyzer&quot;</span>:<span class="string">&quot;分词器&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参数详情如下：</p><ul><li>类型名称：就是type的概念，类似于数据库中的不同表</li><li>字段名：类似于数据库中的字段名称</li><li>type：类似于数据库中字段的类型，可以是text、long、short、data、object等</li><li>index：是否索引，默认为true。若需要根据该字段进行查询或排序，则需要将该字段index设置为true，否则设置为false</li><li>store：是否单独存储，默认为false，一般内容比较多的字段设置成true，可以提升查询性能</li><li>analyzer：分词器，如<code>ik_smart</code>、<code>ik_max_word</code>等</li></ul><p>示例</p><ul><li><p>通过postman发送PUT请求创建索引，以下代码在Elasticsearch 6.x以下能正常执行：</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">PUT http://localhost:9200/sku</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;mappings&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;doc&quot;</span>:&#123;</span><br><span class="line">      <span class="string">&quot;properties&quot;</span>:&#123;</span><br><span class="line">        <span class="string">&quot;name&quot;</span>:&#123;</span><br><span class="line">          <span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span>,</span><br><span class="line">          <span class="string">&quot;analyzer&quot;</span>:<span class="string">&quot;ik_smart&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;price&quot;</span>:&#123;</span><br><span class="line">          <span class="string">&quot;type&quot;</span>:<span class="string">&quot;integer&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;image&quot;</span>:&#123;</span><br><span class="line">          <span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;createTime&quot;</span>:&#123;</span><br><span class="line">          <span class="string">&quot;type&quot;</span>:<span class="string">&quot;date&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;spuId&quot;</span>:&#123;</span><br><span class="line">          <span class="string">&quot;type&quot;</span>:<span class="string">&quot;text&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;categoryName&quot;</span>:&#123;</span><br><span class="line">          <span class="string">&quot;type&quot;</span>:<span class="string">&quot;keyword&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;brandName&quot;</span>:&#123;</span><br><span class="line">          <span class="string">&quot;type&quot;</span>:<span class="string">&quot;keyword&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;spec&quot;</span>:&#123;</span><br><span class="line">          <span class="string">&quot;type&quot;</span>:<span class="string">&quot;object&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;selNum&quot;</span>:&#123;</span><br><span class="line">          <span class="string">&quot;type&quot;</span>:<span class="string">&quot;integer&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">&quot;commentNum&quot;</span>:&#123;</span><br><span class="line">          <span class="string">&quot;type&quot;</span>:<span class="string">&quot;integer&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></li><li><p>执行成功则返回的结果为：</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;acknowledged&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&quot;shards_acknowledged&quot;</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></li></ul><h3 id="查看索引字段类型">查看索引字段类型</h3><p>使用postman查看索引字段类型语法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看sku文档</span></span><br><span class="line">GET http://localhost:9200/sku/_mapping</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看group文档</span></span><br><span class="line">GET http://localhost:9200/group/_mapping</span><br></pre></td></tr></table></figure><h2 id="文档增加与修改">文档增加与修改</h2><h3 id="增加文档自动生成id">增加文档自动生成ID</h3><p>通过POST请求，可以向一个已经存在的索引库中添加数据，语法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">POST http://localhost:9200/索引库名/类型名</span><br><span class="line">&#123;</span><br><span class="line">      <span class="string">&quot;key&quot;</span>:<span class="string">&quot;value&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用postman发送POST请求示例如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">POST http://localhost:9200/sku/doc</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;name&quot;</span>:<span class="string">&quot;小米手机&quot;</span>,</span><br><span class="line">  <span class="string">&quot;price&quot;</span>:200000,</span><br><span class="line">  <span class="string">&quot;spuId&quot;</span>:101,</span><br><span class="line">  <span class="string">&quot;createTime&quot;</span>:<span class="string">&quot;2020-05-09&quot;</span>,</span><br><span class="line">  <span class="string">&quot;brandName&quot;</span>:<span class="string">&quot;小米&quot;</span>,</span><br><span class="line">  <span class="string">&quot;categoryName&quot;</span>:<span class="string">&quot;手机&quot;</span>,</span><br><span class="line">  <span class="string">&quot;saleNum&quot;</span>:10012,</span><br><span class="line">  <span class="string">&quot;commentNum&quot;</span>:323,</span><br><span class="line">  <span class="string">&quot;spec&quot;</span>:&#123;</span><br><span class="line">    <span class="string">&quot;网络制式&quot;</span>:<span class="string">&quot;移动4g&quot;</span>,</span><br><span class="line">    <span class="string">&quot;屏幕尺寸&quot;</span>:<span class="string">&quot;4.5&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行成功时返回信息如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">    <span class="string">&quot;_index&quot;</span>: <span class="string">&quot;sku&quot;</span>,</span><br><span class="line">    <span class="string">&quot;_type&quot;</span>: <span class="string">&quot;doc&quot;</span>,</span><br><span class="line">    <span class="string">&quot;_id&quot;</span>: <span class="string">&quot;AYWp1L_wYrK1VsxqV5G5&quot;</span>,</span><br><span class="line">    <span class="string">&quot;_version&quot;</span>: 1,</span><br><span class="line">    <span class="string">&quot;result&quot;</span>: <span class="string">&quot;created&quot;</span>,</span><br><span class="line">    <span class="string">&quot;_shards&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;total&quot;</span>: 2,</span><br><span class="line">        <span class="string">&quot;successful&quot;</span>: 1,</span><br><span class="line">        <span class="string">&quot;failed&quot;</span>: 0</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;created&quot;</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="新增文档指定id">新增文档指定ID</h3><p>若想要在新增文档时指定ID，可以通过PUT命令，其语法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PUT http://localhost:9200/索引库名/类型/ID值</span><br><span class="line">&#123;</span><br><span class="line">   ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用postman发送PUT请求示例如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;name&quot;</span>:<span class="string">&quot;小米电视&quot;</span>,</span><br><span class="line">  <span class="string">&quot;price&quot;</span>:100000,</span><br><span class="line">  <span class="string">&quot;spuId&quot;</span>:10110,</span><br><span class="line">  <span class="string">&quot;createTime&quot;</span>:<span class="string">&quot;2020-05-09&quot;</span>,</span><br><span class="line">  <span class="string">&quot;brandName&quot;</span>:<span class="string">&quot;小米&quot;</span>,</span><br><span class="line">  <span class="string">&quot;categoryName&quot;</span>:<span class="string">&quot;电视&quot;</span>,</span><br><span class="line">  <span class="string">&quot;saleNum&quot;</span>:10012,</span><br><span class="line">  <span class="string">&quot;commentNum&quot;</span>:323,</span><br><span class="line">  <span class="string">&quot;spec&quot;</span>:&#123;</span><br><span class="line">    <span class="string">&quot;网络制式&quot;</span>:<span class="string">&quot;移动4g&quot;</span>,</span><br><span class="line">    <span class="string">&quot;屏幕尺寸&quot;</span>:<span class="string">&quot;39&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行成功时返回信息如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;_index&quot;</span>: <span class="string">&quot;sku&quot;</span>,</span><br><span class="line">    <span class="string">&quot;_type&quot;</span>: <span class="string">&quot;doc&quot;</span>,</span><br><span class="line">    <span class="string">&quot;_id&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;_version&quot;</span>: 1,</span><br><span class="line">    <span class="string">&quot;result&quot;</span>: <span class="string">&quot;created&quot;</span>,</span><br><span class="line">    <span class="string">&quot;_shards&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;total&quot;</span>: 2,</span><br><span class="line">        <span class="string">&quot;successful&quot;</span>: 1,</span><br><span class="line">        <span class="string">&quot;failed&quot;</span>: 0</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;created&quot;</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过GET请求可以查询新增的数据：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">GET http://localhost:9200/sku/_search</span><br><span class="line"><span class="comment"># 返回的结果为</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;took&quot;</span>: 1,</span><br><span class="line">    <span class="string">&quot;timed_out&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&quot;_shards&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;total&quot;</span>: 5,</span><br><span class="line">        <span class="string">&quot;successful&quot;</span>: 5,</span><br><span class="line">        <span class="string">&quot;failed&quot;</span>: 0</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;hits&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;total&quot;</span>: 2,</span><br><span class="line">        <span class="string">&quot;max_score&quot;</span>: 1.0,</span><br><span class="line">        <span class="string">&quot;hits&quot;</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">&quot;_index&quot;</span>: <span class="string">&quot;sku&quot;</span>,</span><br><span class="line">                <span class="string">&quot;_type&quot;</span>: <span class="string">&quot;doc&quot;</span>,</span><br><span class="line">                <span class="string">&quot;_id&quot;</span>: <span class="string">&quot;AYWp1L_wYrK1VsxqV5G5&quot;</span>,</span><br><span class="line">                <span class="string">&quot;_score&quot;</span>: 1.0,</span><br><span class="line">                <span class="string">&quot;_source&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;小米手机&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;price&quot;</span>: 200000,</span><br><span class="line">                    <span class="string">&quot;spuId&quot;</span>: 101,</span><br><span class="line">                    <span class="string">&quot;createTime&quot;</span>: <span class="string">&quot;2020-05-09&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;brandName&quot;</span>: <span class="string">&quot;小米&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;categoryName&quot;</span>: <span class="string">&quot;手机&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;saleNum&quot;</span>: 10012,</span><br><span class="line">                    <span class="string">&quot;commentNum&quot;</span>: 323,</span><br><span class="line">                    <span class="string">&quot;spec&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;网络制式&quot;</span>: <span class="string">&quot;移动4g&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;屏幕尺寸&quot;</span>: <span class="string">&quot;4.5&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">&quot;_index&quot;</span>: <span class="string">&quot;sku&quot;</span>,</span><br><span class="line">                <span class="string">&quot;_type&quot;</span>: <span class="string">&quot;doc&quot;</span>,</span><br><span class="line">                <span class="string">&quot;_id&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">                <span class="string">&quot;_score&quot;</span>: 1.0,</span><br><span class="line">                <span class="string">&quot;_source&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;小米电视&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;price&quot;</span>: 100000,</span><br><span class="line">                    <span class="string">&quot;spuId&quot;</span>: 10110,</span><br><span class="line">                    <span class="string">&quot;createTime&quot;</span>: <span class="string">&quot;2020-05-09&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;brandName&quot;</span>: <span class="string">&quot;小米&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;categoryName&quot;</span>: <span class="string">&quot;电视&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;saleNum&quot;</span>: 10012,</span><br><span class="line">                    <span class="string">&quot;commentNum&quot;</span>: 323,</span><br><span class="line">                    <span class="string">&quot;spec&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;网络制式&quot;</span>: <span class="string">&quot;移动4g&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;屏幕尺寸&quot;</span>: <span class="string">&quot;39&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="修改索引文档">修改索引文档</h3><p>可以继续通过<code>PUT/索引库名/类型/ID值</code>的方式来更改刚才插入的数据：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">PUT http://localhost:9200/sku/doc/1</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;name&quot;</span>:<span class="string">&quot;华为电视&quot;</span>,</span><br><span class="line">  <span class="string">&quot;price&quot;</span>:100000,</span><br><span class="line">  <span class="string">&quot;spuId&quot;</span>:10110,</span><br><span class="line">  <span class="string">&quot;createTime&quot;</span>:<span class="string">&quot;2020-05-09&quot;</span>,</span><br><span class="line">  <span class="string">&quot;brandName&quot;</span>:<span class="string">&quot;华为&quot;</span>,</span><br><span class="line">  <span class="string">&quot;categoryName&quot;</span>:<span class="string">&quot;电视&quot;</span>,</span><br><span class="line">  <span class="string">&quot;saleNum&quot;</span>:10012,</span><br><span class="line">  <span class="string">&quot;commentNum&quot;</span>:323,</span><br><span class="line">  <span class="string">&quot;spec&quot;</span>:&#123;</span><br><span class="line">    <span class="string">&quot;网络制式&quot;</span>:<span class="string">&quot;移动4g&quot;</span>,</span><br><span class="line">    <span class="string">&quot;屏幕尺寸&quot;</span>:<span class="string">&quot;39&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="通过id删除索引文档">通过ID删除索引文档</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DELETE http://localhost:9200/sku/doc/1</span><br></pre></td></tr></table></figure><h2 id="索引查询">索引查询</h2><p>基本语法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET http://localhost:9200/索引库名/_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;query&quot;</span>:&#123;</span><br><span class="line">        <span class="string">&quot;查询类型&quot;</span>:&#123;</span><br><span class="line">             <span class="string">&quot;查询条件&quot;</span>:<span class="string">&quot;查询条件值&quot;</span></span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的query代表一个查询对象，里面可以有不同的查询属性：</p><ul><li>查询类型：如match_all、match、term、range等</li><li>查询条件：查询条件会根据类型的不同，写法也有差异</li></ul><h3 id="查询所有数据match_all">查询所有数据(match_all)</h3><p>代码示例如下，其中query代表查询对象，match_all代表查询所有：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">GET http://localhost:9200/sku/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;match_all&quot;</span>: &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 也可以简写成</span></span><br><span class="line">GET http://localhost:9200/sku/_search</span><br></pre></td></tr></table></figure><h3 id="匹配查询match">匹配查询(match)</h3><p>查询名称包含手机的记录代码示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET http://localhost:9200/sku/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;match&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;name&quot;</span>: <span class="string">&quot;手机&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>默认情况下，在查询时会先搜索关键字进行分词，对分词后的字符串进行查询，只要是包含这些字符串的都是要被查询出来的，多个词之间是or的关系。如查询“小米电视”，查询结果会有“小米手机”、“小米电视”、“三星电视”等包含了“小米”和“电视”的词汇。</p><p><strong>由于查询结果的匹配分值<code>_score</code>是不一样的，分值高的排在前面。</strong></p><p>若是想要精确查询，想要只查询包含“小米电视”的记录，语句该这样写：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">GET http://localhost:9200/sku/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;match&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;name&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;query&quot;</span>: <span class="string">&quot;小米电视&quot;</span>,</span><br><span class="line">        <span class="string">&quot;operator&quot;</span>: <span class="string">&quot;and&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="控制精度">控制精度</h3><p>若用户给定5个查询词项，想查找只包含其中4个的文档时，将operator操作符参数设置成and只会将此文档排除。此时match查询的最小匹配参数<code>minimum_should_match</code>便起到重要作用了，利用该参数便可以指定必须匹配的词项数用来表示一个文档是否相关。可以将这一参数设置为某个具体数字，最常用的是无法控制用户搜索时输入的单词数量时，将其设置为一个百分数。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">GET http://localhost:9200/sku/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;match&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;title&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;query&quot;</span>: <span class="string">&quot;quick brown dog&quot;</span>,</span><br><span class="line">        <span class="string">&quot;minimum_should_match&quot;</span>: <span class="string">&quot;75%&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="多字段查询multi_match">多字段查询(multi_match)</h3><p><code>multi_match</code>与<code>match</code>类似，不同的是它可以在多个字段中查询：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">GET http://localhost:9200/sku/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;multi_match&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;query&quot;</span>: <span class="string">&quot;小米&quot;</span>,</span><br><span class="line">      <span class="string">&quot;fields&quot;</span>: [<span class="string">&quot;name&quot;</span>,<span class="string">&quot;brandName&quot;</span>,<span class="string">&quot;categoryName&quot;</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="查询字段的模糊匹配">查询字段的模糊匹配</h4><p>字段名称可以用模糊匹配的方式给出：任何与模糊模式正则匹配的字段都会被包括在搜索条件中。如可以使用以下方式同时匹配book_title、chapter_title和section_title（书名、章名、节名）这三个字段：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;multi_match&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;query&quot;</span>:  <span class="string">&quot;Quick brown fox&quot;</span>,</span><br><span class="line">        <span class="string">&quot;fields&quot;</span>: <span class="string">&quot;*_title&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="提升单个字段的权重">提升单个字段的权重</h4><p>可以使用<code>^</code>字符语法为单个字段提升权重，在字段名称的末尾添加<code>^boost</code>，其中boost是一个浮点数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;multi_match&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;query&quot;</span>:  <span class="string">&quot;Quick brown fox&quot;</span>,</span><br><span class="line">        <span class="string">&quot;fields&quot;</span>: [ <span class="string">&quot;*_title&quot;</span>, <span class="string">&quot;chapter_title^2&quot;</span> ] </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时<code>chapter_title</code>字段的boost值为2，而其他两个字段的默认boost值为1。</p><h3 id="词条查询term">词条查询(term)</h3><p>term查询被用于精确匹配，这些精确值可能是数字、时间、布尔或者是那些未分词的字符串。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET http://localhost:9200/sku/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;term&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;price&quot;</span>: 200000</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="多词条查询terms">多词条查询(terms)</h3><p>terms查询和term查询一样，区别是它允许指定多个值进行匹配。如果这个词段包含了指定中的任何一个值，那么这个文档便视为满足条件（类似于SQL中的in）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET http://localhost:9200/sku/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;terms&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;price&quot;</span>: [200000,100000]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="布尔组合bool">布尔组合(bool)</h3><p>bool把各种其他查询通过must(与)、must_not(非)、should(或)的方式进行组合。</p><p>如查询名称包含手机的，且品牌为小米的记录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">GET http://localhost:9200/sku/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;bool&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;must&quot;</span>: [</span><br><span class="line">        &#123;<span class="string">&quot;match&quot;</span>: &#123;</span><br><span class="line">          <span class="string">&quot;name&quot;</span>: <span class="string">&quot;手机&quot;</span></span><br><span class="line">        &#125;&#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">&quot;term&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;brandName&quot;</span>: &#123;</span><br><span class="line">              <span class="string">&quot;value&quot;</span>: <span class="string">&quot;小米&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如查询名称包含手机的，或品牌为小米的记录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">GET http://localhost:9200/sku/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;bool&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;should&quot;</span>: [</span><br><span class="line">        &#123;<span class="string">&quot;match&quot;</span>: &#123;</span><br><span class="line">          <span class="string">&quot;name&quot;</span>: <span class="string">&quot;手机&quot;</span></span><br><span class="line">        &#125;&#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">&quot;term&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;brandName&quot;</span>: &#123;</span><br><span class="line">              <span class="string">&quot;value&quot;</span>: <span class="string">&quot;小米&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="过滤查询">过滤查询</h3><p>过滤是针对搜索结果进行过滤，过滤器主要判断的是文档是否匹配，不去计算和判断文档的匹配度得分，因此过滤器性能比查询要高，且方便缓存。因此推荐尽量使用过滤器去实现查询或者过滤器和查询共同使用。</p><p>过滤品牌为小米的记录如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">GET http://localhost:9200/sku/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;bool&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;filter&quot;</span>: [</span><br><span class="line">        &#123;<span class="string">&quot;match&quot;</span>:&#123;</span><br><span class="line">          <span class="string">&quot;brandName&quot;</span>:<span class="string">&quot;小米&quot;</span></span><br><span class="line">        &#125;&#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查询结果如下（注意<code>_score</code>为0）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;took&quot;</span>: 3,</span><br><span class="line">    <span class="string">&quot;timed_out&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&quot;_shards&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;total&quot;</span>: 5,</span><br><span class="line">        <span class="string">&quot;successful&quot;</span>: 5,</span><br><span class="line">        <span class="string">&quot;failed&quot;</span>: 0</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;hits&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;total&quot;</span>: 1,</span><br><span class="line">        <span class="string">&quot;max_score&quot;</span>: 0.0,</span><br><span class="line">        <span class="string">&quot;hits&quot;</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">&quot;_index&quot;</span>: <span class="string">&quot;sku&quot;</span>,</span><br><span class="line">                <span class="string">&quot;_type&quot;</span>: <span class="string">&quot;doc&quot;</span>,</span><br><span class="line">                <span class="string">&quot;_id&quot;</span>: <span class="string">&quot;AYWp1L_wYrK1VsxqV5G5&quot;</span>,</span><br><span class="line">                <span class="string">&quot;_score&quot;</span>: 0.0,</span><br><span class="line">                <span class="string">&quot;_source&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;name&quot;</span>: <span class="string">&quot;小米手机&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;price&quot;</span>: 200000,</span><br><span class="line">                    <span class="string">&quot;spuId&quot;</span>: 101,</span><br><span class="line">                    <span class="string">&quot;createTime&quot;</span>: <span class="string">&quot;2020-05-09&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;brandName&quot;</span>: <span class="string">&quot;小米&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;categoryName&quot;</span>: <span class="string">&quot;手机&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;saleNum&quot;</span>: 10012,</span><br><span class="line">                    <span class="string">&quot;commentNum&quot;</span>: 323,</span><br><span class="line">                    <span class="string">&quot;spec&quot;</span>: &#123;</span><br><span class="line">                        <span class="string">&quot;网络制式&quot;</span>: <span class="string">&quot;移动4g&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;屏幕尺寸&quot;</span>: <span class="string">&quot;4.5&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="分组查询">分组查询</h3><p>按分组名称聚合查询，统计每个分组的数量，类似于SQL中的group by，示例如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">GET http://localhost:9200/sku/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;size&quot;</span>: 0,</span><br><span class="line">  <span class="string">&quot;aggs&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;sku_category&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;terms&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;field&quot;</span>: <span class="string">&quot;categoryName&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将size设为0时，不会将数据查询出来，目的是让查询更快。</p><p>除此之外还可以查询多个分组：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">GET http://localhost:9200/sku/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;size&quot;</span>: 0,</span><br><span class="line">  <span class="string">&quot;aggs&quot;</span>: &#123;</span><br><span class="line">    <span class="string">&quot;sku_category&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;terms&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;field&quot;</span>: <span class="string">&quot;categoryName&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;sku_brand&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;terms&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;field&quot;</span>: <span class="string">&quot;brandName&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="范围">范围</h3><p>Elasticsearch的范围查询可以用来查询处于某个范围内的文档，range查询可同时提供包含(inclusive)和不包含(exclusive)这两种范围表达式，范围的选项如下：</p><ul><li>gt：大于</li><li>lt：小于</li><li>gte：大于或等于</li><li>lte：小于或等于</li></ul><p>示例如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">GET http://localhost:9200/sku/_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;query&quot;</span> : &#123;</span><br><span class="line">        <span class="string">&quot;constant_score&quot;</span> : &#123;</span><br><span class="line">            <span class="string">&quot;filter&quot;</span> : &#123;</span><br><span class="line">                <span class="string">&quot;range&quot;</span> : &#123;</span><br><span class="line">                    <span class="string">&quot;price&quot;</span> : &#123;</span><br><span class="line">                        <span class="string">&quot;gte&quot;</span> : 20,</span><br><span class="line">                        <span class="string">&quot;lt&quot;</span>  : 40</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>若想要范围是无界，如<code>[20,+∞)</code>，只须省略其中一边(gte)的限制即可。</p><h4 id="日期范围">日期范围</h4><p>range查询同样可以应用在日期字段上。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">GET http://localhost:9200/sku/_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;query&quot;</span> : &#123;</span><br><span class="line">        <span class="string">&quot;constant_score&quot;</span> : &#123;</span><br><span class="line">            <span class="string">&quot;filter&quot;</span> : &#123;</span><br><span class="line">                <span class="string">&quot;range&quot;</span> : &#123;</span><br><span class="line">                    <span class="string">&quot;timestamp&quot;</span> : &#123;</span><br><span class="line">                        <span class="string">&quot;gt&quot;</span> : <span class="string">&quot;2014-01-01 00:00:00&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;lt&quot;</span> : <span class="string">&quot;2014-01-07 00:00:00&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当使用它处理日期字段时，range查询支持对日期计算进行操作，如查找时间戳在过去一小时内的所有文档：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;range&quot;</span> : &#123;</span><br><span class="line">    <span class="string">&quot;timestamp&quot;</span> : &#123;</span><br><span class="line">        <span class="string">&quot;gt&quot;</span> : <span class="string">&quot;now-1h&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>日期计算还可以被应用到某个具体的时间，并非只能是一个像now这样的占位符。只要在某个日期后加上一个双管符号(<code>||</code>)并紧跟一个日期数学表达式就能做到，如设置早于2014年1月1日的日期都额外加1个月：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;range&quot;</span> : &#123;</span><br><span class="line">    <span class="string">&quot;timestamp&quot;</span> : &#123;</span><br><span class="line">        <span class="string">&quot;gt&quot;</span> : <span class="string">&quot;2014-01-01 00:00:00&quot;</span>,</span><br><span class="line">        <span class="string">&quot;lt&quot;</span> : <span class="string">&quot;2014-01-01 00:00:00||+1M&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="存在查询exists">存在查询(exists)</h3><h4 id="处理非null值">处理非Null值</h4><p>设置各条测试数据的tags值：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">POST http://localhost:9200/my_index/posts/_bulk</span><br><span class="line">&#123; <span class="string">&quot;index&quot;</span>: &#123; <span class="string">&quot;_id&quot;</span>: <span class="string">&quot;1&quot;</span>              &#125;&#125;</span><br><span class="line">&#123; <span class="string">&quot;tags&quot;</span> : [<span class="string">&quot;search&quot;</span>]                &#125;  </span><br><span class="line">&#123; <span class="string">&quot;index&quot;</span>: &#123; <span class="string">&quot;_id&quot;</span>: <span class="string">&quot;2&quot;</span>              &#125;&#125;</span><br><span class="line">&#123; <span class="string">&quot;tags&quot;</span> : [<span class="string">&quot;search&quot;</span>, <span class="string">&quot;open_source&quot;</span>] &#125;  </span><br><span class="line">&#123; <span class="string">&quot;index&quot;</span>: &#123; <span class="string">&quot;_id&quot;</span>: <span class="string">&quot;3&quot;</span>              &#125;&#125;</span><br><span class="line">&#123; <span class="string">&quot;other_field&quot;</span> : <span class="string">&quot;some data&quot;</span>        &#125;  </span><br><span class="line">&#123; <span class="string">&quot;index&quot;</span>: &#123; <span class="string">&quot;_id&quot;</span>: <span class="string">&quot;4&quot;</span>              &#125;&#125;</span><br><span class="line">&#123; <span class="string">&quot;tags&quot;</span> : null                      &#125;  </span><br><span class="line">&#123; <span class="string">&quot;index&quot;</span>: &#123; <span class="string">&quot;_id&quot;</span>: <span class="string">&quot;5&quot;</span>              &#125;&#125;</span><br><span class="line">&#123; <span class="string">&quot;tags&quot;</span> : [<span class="string">&quot;search&quot;</span>, null]          &#125;</span><br></pre></td></tr></table></figure><p>tags值顺序为：</p><p>1、tags 字段有 1 个值。 2、tags 字段有 2 个值。 3、tags 字段缺失。 4、tags 字段被置为 null 。 5、tags 字段有 1 个值和 1 个 null 。</p><p>现在要找到那些被设置过标签字段的文档，并不关心标签的具体内容，只要标签存在即可，使用exists查询如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">GET http://localhost:9200/my_index/posts/_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;query&quot;</span> : &#123;</span><br><span class="line">        <span class="string">&quot;constant_score&quot;</span> : &#123;</span><br><span class="line">            <span class="string">&quot;filter&quot;</span> : &#123;</span><br><span class="line">                <span class="string">&quot;exists&quot;</span> : &#123; <span class="string">&quot;field&quot;</span> : <span class="string">&quot;tags&quot;</span> &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查询返回了3个文档：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;took&quot;</span>: 1,</span><br><span class="line">    <span class="string">&quot;timed_out&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&quot;_shards&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;total&quot;</span>: 5,</span><br><span class="line">        <span class="string">&quot;successful&quot;</span>: 5,</span><br><span class="line">        <span class="string">&quot;failed&quot;</span>: 0</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;hits&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;total&quot;</span>: 3,</span><br><span class="line">        <span class="string">&quot;max_score&quot;</span>: 1.0,</span><br><span class="line">        <span class="string">&quot;hits&quot;</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">&quot;_index&quot;</span>: <span class="string">&quot;my_index&quot;</span>,</span><br><span class="line">                <span class="string">&quot;_type&quot;</span>: <span class="string">&quot;posts&quot;</span>,</span><br><span class="line">                <span class="string">&quot;_id&quot;</span>: <span class="string">&quot;5&quot;</span>,</span><br><span class="line">                <span class="string">&quot;_score&quot;</span>: 1.0,</span><br><span class="line">                <span class="string">&quot;_source&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;tags&quot;</span>: [</span><br><span class="line">                        <span class="string">&quot;search&quot;</span>,</span><br><span class="line">                        null</span><br><span class="line">                    ]</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">&quot;_index&quot;</span>: <span class="string">&quot;my_index&quot;</span>,</span><br><span class="line">                <span class="string">&quot;_type&quot;</span>: <span class="string">&quot;posts&quot;</span>,</span><br><span class="line">                <span class="string">&quot;_id&quot;</span>: <span class="string">&quot;2&quot;</span>,</span><br><span class="line">                <span class="string">&quot;_score&quot;</span>: 1.0,</span><br><span class="line">                <span class="string">&quot;_source&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;tags&quot;</span>: [</span><br><span class="line">                        <span class="string">&quot;search&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;open_source&quot;</span></span><br><span class="line">                    ]</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">&quot;_index&quot;</span>: <span class="string">&quot;my_index&quot;</span>,</span><br><span class="line">                <span class="string">&quot;_type&quot;</span>: <span class="string">&quot;posts&quot;</span>,</span><br><span class="line">                <span class="string">&quot;_id&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">                <span class="string">&quot;_score&quot;</span>: 1.0,</span><br><span class="line">                <span class="string">&quot;_source&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;tags&quot;</span>: [</span><br><span class="line">                        <span class="string">&quot;search&quot;</span></span><br><span class="line">                    ]</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>尽管文档5的tags存在null值，但它仍会被命中返回。该文档之所以存在，是因为标签有实际值（ search ）可以被索引，所以 null 对过滤不会产生任何影响。</p><p>因此，只要tags字段存在项(term)的文档都会命中并作为结果返回。</p><h4 id="处理null值">处理Null值</h4><p>exists查询字段为空的或没有这个字段时的代码如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">GET http://localhost:9200/my_index/posts/_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;bool&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;must_not&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;exists&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;field&quot;</span>: <span class="string">&quot;tags&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时的查询结果便只有3和4两个文档：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;took&quot;</span>: 1,</span><br><span class="line">    <span class="string">&quot;timed_out&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&quot;_shards&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;total&quot;</span>: 5,</span><br><span class="line">        <span class="string">&quot;successful&quot;</span>: 5,</span><br><span class="line">        <span class="string">&quot;failed&quot;</span>: 0</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;hits&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;total&quot;</span>: 2,</span><br><span class="line">        <span class="string">&quot;max_score&quot;</span>: 1.0,</span><br><span class="line">        <span class="string">&quot;hits&quot;</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">&quot;_index&quot;</span>: <span class="string">&quot;my_index&quot;</span>,</span><br><span class="line">                <span class="string">&quot;_type&quot;</span>: <span class="string">&quot;posts&quot;</span>,</span><br><span class="line">                <span class="string">&quot;_id&quot;</span>: <span class="string">&quot;4&quot;</span>,</span><br><span class="line">                <span class="string">&quot;_score&quot;</span>: 1.0,</span><br><span class="line">                <span class="string">&quot;_source&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;tags&quot;</span>: null</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">&quot;_index&quot;</span>: <span class="string">&quot;my_index&quot;</span>,</span><br><span class="line">                <span class="string">&quot;_type&quot;</span>: <span class="string">&quot;posts&quot;</span>,</span><br><span class="line">                <span class="string">&quot;_id&quot;</span>: <span class="string">&quot;3&quot;</span>,</span><br><span class="line">                <span class="string">&quot;_score&quot;</span>: 1.0,</span><br><span class="line">                <span class="string">&quot;_source&quot;</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;other_field&quot;</span>: <span class="string">&quot;some data&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="最佳字段dis_max">最佳字段(<code>dis_max</code>)</h3><p>假设有个网站允许用户搜索博客的内容，以下面两篇博客内容文档为例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">PUT http://localhost:9200/my_index/my_type/1</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;title&quot;</span>: <span class="string">&quot;Quick brown rabbits&quot;</span>,</span><br><span class="line">    <span class="string">&quot;body&quot;</span>:  <span class="string">&quot;Brown rabbits are commonly seen.&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">PUT http://localhost:9200/my_index/my_type/2</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;title&quot;</span>: <span class="string">&quot;Keeping pets healthy&quot;</span>,</span><br><span class="line">    <span class="string">&quot;body&quot;</span>:  <span class="string">&quot;My quick brown fox eats rabbits on a regular basis.&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用户输入词组 “Brown fox” 然后点击搜索按钮。事先，并不知道用户的搜索项是会在 title 还是在 body 字段中被找到，但是，用户很有可能是想搜索相关的词组。用肉眼判断，文档 2 的匹配度更高，因为它同时包括要查找的两个词。运行以下 bool 查询查看实际结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">GET http<span class="punctuation">:</span><span class="comment">//localhost:9200/my_index/my_type/_search</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;bool&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;should&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="punctuation">&#123;</span> <span class="attr">&quot;match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Brown fox&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="punctuation">&#123;</span> <span class="attr">&quot;match&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;body&quot;</span><span class="punctuation">:</span>  <span class="string">&quot;Brown fox&quot;</span> <span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>查询结果发现是文档 1 的评分更高：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;took&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;timed_out&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;_shards&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;total&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;successful&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;failed&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hits&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;total&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;max_score&quot;</span><span class="punctuation">:</span> <span class="number">0.56977004</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;hits&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;_index&quot;</span><span class="punctuation">:</span> <span class="string">&quot;my_index&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;_type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;my_type&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;_score&quot;</span><span class="punctuation">:</span> <span class="number">0.56977004</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;_source&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Keeping pets healthy&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="string">&quot;My quick brown fox eats rabbits on a regular basis.&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;_index&quot;</span><span class="punctuation">:</span> <span class="string">&quot;my_index&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;_type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;my_type&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;_score&quot;</span><span class="punctuation">:</span> <span class="number">0.53565365</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;_source&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Quick brown rabbits&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Brown rabbits are commonly seen.&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>bool的评分如下：</p><p>1、它会执行 should 语句中的两个查询。 2、加和两个查询的评分。 3、乘以匹配语句的总数。 4、除以所有语句总数（这里为：2）。</p><p>由于文档 1 的两个字段都包含 brown 这个词，所以两个 match 语句都能成功匹配并且有一个评分。文档 2 的 body 字段同时包含 brown 和 fox 这两个词，但 title 字段没有包含任何词。这样， body 查询结果中的高分，加上 title 查询中的 0 分，然后乘以二分之一，就得到比文档 1 更低的整体评分。</p><p>在这个例子中title 和 body 字段是相互竞争的关系，因此需要找到单个最佳匹配的字段。</p><p>若不是简单将每个字段的评分结果加在一起，而是将最佳匹配字段的评分作为查询的整体评分，则结果中同时包含 brown 和 fox 的单个字段比反复出现相同词语的多个不同字段有更高的相关度。</p><h4 id="dis_max-查询">dis_max 查询</h4><p>不使用 bool 查询时，可以使用<code>dis_max</code>即分离最大化查询，其指的是： 将任何与任一查询匹配的文档作为结果返回，但只将最佳匹配的评分作为查询的评分结果返回 ：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">GET http://localhost:9200/my_index/my_type/_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;dis_max&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;queries&quot;</span>: [</span><br><span class="line">                &#123; <span class="string">&quot;match&quot;</span>: &#123; <span class="string">&quot;title&quot;</span>: <span class="string">&quot;Brown fox&quot;</span> &#125;&#125;,</span><br><span class="line">                &#123; <span class="string">&quot;match&quot;</span>: &#123; <span class="string">&quot;body&quot;</span>:  <span class="string">&quot;Brown fox&quot;</span> &#125;&#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>得到的结果为：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;took&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;timed_out&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;_shards&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;total&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;successful&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;failed&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hits&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;total&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;max_score&quot;</span><span class="punctuation">:</span> <span class="number">0.56977004</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;hits&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;_index&quot;</span><span class="punctuation">:</span> <span class="string">&quot;my_index&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;_type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;my_type&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;_score&quot;</span><span class="punctuation">:</span> <span class="number">0.56977004</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;_source&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Keeping pets healthy&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="string">&quot;My quick brown fox eats rabbits on a regular basis.&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;_index&quot;</span><span class="punctuation">:</span> <span class="string">&quot;my_index&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;_type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;my_type&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;_score&quot;</span><span class="punctuation">:</span> <span class="number">0.2824934</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;_source&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Quick brown rabbits&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Brown rabbits are commonly seen.&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="最佳字段调优"><strong>最佳字段调优</strong></h3><p>当用户搜索 “quick pets” 时会发生什么呢？在前面的例子中，两个文档都包含词 quick ，但是只有文档 2 包含词 pets ，两个文档中都不具有同时包含 两个词 的 相同字段 。而一个简单的 dis_max 查询会采用单个最佳匹配字段，而忽略其他的匹配：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">GET http://localhost:9200/my_index/my_type/_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;dis_max&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;queries&quot;</span>: [</span><br><span class="line">                &#123; <span class="string">&quot;match&quot;</span>: &#123; <span class="string">&quot;title&quot;</span>: <span class="string">&quot;Quick pets&quot;</span> &#125;&#125;,</span><br><span class="line">                &#123; <span class="string">&quot;match&quot;</span>: &#123; <span class="string">&quot;body&quot;</span>:  <span class="string">&quot;Quick pets&quot;</span> &#125;&#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果如下：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;took&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;timed_out&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;_shards&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;total&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;successful&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;failed&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;hits&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;total&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;max_score&quot;</span><span class="punctuation">:</span> <span class="number">0.28488502</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;hits&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;_index&quot;</span><span class="punctuation">:</span> <span class="string">&quot;my_index&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;_type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;my_type&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;_score&quot;</span><span class="punctuation">:</span> <span class="number">0.28488502</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;_source&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Keeping pets healthy&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="string">&quot;My quick brown fox eats rabbits on a regular basis.&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;_index&quot;</span><span class="punctuation">:</span> <span class="string">&quot;my_index&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;_type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;my_type&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;_id&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;_score&quot;</span><span class="punctuation">:</span> <span class="number">0.25316024</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;_source&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Quick brown rabbits&quot;</span><span class="punctuation">,</span></span><br><span class="line">                    <span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Brown rabbits are commonly seen.&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>从结果中可以发现，两个评分是完全相同的。理想中同时匹配 title 和 body 字段的文档比只与一个字段匹配的文档的相关度理应更高，但事实并非如此，这是因为dis_max 查询只会简单地使用单个最佳匹配语句的评分<code>_score</code>作为整体评分。</p><h4 id="tie_breaker参数">tie_breaker参数</h4><p>可以通过指定 <code>tie_breaker</code> 这个参数将其他匹配语句的评分也考虑其中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">GET http://localhost:9200/my_index/my_type/_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;query&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;dis_max&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;queries&quot;</span>: [</span><br><span class="line">                &#123; <span class="string">&quot;match&quot;</span>: &#123; <span class="string">&quot;title&quot;</span>: <span class="string">&quot;Quick pets&quot;</span> &#125;&#125;,</span><br><span class="line">                &#123; <span class="string">&quot;match&quot;</span>: &#123; <span class="string">&quot;body&quot;</span>:  <span class="string">&quot;Quick pets&quot;</span> &#125;&#125;</span><br><span class="line">            ],</span><br><span class="line">            <span class="string">&quot;tie_breaker&quot;</span>: 0.3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果：文档 2 的相关度比文档 1 略高。</p><p>tie_breaker 参数提供了一种 dis_max 和 bool 之间的折中选择，它的评分方式如下：</p><ul><li>获得最佳匹配语句的评分 _score 。</li><li>将其他匹配语句的评分结果与 tie_breaker 相乘。</li><li>对以上评分求和并规范化。</li></ul><p>tie_breaker可以是 0 到 1 之间的浮点数，其中0代表使用dis_max最佳匹配语句的普通逻辑，1表示所有匹配语句同等重要。最佳的精确值需要根据数据与查询调试得出，但是合理值应该与零接近（处于0.1-0.4之间），这样就不会颠覆dis_max最佳匹配性质的根本。</p><h1 id="ik分词器">IK分词器</h1><p>分词是全文搜索引擎必用的技术，由于Elasticsearch原生的分词器不支持中文，因此需要安装一个中文分词器，这里用的分词器是IK分词器。</p><h2 id="安装">安装</h2><p>访问<a href="https://github.com/medcl/elasticsearch-analysis-ik/releases">IK分词器</a>下载与Elasticsearch对应版本的中文分词器，这里下载的版本为5.5.3，具体地址为<a href="https://github.com/medcl/elasticsearch-analysis-ik/releases/tag/v5.5.3">Release v5.5.3 · medcl/elasticsearch-analysis-ik (github.com)</a>。将解压后的文件夹放入Elasticsearch根目录里的<code>E:\elasticsearch-5.5.3\plugins\ik</code>下，重启Elasticsearch后便可使用</p><h2 id="配置">配置</h2><p>IK分词器提供了两个分词算法<code>ik_smart</code>和<code>ik_max_word</code>。其中<code>ik_smart</code>为智能最少切分，<code>ik_max_word</code>为最细粒度划分，</p><ul><li><code>ik_max_word</code>：会将文本做最细粒度划分，如「我是程序员」会被拆分为「我、是、程序员、程序、员」</li><li><code>ik_smart</code>：会将文本做最少切分，如「我是程序员」会被拆分为「我、是、程序员」</li></ul><h2 id="中文分词">中文分词</h2><ul><li><p>不使用ik分词器时的效果：</p><ul><li>通过postman发送GET请求查询分词：</li></ul><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">GET http://localhost:9200/_analyze</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;text&quot;</span>:<span class="string">&quot;我是程序员&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>postman操作如图所示：<img src="/2023/01/13/python%E7%8E%AF%E5%A2%83%E4%B8%ADElasticsearch%E7%9A%84%E4%BD%BF%E7%94%A8/4.png"></p><p>得到的结果如下，可以发现Elasticsearch的默认分词器无法识别中文：我、程序、程序员这样的词汇，而是简单地将每个字拆完分为一个词：</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;tokens&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;token&quot;</span>: <span class="string">&quot;我&quot;</span>,</span><br><span class="line">            <span class="string">&quot;start_offset&quot;</span>: 0,</span><br><span class="line">            <span class="string">&quot;end_offset&quot;</span>: 1,</span><br><span class="line">            <span class="string">&quot;type&quot;</span>: <span class="string">&quot;&lt;IDEOGRAPHIC&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;position&quot;</span>: 0</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;token&quot;</span>: <span class="string">&quot;是&quot;</span>,</span><br><span class="line">            <span class="string">&quot;start_offset&quot;</span>: 1,</span><br><span class="line">            <span class="string">&quot;end_offset&quot;</span>: 2,</span><br><span class="line">            <span class="string">&quot;type&quot;</span>: <span class="string">&quot;&lt;IDEOGRAPHIC&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;position&quot;</span>: 1</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;token&quot;</span>: <span class="string">&quot;程&quot;</span>,</span><br><span class="line">            <span class="string">&quot;start_offset&quot;</span>: 2,</span><br><span class="line">            <span class="string">&quot;end_offset&quot;</span>: 3,</span><br><span class="line">            <span class="string">&quot;type&quot;</span>: <span class="string">&quot;&lt;IDEOGRAPHIC&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;position&quot;</span>: 2</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;token&quot;</span>: <span class="string">&quot;序&quot;</span>,</span><br><span class="line">            <span class="string">&quot;start_offset&quot;</span>: 3,</span><br><span class="line">            <span class="string">&quot;end_offset&quot;</span>: 4,</span><br><span class="line">            <span class="string">&quot;type&quot;</span>: <span class="string">&quot;&lt;IDEOGRAPHIC&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;position&quot;</span>: 3</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;token&quot;</span>: <span class="string">&quot;员&quot;</span>,</span><br><span class="line">            <span class="string">&quot;start_offset&quot;</span>: 4,</span><br><span class="line">            <span class="string">&quot;end_offset&quot;</span>: 5,</span><br><span class="line">            <span class="string">&quot;type&quot;</span>: <span class="string">&quot;&lt;IDEOGRAPHIC&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;position&quot;</span>: 4</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></li><li><p>使用ik分词器后的效果：</p><ul><li><p>通过postman发送GET请求查询分词将文本做最少切分：</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">GET http://localhost:9200/_analyze</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;analyzer&quot;</span>:<span class="string">&quot;ik_smart&quot;</span>,</span><br><span class="line">    <span class="string">&quot;text&quot;</span>:<span class="string">&quot;我是程序员&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>得到的结果如下：</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;tokens&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;token&quot;</span>: <span class="string">&quot;我&quot;</span>,</span><br><span class="line">            <span class="string">&quot;start_offset&quot;</span>: 0,</span><br><span class="line">            <span class="string">&quot;end_offset&quot;</span>: 1,</span><br><span class="line">            <span class="string">&quot;type&quot;</span>: <span class="string">&quot;CN_CHAR&quot;</span>,</span><br><span class="line">            <span class="string">&quot;position&quot;</span>: 0</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;token&quot;</span>: <span class="string">&quot;是&quot;</span>,</span><br><span class="line">            <span class="string">&quot;start_offset&quot;</span>: 1,</span><br><span class="line">            <span class="string">&quot;end_offset&quot;</span>: 2,</span><br><span class="line">            <span class="string">&quot;type&quot;</span>: <span class="string">&quot;CN_CHAR&quot;</span>,</span><br><span class="line">            <span class="string">&quot;position&quot;</span>: 1</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;token&quot;</span>: <span class="string">&quot;程序员&quot;</span>,</span><br><span class="line">            <span class="string">&quot;start_offset&quot;</span>: 2,</span><br><span class="line">            <span class="string">&quot;end_offset&quot;</span>: 5,</span><br><span class="line">            <span class="string">&quot;type&quot;</span>: <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">            <span class="string">&quot;position&quot;</span>: 2</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></li><li><p>通过postman发送GET请求查询分词将文本做最细粒度划分：</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">GET http://localhost:9200/_analyze</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;analyzer&quot;</span>:<span class="string">&quot;ik_max_word&quot;</span>,</span><br><span class="line">    <span class="string">&quot;text&quot;</span>:<span class="string">&quot;我是程序员&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>得到的结果如下：</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;tokens&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;token&quot;</span>: <span class="string">&quot;我&quot;</span>,</span><br><span class="line">            <span class="string">&quot;start_offset&quot;</span>: 0,</span><br><span class="line">            <span class="string">&quot;end_offset&quot;</span>: 1,</span><br><span class="line">            <span class="string">&quot;type&quot;</span>: <span class="string">&quot;CN_CHAR&quot;</span>,</span><br><span class="line">            <span class="string">&quot;position&quot;</span>: 0</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;token&quot;</span>: <span class="string">&quot;是&quot;</span>,</span><br><span class="line">            <span class="string">&quot;start_offset&quot;</span>: 1,</span><br><span class="line">            <span class="string">&quot;end_offset&quot;</span>: 2,</span><br><span class="line">            <span class="string">&quot;type&quot;</span>: <span class="string">&quot;CN_CHAR&quot;</span>,</span><br><span class="line">            <span class="string">&quot;position&quot;</span>: 1</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;token&quot;</span>: <span class="string">&quot;程序员&quot;</span>,</span><br><span class="line">            <span class="string">&quot;start_offset&quot;</span>: 2,</span><br><span class="line">            <span class="string">&quot;end_offset&quot;</span>: 5,</span><br><span class="line">            <span class="string">&quot;type&quot;</span>: <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">            <span class="string">&quot;position&quot;</span>: 2</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;token&quot;</span>: <span class="string">&quot;程序&quot;</span>,</span><br><span class="line">            <span class="string">&quot;start_offset&quot;</span>: 2,</span><br><span class="line">            <span class="string">&quot;end_offset&quot;</span>: 4,</span><br><span class="line">            <span class="string">&quot;type&quot;</span>: <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">            <span class="string">&quot;position&quot;</span>: 3</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;token&quot;</span>: <span class="string">&quot;员&quot;</span>,</span><br><span class="line">            <span class="string">&quot;start_offset&quot;</span>: 4,</span><br><span class="line">            <span class="string">&quot;end_offset&quot;</span>: 5,</span><br><span class="line">            <span class="string">&quot;type&quot;</span>: <span class="string">&quot;CN_CHAR&quot;</span>,</span><br><span class="line">            <span class="string">&quot;position&quot;</span>: 4</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></li></ul></li></ul><h2 id="自定义词库">自定义词库</h2><p>随着各种新词的不断出现，分词器并不认识一些网络热词。若要补充新词到ik的词库中，则需要进入目录<code>E:\elasticsearch-5.5.3\plugins\ik\config</code>中创建<code>custom.dic</code>文件，写入新词。同时打开<code>IKAnalyzer.cfg.xml</code>文件，将添加<code>custom.dic</code>配置后，重启Elasticsearch。</p><p>配置文件参考如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">properties</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;http://java.sun.com/dtd/properties.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">comment</span>&gt;</span>IK Analyzer 扩展配置<span class="tag">&lt;/<span class="name">comment</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--用户可以在这里配置自己的扩展字典 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;ext_dict&quot;</span>&gt;</span>custom.dic<span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line"> <span class="comment">&lt;!--用户可以在这里配置自己的扩展停止词字典--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;ext_stopwords&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--用户可以在这里配置远程扩展字典 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;entry key=&quot;remote_ext_dict&quot;&gt;words_location&lt;/entry&gt; --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--用户可以在这里配置远程扩展停止词字典--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;entry key=&quot;remote_ext_stopwords&quot;&gt;words_location&lt;/entry&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在进行以上配置后，分词器在看到文件中的新词时，便会知道这是一个词汇。</p><ul><li><p>未设置自定义词库时的效果如下：</p><ul><li><p>通过postman发送GET请求查询分词：</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">GET http://localhost:9200/_analyze</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;analyzer&quot;</span>:<span class="string">&quot;ik_smart&quot;</span>,</span><br><span class="line">    <span class="string">&quot;text&quot;</span>:<span class="string">&quot;阿里嘎多美羊羊桑&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>得到的结果如下：</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;tokens&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;token&quot;</span>: <span class="string">&quot;阿里&quot;</span>,</span><br><span class="line">            <span class="string">&quot;start_offset&quot;</span>: 0,</span><br><span class="line">            <span class="string">&quot;end_offset&quot;</span>: 2,</span><br><span class="line">            <span class="string">&quot;type&quot;</span>: <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">            <span class="string">&quot;position&quot;</span>: 0</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;token&quot;</span>: <span class="string">&quot;嘎&quot;</span>,</span><br><span class="line">            <span class="string">&quot;start_offset&quot;</span>: 2,</span><br><span class="line">            <span class="string">&quot;end_offset&quot;</span>: 3,</span><br><span class="line">            <span class="string">&quot;type&quot;</span>: <span class="string">&quot;CN_CHAR&quot;</span>,</span><br><span class="line">            <span class="string">&quot;position&quot;</span>: 1</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;token&quot;</span>: <span class="string">&quot;多美&quot;</span>,</span><br><span class="line">            <span class="string">&quot;start_offset&quot;</span>: 3,</span><br><span class="line">            <span class="string">&quot;end_offset&quot;</span>: 5,</span><br><span class="line">            <span class="string">&quot;type&quot;</span>: <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">            <span class="string">&quot;position&quot;</span>: 2</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;token&quot;</span>: <span class="string">&quot;羊&quot;</span>,</span><br><span class="line">            <span class="string">&quot;start_offset&quot;</span>: 5,</span><br><span class="line">            <span class="string">&quot;end_offset&quot;</span>: 6,</span><br><span class="line">            <span class="string">&quot;type&quot;</span>: <span class="string">&quot;CN_CHAR&quot;</span>,</span><br><span class="line">            <span class="string">&quot;position&quot;</span>: 3</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;token&quot;</span>: <span class="string">&quot;羊&quot;</span>,</span><br><span class="line">            <span class="string">&quot;start_offset&quot;</span>: 6,</span><br><span class="line">            <span class="string">&quot;end_offset&quot;</span>: 7,</span><br><span class="line">            <span class="string">&quot;type&quot;</span>: <span class="string">&quot;CN_CHAR&quot;</span>,</span><br><span class="line">            <span class="string">&quot;position&quot;</span>: 4</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;token&quot;</span>: <span class="string">&quot;桑&quot;</span>,</span><br><span class="line">            <span class="string">&quot;start_offset&quot;</span>: 7,</span><br><span class="line">            <span class="string">&quot;end_offset&quot;</span>: 8,</span><br><span class="line">            <span class="string">&quot;type&quot;</span>: <span class="string">&quot;CN_CHAR&quot;</span>,</span><br><span class="line">            <span class="string">&quot;position&quot;</span>: 5</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></li></ul></li><li><p>设置自定义词库后的效果如下：</p><ul><li><p>通过postman发送GET请求查询分词：</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">GET http://localhost:9200/_analyze</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;analyzer&quot;</span>:<span class="string">&quot;ik_smart&quot;</span>,</span><br><span class="line">    <span class="string">&quot;text&quot;</span>:<span class="string">&quot;阿里嘎多美羊羊桑&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>得到的结果如下：</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;tokens&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;token&quot;</span>: <span class="string">&quot;阿里嘎多&quot;</span>,</span><br><span class="line">            <span class="string">&quot;start_offset&quot;</span>: 0,</span><br><span class="line">            <span class="string">&quot;end_offset&quot;</span>: 4,</span><br><span class="line">            <span class="string">&quot;type&quot;</span>: <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">            <span class="string">&quot;position&quot;</span>: 0</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;token&quot;</span>: <span class="string">&quot;美羊羊&quot;</span>,</span><br><span class="line">            <span class="string">&quot;start_offset&quot;</span>: 4,</span><br><span class="line">            <span class="string">&quot;end_offset&quot;</span>: 7,</span><br><span class="line">            <span class="string">&quot;type&quot;</span>: <span class="string">&quot;CN_WORD&quot;</span>,</span><br><span class="line">            <span class="string">&quot;position&quot;</span>: 1</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;token&quot;</span>: <span class="string">&quot;桑&quot;</span>,</span><br><span class="line">            <span class="string">&quot;start_offset&quot;</span>: 7,</span><br><span class="line">            <span class="string">&quot;end_offset&quot;</span>: 8,</span><br><span class="line">            <span class="string">&quot;type&quot;</span>: <span class="string">&quot;CN_CHAR&quot;</span>,</span><br><span class="line">            <span class="string">&quot;position&quot;</span>: 2</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></li></ul></li></ul>]]></content>
    
    
    <summary type="html">python环境中使用Elasticsearch</summary>
    
    
    
    <category term="Elasticsearch" scheme="http://tangmenjue.top/categories/Elasticsearch/"/>
    
    <category term="python" scheme="http://tangmenjue.top/categories/python/"/>
    
    
    <category term="Elasticsearch" scheme="http://tangmenjue.top/tags/Elasticsearch/"/>
    
    <category term="python" scheme="http://tangmenjue.top/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>YAML与Redis的基本运用</title>
    <link href="http://tangmenjue.top/2022/12/16/YAML%E4%B8%8ERedis%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%BF%90%E7%94%A8/"/>
    <id>http://tangmenjue.top/2022/12/16/YAML%E4%B8%8ERedis%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%BF%90%E7%94%A8/</id>
    <published>2022-12-16T07:08:50.000Z</published>
    <updated>2022-12-16T07:08:50.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="yaml">YAML</h1><p>YAML是一种<strong>数据序列化语言</strong>而不是标记语言，其语法比较简洁直观，特点是使用空格来表达层次结构，其最大的优势是在数据结构的表达上，且能配合大多数编程语言使用，因此YAML更多应用于配置文件的编写，其文件一般以<code>.yml</code>为后缀。</p><p>由于其语法的特殊性，没有编辑器可能容易写错，因而在此推荐一个无广告的yaml在线格式化网站：<a href="http://nodeca.github.io/js-yaml/">JS-YAML</a>，其可以直接将yaml转化为json。</p><h2 id="基础语法">基础语法</h2><ul><li><p>YAML对大小写敏感</p></li><li><p>YAML用<code>#</code>表示注释，且<strong>只支持单行注释</strong></p></li><li><p>用缩进表示层级关系</p><ul><li><strong>缩进只能使用空格</strong>，不能用TAB字符</li><li>缩进的空格数量不做要求，但要求<strong>同一层级的元素左侧必须对齐</strong></li></ul></li><li><p>一个文件中可以包含多个文件的内容</p><ul><li><p>用三个破折号<code>"---"</code>表示一份内容的开始</p></li><li><p>用三个小数点<code>"..."</code>表示一份内容的结束（非强制）</p><p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># 这是第一份内容</span></span><br><span class="line"><span class="string">one:1</span></span><br><span class="line"><span class="comment"># 其他内容</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="comment"># 这是第二份内容</span></span><br><span class="line"><span class="string">two:2</span></span><br><span class="line"><span class="comment"># 其他内容</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 第一份内容转换结果如下：</span></span><br><span class="line"><span class="comment"># &#x27;one:1&#x27;</span></span><br><span class="line"><span class="comment"># 第二份内容转换结果如下：</span></span><br><span class="line"><span class="comment"># &#x27;two:2&#x27;</span></span><br></pre></td></tr></table></figure></p></li></ul></li></ul><h2 id="数据结构与类型">数据结构与类型</h2><h3 id="对象">对象</h3><p>用来表示以键值对（key:value）形式出现的数据。</p><ul><li><p>使用“冒号+空格”来分开键与值，对应JSON中的<code>"key"："value"</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#yaml</span></span><br><span class="line"><span class="string">key:value</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 内容转换结果如下： </span></span><br><span class="line"><span class="comment"># &#x27;key:value&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>支持多层嵌套（<strong>用缩进表示层级关系</strong>）</p><p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">key:</span></span><br><span class="line">  <span class="string">child-key1:value1</span></span><br><span class="line">  <span class="string">child-key2:value2</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># 内容转换结果如下：  </span></span><br><span class="line"><span class="comment"># &#123; key: &#x27;child-key1:value1 child-key2:value2&#x27; &#125;  </span></span><br></pre></td></tr></table></figure></p></li><li><p>支持用<strong>花括号包裹，逗号加空格分隔</strong>的流式风格语法：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">key:&#123;</span> <span class="string">child-key1:value1,</span> <span class="string">child-key2:value2</span> <span class="string">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 内容转换结果如下： </span></span><br><span class="line"><span class="comment"># &#x27;key:&#123; child-key1:value1, child-key2:value2 &#125;&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>用<strong>问号声明一个复杂对象</strong>，且允许使用多个词汇（数组）来组成键：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">?</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">keypart1</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">keypart2</span></span><br><span class="line"><span class="string">:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">value1</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">value2</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># 内容转换结果如下：</span></span><br><span class="line"><span class="comment"># &#123; &#x27;keypart1,keypart2&#x27;: [ &#x27;value1&#x27;, &#x27;value2&#x27; ] &#125;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="数组">数组</h3><ul><li><p>一组以<strong>破折号+空格</strong>的区块形式为开头的数据便组成了一个数组：</p><p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">values:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">value1</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">value2</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">value3</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># 内容转换结果如下：</span></span><br><span class="line"><span class="comment"># &#123; values: [ &#x27;value1&#x27;, &#x27;value2&#x27;, &#x27;value3&#x27; ] &#125;</span></span><br></pre></td></tr></table></figure></p></li><li><p>与此同时也支持<strong>用方括号包裹、逗号加空格分隔</strong>的内联格式来表达</p><p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">values:[value1,</span> <span class="string">value2,</span> <span class="string">value3]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 内容转换结果如下：</span></span><br><span class="line"><span class="comment"># &#x27;values:[value1, value2, value3]&#x27;</span></span><br></pre></td></tr></table></figure></p></li><li><p>支持多为数组（用缩进表示层级关系）</p><p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">values:</span></span><br><span class="line">  <span class="bullet">-</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">value1</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">value2</span></span><br><span class="line">  <span class="bullet">-</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">value3</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">value4</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 内容转换结果如下：</span></span><br><span class="line"><span class="comment"># &#123; values: [ [ &#x27;value1&#x27;, &#x27;value2&#x27; ], [ &#x27;value3&#x27;, &#x27;value4&#x27; ] ] &#125;</span></span><br></pre></td></tr></table></figure></p></li></ul><h3 id="标量">标量</h3><p>表示YAML中最基本的数据类型</p><h3 id="字符串">字符串</h3><ul><li><p>字符串一般不需要引号包裹，但是如果字符串中使用了反斜杠<code>"\"</code>开头的转义字符就必须使用引号包裹</p><p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">strings:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Hello</span> <span class="string">without</span> <span class="string">quote</span> <span class="comment"># 不用引号包裹</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Hello</span></span><br><span class="line">   <span class="string">world</span> <span class="comment">#拆成多行后会自动在中间添加空格</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;Hello with single quotes&#x27;</span> <span class="comment"># 单引号包裹</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;Hello with double quotes&quot;</span> <span class="comment"># 双引号包裹</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;I am fine. \u263A&quot;</span> <span class="comment"># 使用双引号包裹时支持Unicode编码</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;\x0d\x0a is \r\n&quot;</span> <span class="comment"># 使用双引号包裹时还支持Hex编码</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;He said: &quot;Hello!&quot;&#x27;</span> <span class="comment"># 单双引号支持嵌套</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 内容转换结果如下：  </span></span><br><span class="line"><span class="comment"># &#123; strings: </span></span><br><span class="line"><span class="comment">#    [ &#x27;Hello without quote&#x27;,</span></span><br><span class="line"><span class="comment">#      &#x27;Hello world&#x27;,</span></span><br><span class="line"><span class="comment">#      &#x27;Hello with single quotes&#x27;,</span></span><br><span class="line"><span class="comment">#      &#x27;Hello with double quotes&#x27;,</span></span><br><span class="line"><span class="comment">#      &#x27;I am fine. ☺&#x27;,</span></span><br><span class="line"><span class="comment">#      &#x27;\r\n is \r\n&#x27;,</span></span><br><span class="line"><span class="comment">#      &#x27;He said: &quot;Hello!&quot;&#x27; ] &#125;</span></span><br></pre></td></tr></table></figure></p></li><li><p>对于多行的文字，YAML提供了两种特殊的语法支持</p></li><li><p>保留换行</p><ul><li><p>使用竖线符<code>"|"</code>来表示该语法，每行的缩进和行尾空白都会被去掉，而额外的缩进会被保留</p><p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">lines:</span> <span class="string">|</span></span><br><span class="line"><span class="string">  我是第一行</span></span><br><span class="line"><span class="string">  我是第二行</span></span><br><span class="line"><span class="string">    我是第三行</span></span><br><span class="line"><span class="string">      我是第四行</span></span><br><span class="line"><span class="string">  我是第五行  </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="comment"># 内容转换结果如下：  </span></span><br><span class="line"><span class="comment"># &#123; lines: &#x27;我是第一行\n我是第二行\n  我是第三行\n    我是第四行\n我是第五行 \n&#x27; &#125;</span></span><br></pre></td></tr></table></figure></p></li></ul></li><li><p>折叠换行</p><ul><li><p>使用右尖括号<code>"&gt;"</code>来表示该语法，只有空白行才会被识别为换行，原来的换行符都会被转换成空格</p><p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">lines:</span> <span class="string">&gt;</span></span><br><span class="line"><span class="string">  我是第一行</span></span><br><span class="line"><span class="string">  我也是第一行</span></span><br><span class="line"><span class="string">  我还是第一行</span></span><br><span class="line"><span class="string">  我仍然是第一行</span></span><br><span class="line"><span class="string"></span>  </span><br><span class="line">  <span class="string">我是第二行</span></span><br><span class="line">  <span class="string">我也是第二行</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># 内容转换结果如下：  </span></span><br><span class="line"><span class="comment"># &#123; lines: &#x27;我是第一行 我也是第一行 我还是第一行 我仍然是第一行\n我是第二行 我也是第二行\n&#x27; &#125;</span></span><br></pre></td></tr></table></figure></p></li></ul></li></ul><h3 id="布尔值">布尔值</h3><ul><li><p>"true"、"True"、"TRUE"、"yes"、"Yes"和“YES"皆为<strong>真</strong></p></li><li><p>"false"、"False"、"FALSE"、"no"、"No"和“NO"皆为<strong>假</strong></p><p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">boolean:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="literal">true</span> <span class="comment"># True、TRUE</span></span><br><span class="line">  <span class="bullet">-</span> <span class="literal">yes</span> <span class="comment"># Yes、YES</span></span><br><span class="line">  <span class="bullet">-</span> <span class="literal">false</span> <span class="comment"># False、FALSE</span></span><br><span class="line">  <span class="bullet">-</span> <span class="literal">no</span> <span class="comment"># No、NO</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># 内容转换结果如下：</span></span><br><span class="line"><span class="comment"># &#123; boolean: [ true, &#x27;yes&#x27;, false, &#x27;no&#x27; ] &#125;</span></span><br></pre></td></tr></table></figure></p></li></ul><h3 id="整数">整数</h3><ul><li><p>支持二进制表示</p><p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">int:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">666</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">0001_0000</span> <span class="comment">#二进制表示</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># 内容转换结果如下：</span></span><br><span class="line"><span class="comment"># &#123; int: [ 666, 10000 ] &#125;</span></span><br></pre></td></tr></table></figure></p></li></ul><h3 id="浮点数">浮点数</h3><ul><li><p>支持科学计数法</p><p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">float:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">3.14</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">6.8523015e+5</span> <span class="comment"># 使用科学计数法</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># 内容转换结果如下：</span></span><br><span class="line"><span class="comment"># &#123; float: [ 3.14, 685230.15 ] &#125;</span></span><br></pre></td></tr></table></figure></p></li></ul><h3 id="空值null">空值（Null）</h3><ul><li><p>"null"、"Null"和"~"都是空，不指定值默认也是空</p><p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">nulls:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="literal">null</span></span><br><span class="line">  <span class="bullet">-</span> <span class="literal">Null</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">~</span></span><br><span class="line">  <span class="bullet">-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 内容转换结果如下：</span></span><br><span class="line"><span class="comment"># &#123; nulls: [ null, null, null, null ] &#125;</span></span><br></pre></td></tr></table></figure></p></li></ul><h3 id="时间戳">时间戳</h3><ul><li><p>YAML也支持ISO 8601格式的时间数据</p><p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">date1:</span> <span class="number">2020-05-26</span></span><br><span class="line"><span class="attr">date2:</span> <span class="number">2020-05-26T01:00:00+08:00</span></span><br><span class="line"><span class="attr">date3:</span> <span class="number">2020-05-26T02:00:00.10+08:00</span></span><br><span class="line"><span class="attr">date4:</span> <span class="number">2020-05-26 03:00:00.10 +8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 内容转换结果如下：</span></span><br><span class="line"><span class="comment"># &#123; date1: Tue May 26 2020 08:00:00 GMT+0800 (中国标准时间),</span></span><br><span class="line"><span class="comment">#   date2: Tue May 26 2020 01:00:00 GMT+0800 (中国标准时间),</span></span><br><span class="line"><span class="comment">#   date3: Tue May 26 2020 02:00:00 GMT+0800 (中国标准时间),</span></span><br><span class="line"><span class="comment">#   date4: Tue May 26 2020 03:00:00 GMT+0800 (中国标准时间) &#125;</span></span><br></pre></td></tr></table></figure></p></li></ul><h3 id="类型转换">类型转换</h3><ul><li><p>YAML支持使用严格类型标签的双感叹号+目标类型形式，即（"<code>!!</code>"）来强制转换类型</p><p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">a:</span> <span class="type">!!float</span> <span class="string">&#x27;666&#x27;</span></span><br><span class="line"><span class="attr">b:</span> <span class="string">&#x27;666&#x27;</span></span><br><span class="line"><span class="attr">c:</span> <span class="type">!!str</span> <span class="number">666</span></span><br><span class="line"><span class="attr">d:</span> <span class="type">!!str</span> <span class="number">666.66</span></span><br><span class="line"><span class="attr">e:</span> <span class="type">!!str</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">f:</span> <span class="type">!!str</span> <span class="literal">yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 内容转换结果如下：</span></span><br><span class="line"><span class="comment"># &#123; a: 666, b: &#x27;666&#x27;, c: &#x27;666&#x27;, d: &#x27;666.66&#x27;, e: &#x27;true&#x27;, f: &#x27;yes&#x27; &#125;</span></span><br></pre></td></tr></table></figure></p></li></ul><h3 id="其他高级类型">其他高级类型</h3><p>YAML也可以使用更高级的类型，但不一定兼容所有解析器，包括集合、有序映射、十六进制数据和二进制数据等</p><h3 id="数据重用与合并">数据重用与合并</h3><ul><li><p>为了避免过多重复的定义，YAML提供了由锚点标签<code>"&amp;"</code>和引用标签<code>"*"</code>组成的语法，凭借此可以快速引用一些相同的数据</p><p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">a:</span> <span class="string">&amp;anchor</span> <span class="comment">#设置锚点</span></span><br><span class="line">  <span class="attr">one:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">two:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">three:</span> <span class="number">3</span></span><br><span class="line"><span class="attr">b:</span> <span class="string">*anchor</span> <span class="comment">#引用锚点 </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 内容转换结果如下：</span></span><br><span class="line"><span class="comment"># &#123; a: &#123; one: 1, two: 2, three: 3 &#125;,</span></span><br><span class="line"><span class="comment">#   b: &#123; one: 1, two: 2, three: 3 &#125; &#125;</span></span><br></pre></td></tr></table></figure></p></li><li><p>配合合并标签<code>"&lt;&lt;"</code>使用可以与任意数据进行合并，以此实现类似于C++中继承的功能</p><p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">human:</span> <span class="string">&amp;base</span> <span class="comment"># 添加名为base的锚点</span></span><br><span class="line">    <span class="attr">body:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">hair:</span> <span class="number">999</span></span><br><span class="line"><span class="attr">singer:</span></span><br><span class="line">    <span class="string">&lt;&lt;:</span> <span class="string">*base</span> <span class="comment"># 引用base锚点，实例化时会自动展开</span></span><br><span class="line">    <span class="attr">skill:</span> <span class="string">sing</span> <span class="comment"># 添加额外的属性</span></span><br><span class="line"><span class="attr">programer:</span></span><br><span class="line">    <span class="string">&lt;&lt;:</span> <span class="string">*base</span> <span class="comment"># 引用base锚点，实例化时会自动展开</span></span><br><span class="line">    <span class="attr">hair:</span> <span class="number">6</span> <span class="comment"># 复写base中的属性</span></span><br><span class="line">    <span class="attr">skill:</span> <span class="string">code</span> <span class="comment"># 添加额外的属性  </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 内容转换结果如下：</span></span><br><span class="line"><span class="comment"># &#123; human: &#123; body: 1, hair: 999 &#125;,</span></span><br><span class="line"><span class="comment">#   singer: &#123; body: 1, hair: 999, skill: &#x27;sing&#x27; &#125;,</span></span><br><span class="line"><span class="comment">#   programer: &#123; body: 1, hair: 6, skill: &#x27;code&#x27; &#125; &#125;</span></span><br></pre></td></tr></table></figure></p></li></ul><h1 id="redis">Redis</h1><p>Redis是一个用C语言编写的、开源的、基于内存运行并支持持久化的、高性能的NoSQL数据库，具有支持数据持久化、支持多种数据结构、支持数据备份等特点，通常被称为数据结构服务器。</p><p>NoSQL数据库泛指非关系型数据库，其去掉了关系数据库的关系型特性，是为了解决大规模数据集合多重数据种类带来的问题而生。</p><h2 id="windows安装">Windows安装</h2><p>Redis下载地址：<a href="https://github.com/microsoftarchive/redis/releases">点击前往</a></p><p>打开上述的下载地址后，可以在网页下方的Assets处看到目前支持的版本，找到最新的版本下载安装即可。</p><p>注：msi格式的为Windows的安装文件，双击即可进行安装，而zip包和tar.gz包则需要先解压再安装。</p><p>安装好后，需要<strong>着重关注</strong>以下几个文件：</p><table><thead><tr class="header"><th>文件名</th><th>作用</th></tr></thead><tbody><tr class="odd"><td>redis.windows.conf</td><td>Redis 运行的配置文件。</td></tr><tr class="even"><td>redis-benchmark.exe</td><td>Redis 性能测试的工具。</td></tr><tr class="odd"><td>redis-check-aof.exe</td><td>Redis 的 aof 文件修复的工具。</td></tr><tr class="even"><td>redis-check-dump.exe</td><td>Redis 的 rdb 文件修复的工具。</td></tr><tr class="odd"><td>redis-cli.exe</td><td>Redis 的客户端。</td></tr><tr class="even"><td>redis-server.exe</td><td>Redis 的服务端。</td></tr></tbody></table><ul><li></li></ul><h2 id="redis数据类型">Redis数据类型</h2><p>Redis支持五种数据类型：string（字符串）、hash（哈希）、list（列表）、set（集合）及zset（有序集合）。</p><h3 id="string类型">String类型</h3><p>string是Redis最基本的类型，一个key对应一个value（即键值对）。Redis的string可以包含任何数据，如jpg图片或序列化图像等，其一个键最大可以存储512MB的数据。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#设置website值</span></span><br><span class="line">127.0.0.1:6379&gt; <span class="built_in">set</span> website tangmenjue.top</span><br><span class="line">OK</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取website值</span></span><br><span class="line">127.0.0.1:6379&gt; get website</span><br><span class="line"><span class="string">&quot;tangmenjue.top&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#删除website值</span></span><br><span class="line">127.0.0.1:6379&gt; del website</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br></pre></td></tr></table></figure><h3 id="hash类型">Hash类型</h3><p>hash是一个键值对集合，其是一个string类型的field和value的映射表，适合用于存储对象，每个hash可以存储 4294967295个键值对。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#设置一个对象webinfo，它的键webname对应的值为tangmenjue，键weburl对应的值为tangmenjue.top，webtype对应的类型为it</span></span><br><span class="line">127.0.0.1:6379&gt; hmset webinfo webname tangmenjue  weburl tangmenjue.top  webtype it</span><br><span class="line">OK</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取webinfo对象中，weburl、webname、webtype的键值</span></span><br><span class="line">127.0.0.1:6379&gt; hmget webinfo weburl webname webtype</span><br><span class="line">1) <span class="string">&quot;tangmenjue.top&quot;</span></span><br><span class="line">2) <span class="string">&quot;tangmenjue&quot;</span></span><br><span class="line">3) <span class="string">&quot;it&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#删除对象webinfo</span></span><br><span class="line">127.0.0.1:6379&gt; del webinfo</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br></pre></td></tr></table></figure><h3 id="list类型">List类型</h3><p>Redis的list类型是简单的字符串列表，按照插入顺序排序，可以添加一个元素到列表的左边或右边。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#向列表tangmenjue.top里添加Redis、Vue 和Pgsql3个元素</span></span><br><span class="line">127.0.0.1:6379&gt; lpush tangmenjue.top Redis Vue Pgsql</span><br><span class="line">(<span class="built_in">integer</span>) 3</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取列表tangmenjue.top的下标从0到3的数据</span></span><br><span class="line">127.0.0.1:6379&gt; lrange tangmenjue.top 0 3</span><br><span class="line">1) <span class="string">&quot;Pgsql&quot;</span></span><br><span class="line">2) <span class="string">&quot;Vue&quot;</span></span><br><span class="line">3) <span class="string">&quot;Redis&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#删除值</span></span><br><span class="line">127.0.0.1:6379&gt; del tangmenjue.top</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br></pre></td></tr></table></figure><h3 id="set类型">Set类型</h3><p>Redis的Set是string类型的无序集合，集合是通过哈希表来实现的，因此添加、删除、查找的复杂度都是O(1)。每个集合中最大可存储4294967295个成员。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#向集合tangmenjue.top添加Redis、Vue 和Pgsql3个元素</span></span><br><span class="line">127.0.0.1:6379&gt; sadd tangmenjue.top Redis Vue Pgsql</span><br><span class="line">(<span class="built_in">integer</span>) 3</span><br><span class="line"></span><br><span class="line"><span class="comment">#继续向集合tangmenjue.top添加元素Sqlserver，此时返回1表示成功</span></span><br><span class="line">127.0.0.1:6379&gt; sadd tangmenjue.top Sqlserver</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line"></span><br><span class="line"><span class="comment">#继续向集合tangmenjue.top添加元素Redis，此时返回0表示失败。因为集合中已有Redis，不可重复插入</span></span><br><span class="line">127.0.0.1:6379&gt; sadd tangmenjue.top Redis</span><br><span class="line">(<span class="built_in">integer</span>) 0</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取集合tangmenjue.top的所有元素</span></span><br><span class="line">127.0.0.1:6379&gt; smembers tangmenjue.top</span><br><span class="line">1) <span class="string">&quot;Pgsql&quot;</span></span><br><span class="line">2) <span class="string">&quot;Sqlserver&quot;</span></span><br><span class="line">3) <span class="string">&quot;Vue&quot;</span></span><br><span class="line">4) <span class="string">&quot;Redis&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#删除集合tangmenjue.top</span></span><br><span class="line">127.0.0.1:6379&gt; del tangmenjue.top</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br></pre></td></tr></table></figure><h3 id="zset类型">ZSet类型</h3><p>zset和set一样也是string类型元素的集合且不允许成员重复。</p><p>与set不同的是，每个元素都会关联一个double类型的分数，通过这个分数来为集合中的成员按从大到小进行排序。zset成员是唯一的，但分数（score）是可以重复的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#向有序集合tangmenjue.top添加分数为0的Redis值</span></span><br><span class="line">127.0.0.1:6379&gt; zadd tangmenjue.top 0 Redis</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line"></span><br><span class="line"><span class="comment">#向有序集合tangmenjue.top添加分数为1的Vue值</span></span><br><span class="line">127.0.0.1:6379&gt; zadd tangmenjue.top 1 Vue</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br><span class="line"></span><br><span class="line"><span class="comment">#向有序集合tangmenjue.top添加分数为2的Pgsql值和分数为3的Sqlserver值</span></span><br><span class="line">127.0.0.1:6379&gt; zadd tangmenjue.top 2 Pgsql 3 Sqlserver</span><br><span class="line">(<span class="built_in">integer</span>) 2</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取有序集合tangmenjue.top的所有数据，并打印出分数</span></span><br><span class="line">127.0.0.1:6379&gt; zrange tangmenjue.top 0 -1 withscores</span><br><span class="line">1) <span class="string">&quot;Redis&quot;</span></span><br><span class="line">2) <span class="string">&quot;0&quot;</span></span><br><span class="line">3) <span class="string">&quot;Vue&quot;</span></span><br><span class="line">4) <span class="string">&quot;1&quot;</span></span><br><span class="line">5) <span class="string">&quot;Pgsql&quot;</span></span><br><span class="line">6) <span class="string">&quot;2&quot;</span></span><br><span class="line">7) <span class="string">&quot;Sqlserver&quot;</span></span><br><span class="line">8) <span class="string">&quot;3&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#删除有序集合tangmenjue.top</span></span><br><span class="line">127.0.0.1:6379&gt; del tangmenjue.top</span><br><span class="line">(<span class="built_in">integer</span>) 1</span><br></pre></td></tr></table></figure><h2 id="连接本地redis">连接本地Redis</h2><p>进入到Redis所在目录，在地址栏输入cmd，此时会在当前目录打开命令行窗口，如下图所示：</p><p><img src="/2022/12/16/YAML%E4%B8%8ERedis%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%BF%90%E7%94%A8/1.png"></p><ul><li><p>在命令行中输入以下命令后回车，启动redis server客户端:</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">E:\Redis&gt;redis-server.exe</span><br><span class="line">[4524] 16 Dec 11:48:29.399 <span class="comment"># oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo</span></span><br><span class="line">[4524] 16 Dec 11:48:29.399 <span class="comment"># Redis version=5.0.14.1, bits=64, commit=ec77f72d, modified=0, pid=4524, just started</span></span><br><span class="line">[4524] 16 Dec 11:48:29.399 <span class="comment"># Configuration loaded</span></span><br><span class="line">[4524] 16 Dec 11:48:29.401 <span class="comment"># Could not create server TCP listening socket 127.0.0.1:6379: bind: 操作成功完成。</span></span><br></pre></td></tr></table></figure></p><p>此时可以看到redis server的运行信息，说明redis server运行成功。</p></li><li><p>接下来不要关闭这个Redis server，重新在地址栏输入cmd，打开一个新的命令行。在命令行中输入以下命令后回车，启动redis client端：</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PS E:\Redis&gt; redis-cli.exe</span><br><span class="line">127.0.0.1:6379&gt;</span><br></pre></td></tr></table></figure></p><p>看到127.0.0.1:6379则表明此时已经成功连接上了本地Redis服务器。</p></li><li><p>在redis client端的cmd上输入以下命令后回车,以此来测试redis-cli客户端是否能连接上redis服务器：</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; ping</span><br><span class="line">PONG</span><br><span class="line"></span><br><span class="line"><span class="comment">#当看到输出PONG时则表示连接成功</span></span><br></pre></td></tr></table></figure></p></li></ul><p><strong>注意：</strong>若是启动redis server客户端时出现以下错误：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">E:\Redis&gt;redis-server.exe</span><br><span class="line">[7976] 16 Dec 11:41:31.720 <span class="comment"># oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo</span></span><br><span class="line">[7976] 16 Dec 11:41:31.720 <span class="comment"># Redis version=5.0.14.1, bits=64, commit=ec77f72d, modified=0, pid=7976, just started</span></span><br><span class="line">[7976] 16 Dec 11:41:31.721 <span class="comment"># Warning: no config file specified, using the default config. In order to specify a config file use redis-server.exe /path/to/redis.conf</span></span><br><span class="line">[7976] 16 Dec 11:41:31.724 <span class="comment"># Could not create server TCP listening socket *:6379: bind: 在一个非套接字上尝试了一个操作。</span></span><br></pre></td></tr></table></figure><p>出现这一错误则则可以将启动命令改为如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">E:\Redis&gt;redis-server.exe redis.windows.conf</span><br></pre></td></tr></table></figure><h2 id="连接远程redis">连接远程Redis</h2><p>在Redis根目录下打开cmd，使用redis-cli客户端，连接远程redis服务的语法为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -h host -p port -a password</span><br><span class="line"><span class="comment">#其中：host为服务器所在的ip地址</span></span><br><span class="line"><span class="comment">#port为Redis服务的监听端口</span></span><br><span class="line"><span class="comment">#password为Redis服务的密码，若没有开启认证则不需要这一参数</span></span><br></pre></td></tr></table></figure><h2 id="redis配置">Redis配置</h2><p>使用redis-cli客户端连接上redis服务器后，可以使用config命令来查看或设置redis的配置，也可以直接修改安装目录下的redis.windows.conf文件来修改配置。</p><p>config相关命令如下：</p><ul><li><code>config get key</code>：获取配置项为key的配置，配置项不存在时返回<code>(empty list or set)</code></li><li><code>config get *</code>：获取所有配置</li><li><code>config set key "value"</code>：设置配置项key的值为value</li></ul>]]></content>
    
    
    <summary type="html">YAML,Redis</summary>
    
    
    
    <category term="学习笔记" scheme="http://tangmenjue.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="YAML" scheme="http://tangmenjue.top/categories/YAML/"/>
    
    <category term="Redis" scheme="http://tangmenjue.top/categories/Redis/"/>
    
    
    <category term="YAML" scheme="http://tangmenjue.top/tags/YAML/"/>
    
    <category term="Redis" scheme="http://tangmenjue.top/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>Docker应用部署实战</title>
    <link href="http://tangmenjue.top/2022/12/15/Docker%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98/"/>
    <id>http://tangmenjue.top/2022/12/15/Docker%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98/</id>
    <published>2022-12-14T16:16:08.000Z</published>
    <updated>2022-12-14T16:16:08.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="centos部署应用步骤">Centos部署应用步骤</h1><h2 id="配置代码运行环境">配置代码运行环境</h2><h3 id="nginx下载及配置">nginx下载及配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#centos下载apache</span></span><br><span class="line">[root@localhost admin]<span class="comment"># yum install httpd </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#centos下载nginx</span></span><br><span class="line">[root@localhost admin]<span class="comment"># yum install epel-release</span></span><br><span class="line">[root@localhost httpd]<span class="comment"># yum install -y update</span></span><br><span class="line">[root@localhost httpd]<span class="comment"># yum install -y nginx</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#打开防火墙端口80和443</span></span><br><span class="line">[root@localhost httpd]<span class="comment"># firewall-cmd --permanent --zone=public --add-service=http</span></span><br><span class="line">[root@localhost httpd]<span class="comment"># firewall-cmd --permanent --zone=public --add-service=https</span></span><br><span class="line">[root@localhost httpd]<span class="comment"># firewall-cmd --reload</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#启动nignx服务</span></span><br><span class="line">[root@localhost httpd]<span class="comment"># systemctl start nginx</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看nignx进程的状态</span></span><br><span class="line">[root@localhost admin]<span class="comment"># systemctl status nginx</span></span><br><span class="line">● nginx.service - The nginx HTTP and reverse proxy server</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/nginx.service; disabled; vendor preset: disabled)</span><br><span class="line">   Active: active (running) since 日 2022-12-11 18:32:09 PST; 1min 10s ago</span><br><span class="line">  Process: 5678 ExecStart=/usr/sbin/nginx (code=exited, status=0/SUCCESS)</span><br><span class="line">  Process: 5675 ExecStartPre=/usr/sbin/nginx -t (code=exited, status=0/SUCCESS)</span><br><span class="line">  Process: 5670 ExecStartPre=/usr/bin/rm -f /run/nginx.pid (code=exited, status=0/SUCCESS)</span><br><span class="line"> Main PID: 5680 (nginx)</span><br><span class="line">    Tasks: 2</span><br><span class="line">   CGroup: /system.slice/nginx.service</span><br><span class="line">           ├─5680 nginx: master process /usr/sbin/nginx</span><br><span class="line">           └─5683 nginx: worker process</span><br><span class="line"></span><br><span class="line">12月 11 18:32:09 localhost.localdomain systemd[1]: Starting The nginx HTTP a...</span><br><span class="line">12月 11 18:32:09 localhost.localdomain nginx[5675]: nginx: the configuration...</span><br><span class="line">12月 11 18:32:09 localhost.localdomain nginx[5675]: nginx: configuration fil...</span><br><span class="line">12月 11 18:32:09 localhost.localdomain systemd[1]: Started The nginx HTTP an...</span><br><span class="line">Hint: Some lines were ellipsized, use -l to show <span class="keyword">in</span> full.</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置nignx服务开机自启动</span></span><br><span class="line">[root@localhost httpd]<span class="comment"># systemctl enable nginx</span></span><br><span class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/nginx.service to /usr/lib/systemd/system/nginx.service.</span><br><span class="line"></span><br><span class="line"><span class="comment">#进入conf.d目录新建文件并填入以下内容</span></span><br><span class="line">[root@localhost httpd]<span class="comment"># cd /etc/nginx/conf.d</span></span><br><span class="line">[root@localhost conf.d]<span class="comment"># ls</span></span><br><span class="line">[root@localhost conf.d]<span class="comment"># touch flask_test.conf</span></span><br><span class="line">[root@localhost conf.d]<span class="comment"># vi flask_test.conf</span></span><br><span class="line">server &#123;</span><br><span class="line">    listen       80;</span><br><span class="line">    server_name  localhost;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># api代理转发</span></span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_redirect  off;</span><br><span class="line">        proxy_set_header    Host <span class="variable">$host</span>;</span><br><span class="line">        proxy_set_header    X-Real-IP            <span class="variable">$remote_addr</span>;</span><br><span class="line">        proxy_set_header    X-Forwarded-For      <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        proxy_set_header    X-Forwarded-Proto    <span class="variable">$scheme</span>;</span><br><span class="line">        proxy_pass http://127.0.0.1:8000;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#重启nginx</span></span><br><span class="line">[root@localhost conf.d]<span class="comment"># systemctl reload nginx</span></span><br></pre></td></tr></table></figure><h3 id="pgsql下载及配置">pgsql下载及配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#centos下载pgsql</span></span><br><span class="line">[root@localhost httpd]<span class="comment"># yum install https://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm</span></span><br><span class="line">[root@localhost httpd]<span class="comment"># yum install postgresql12-server</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#启动pgsql服务</span></span><br><span class="line">[root@localhost httpd]<span class="comment"># postgresql-12-setup initdb</span></span><br><span class="line">Initializing database ... OK</span><br><span class="line">[root@localhost httpd]<span class="comment"># systemctl start postgresql-12</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#设置pgsql服务开机自启动</span></span><br><span class="line">[root@localhost httpd]<span class="comment"># systemctl enable postgresql-12</span></span><br><span class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/postgresql-12.service to /usr/lib/systemd/system/postgresql-12.service.</span><br><span class="line"></span><br><span class="line"><span class="comment">#配置pgsql</span></span><br><span class="line">[root@localhost bin]<span class="comment"># su - postgres</span></span><br><span class="line">-bash-4.2$ psql</span><br><span class="line">psql (12.13)</span><br><span class="line">Type <span class="string">&quot;help&quot;</span> <span class="keyword">for</span> <span class="built_in">help</span>.</span><br><span class="line">postgres=<span class="comment"># alter user postgres with password &#x27;123456&#x27;</span></span><br><span class="line">postgres-<span class="comment"># \q</span></span><br><span class="line">-bash-4.2$ <span class="built_in">exit</span></span><br><span class="line"><span class="built_in">logout</span></span><br><span class="line">[root@localhost bin]<span class="comment"># find / -name postgresql.conf</span></span><br><span class="line">find: ‘/run/user/1000/gvfs’: 权限不够</span><br><span class="line">/var/lib/pgsql/12/data/postgresql.conf</span><br><span class="line"></span><br><span class="line"><span class="comment">#配置远程访问</span></span><br><span class="line">[root@localhost bin]<span class="comment"># vi /var/lib/pgsql/12/data/postgresql.conf</span></span><br><span class="line">listen_addressses=<span class="string">&quot;*&quot;</span></span><br><span class="line">port = 5432 </span><br></pre></td></tr></table></figure><h3 id="node.js安装">node.js安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装node.js</span></span><br><span class="line">[root@localhost admin]<span class="comment"># wget https://nodejs.org/dist/v16.16.0/node-v16.16.0-linux-x64.tar.xz</span></span><br><span class="line">[root@localhost admin]<span class="comment"># tar -xvf node-v16.16.0-linux-x64.tar.xz</span></span><br><span class="line">[root@localhost admin]<span class="comment"># mv node-v16.16.0-linux-x64  node.js</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#查找node.js路径</span></span><br><span class="line">[root@localhost admin]<span class="comment"># find / -name node.js</span></span><br><span class="line">find: ‘/run/user/1000/gvfs’: 权限不够</span><br><span class="line">/home/admin/node.js</span><br><span class="line">/home/admin/node.js/lib/node_modules/npm/node_modules/debug/src/node.js</span><br><span class="line">/home/admin/node.js/lib/node_modules/npm/node_modules/@npmcli/arborist/lib/node.js</span><br><span class="line">/home/admin/node.js/lib/node_modules/npm/node_modules/@npmcli/fs/lib/common/node.js</span><br><span class="line">/home/admin/node.js/lib/node_modules/npm/node_modules/util-deprecate/node.js</span><br><span class="line"><span class="comment">#检查node版本</span></span><br><span class="line">[root@localhost admin]<span class="comment"># cd /home/admin/node.js/bin</span></span><br><span class="line">[root@localhost bin]<span class="comment"># ./node -v</span></span><br><span class="line">v16.16.0</span><br><span class="line"></span><br><span class="line"><span class="comment">#添加node.js的环境变量：</span></span><br><span class="line">[root@localhost bin]<span class="comment"># vi /etc/profile</span></span><br><span class="line"><span class="comment">#在文件末尾加上两句代码如下：</span></span><br><span class="line"><span class="comment">#NODE_HOME为实际中node的安装位置目录</span></span><br><span class="line"><span class="built_in">export</span> NODE_HOME=/home/admin/node.js</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$NODE_HOME</span>/bin:<span class="variable">$PATH</span></span><br><span class="line"><span class="comment">#按ESC+:+wq退出vim模式，输入以下命令使配置生效</span></span><br><span class="line">[root@localhost bin]<span class="comment"># source /etc/profile</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#配置软连接将环境配置放到开机自启动的脚本中</span></span><br><span class="line">[root@localhost bin]<span class="comment"># ln -s /usr/local/node.js/bin/node /usr/local/bin/node</span></span><br><span class="line">[root@localhost bin]<span class="comment"># ln -s /usr/local/node.js/bin/npm /usr/local/bin/npm</span></span><br><span class="line"><span class="comment">#查看虚拟机ip</span></span><br><span class="line">[root@localhost admin]<span class="comment"># ifconfig</span></span><br><span class="line">ens33: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.60.129  netmask 255.255.255.0  broadcast 192.168.60.255</span><br><span class="line">        inet6 fe80::b659:fb9c:695f:5eff  prefixlen 64  scopeid 0x20&lt;<span class="built_in">link</span>&gt;</span><br><span class="line">        ether 00:0c:29:b0:6f:2a  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 491682  bytes 725762513 (692.1 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 49960  bytes 3119454 (2.9 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;</span><br><span class="line">        loop  txqueuelen 1000  (Local Loopback)</span><br><span class="line">        RX packets 1411  bytes 485777 (474.3 KiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 1411  bytes 485777 (474.3 KiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">virbr0: flags=4099&lt;UP,BROADCAST,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.122.1  netmask 255.255.255.0  broadcast 192.168.122.255</span><br><span class="line">        ether 52:54:00:42:aa:9d  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="部署应用">部署应用</h2><h3 id="应用代码传输">应用代码传输</h3><p>在window系统中下载xftp并安装，官网地址如下：<a href="https://www.xshell.com/zh/free-for-home-school/">家庭/学校免费 - NetSarang Website (xshell.com)</a>，安装好后打开，点击新建，在主机一栏填上虚拟机的ip地址：192.168.60.129，用户名填root，密码填虚拟机的密码，其他默认，点击连接如下所示：</p><p><img src="/2022/12/15/Docker%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98/1.png"></p><p>左侧窗口为本地目录，右侧窗口为虚拟机目录。选中左侧文件后右键，点击传输便可将文件从本地的windows系统传输到Linux虚拟机中。</p><p><img src="/2022/12/15/Docker%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98/2.png"></p><h3 id="应用前端部署">应用前端部署</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#切换到前端代码目录</span></span><br><span class="line">[root@localhost bin]<span class="comment"># cd /root/WeChat_exercise/front-end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#下载vue及vue cli、加载项目所需的配置文件</span></span><br><span class="line">[root@localhost front-end]<span class="comment"># npm install vue</span></span><br><span class="line">[root@localhost front-end]<span class="comment"># npm install --global @vue/cli</span></span><br><span class="line">[root@localhost front-end]<span class="comment"># npm install yarn</span></span><br><span class="line">[root@localhost front-end]<span class="comment"># npm install</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#运行前端项目</span></span><br><span class="line">[root@localhost front-end]<span class="comment"># npm run serve</span></span><br><span class="line"> DONE  Compiled successfully <span class="keyword">in</span> 51145ms                                                                               01:47:08</span><br><span class="line">  App running at:</span><br><span class="line">  - Local:   http://localhost:8080 </span><br><span class="line">  - Network: http://192.168.60.129:8080</span><br><span class="line"></span><br><span class="line">  Note that the development build is not optimized.</span><br><span class="line">  To create a production build, run yarn build.</span><br></pre></td></tr></table></figure><h3 id="后端环境部署">后端环境部署</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#编译安装python3</span></span><br><span class="line">[root@localhost admin]<span class="comment"># wget https://www.Python.org/ftp/python/3.6.1/Python-3.6.1.tar.xz</span></span><br><span class="line">[root@localhost admin]<span class="comment"># tar xJf  Python-3.6.1.tar.xz</span></span><br><span class="line">[root@localhost admin]<span class="comment"># cd  Python-3.6.1</span></span><br><span class="line">[root@localhost Python-3.6.1]<span class="comment"># ./configure  --prefix=/usr/local/python3 &amp;&amp; make &amp;&amp; make install</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#创建软链接</span></span><br><span class="line">[root@localhost Python-3.6.1]<span class="comment"># ln -s /usr/local/python3/bin/python3 /usr/bin/python3</span></span><br><span class="line">[root@localhost Python-3.6.1]<span class="comment"># ln -s /usr/local/python3/bin/pip3 /usr/bin/pip3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#更换pip源</span></span><br><span class="line">[root@localhost ~]<span class="comment"># mkdir ~/.pip</span></span><br><span class="line">[root@localhost ~]<span class="comment">#  vi ~/.pip/pip.conf</span></span><br><span class="line"></span><br><span class="line">[global]</span><br><span class="line">index-url = http://mirrors.aliyun.com/pypi/simple/</span><br><span class="line">[install]</span><br><span class="line">trusted-host=mirrors.aliyun.com</span><br><span class="line"></span><br><span class="line"><span class="comment">#切换到后端项目目录，安装virtualenv</span></span><br><span class="line">[root@localhost ~]<span class="comment"># cd /root/WeChat_exercise/back-end</span></span><br><span class="line">ot@localhost back-end]<span class="comment"># yum install python-virtualenv</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#创建虚拟环境venv并激活</span></span><br><span class="line">[root@localhost back-end]<span class="comment"># python3 -m venv venv</span></span><br><span class="line">[root@localhost back-end]<span class="comment"># . venv/bin/activate</span></span><br><span class="line">[root@localhost back-end]<span class="comment"># yum install postgresql-devel</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#安装Flask和项目所需环境</span></span><br><span class="line">(venv) [root@localhost back-end]<span class="comment"># pip3 install --upgrade pip setuptools wheel</span></span><br><span class="line">(venv) [root@localhost back-end]<span class="comment"># pip install Flask</span></span><br><span class="line">(venv) [root@localhost back-end]<span class="comment"># pip install -r requirements.txt</span></span><br><span class="line">(venv) [root@localhost back-end]<span class="comment"># pip install psycopg2</span></span><br><span class="line"><span class="comment">#运行Flask项目</span></span><br><span class="line">(venv) [root@localhost back-end]<span class="comment">#flask run</span></span><br></pre></td></tr></table></figure><h1 id="docker容器部署应用">docker容器部署应用</h1><p>这一部分先手动启动Pgsql、Python、Nginx等容器，然后再使用Docker Compose来编排容器。</p><h2 id="docker安装">Docker安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装并启动docker</span></span><br><span class="line">[root@localhost admin]<span class="comment"># curl -sSL https://get.daocloud.io/docker | sh</span></span><br><span class="line">[root@localhost admin]<span class="comment"># systemctl start docker</span></span><br><span class="line">[root@localhost admin]<span class="comment"># systemctl enable docker</span></span><br><span class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/docker.service to /usr/lib/systemd/system/docker.service.</span><br></pre></td></tr></table></figure><h2 id="构建pgsql容器">构建PgSQL容器</h2><ul><li><p>安装镜像</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost admin]<span class="comment"># docker pull postgres</span></span><br></pre></td></tr></table></figure></p></li><li><p>创建配置文件夹，可以看到postgres镜像创建的容器是将数据保存在<code>/var/lib/postgresql/data</code>位置下的：</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost admin]<span class="comment"># cd /home</span></span><br><span class="line">[root@localhost home]<span class="comment"># mkdir -p /home/docker</span></span><br><span class="line">[root@localhost home]<span class="comment"># mkdir -p /home/docker/postgresql</span></span><br><span class="line">[root@localhost home]<span class="comment"># mkdir -p /home/docker/postgresql/data</span></span><br><span class="line">[root@localhost home]<span class="comment"># docker image inspect postgres</span></span><br><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&quot;Id&quot;</span>: <span class="string">&quot;sha256:a26eb6069868e4bfd0095788e541bb40711861bdfb2a8252103dea85cc0758aa&quot;</span>,</span><br><span class="line">        <span class="string">&quot;RepoTags&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;postgres:latest&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="string">&quot;RepoDigests&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;postgres@sha256:f4cd32e7a418d9c9ba043e7d561243388202b654c740bcc85ca40b41d9fb4f1e&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="string">&quot;Parent&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Comment&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Created&quot;</span>: <span class="string">&quot;2022-12-22T23:19:59.856808957Z&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Container&quot;</span>: <span class="string">&quot;938c729969fbf6312f6563590395ed0bb4cbc982b039598c38ffa539c86a5df5&quot;</span>,</span><br><span class="line">        <span class="string">&quot;ContainerConfig&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;Hostname&quot;</span>: <span class="string">&quot;938c729969fb&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Domainname&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;User&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;AttachStdin&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">&quot;AttachStdout&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">&quot;AttachStderr&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">&quot;ExposedPorts&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;5432/tcp&quot;</span>: &#123;&#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">&quot;Tty&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">&quot;OpenStdin&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">&quot;StdinOnce&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">&quot;Env&quot;</span>: [</span><br><span class="line">                <span class="string">&quot;PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/postgresql/15/bin&quot;</span>,</span><br><span class="line">                <span class="string">&quot;GOSU_VERSION=1.14&quot;</span>,</span><br><span class="line">                <span class="string">&quot;LANG=en_US.utf8&quot;</span>,</span><br><span class="line">                <span class="string">&quot;PG_MAJOR=15&quot;</span>,</span><br><span class="line">                <span class="string">&quot;PG_VERSION=15.1-1.pgdg110+1&quot;</span>,</span><br><span class="line">                <span class="string">&quot;PGDATA=/var/lib/postgresql/data&quot;</span></span><br><span class="line">            ],</span><br></pre></td></tr></table></figure></p></li><li><p>执行以下命令创建并启动PgSQL容器，自定义命名为<code>my-postgres</code>：</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost home]<span class="comment"># docker run -p 5432:5432 -v /home/docker/postgresql/data:/var/lib/postgresql/data -e POSTGRES_PASSWORD=123456 -e TZ=PRC -d --name=my-postgres postgres</span></span><br><span class="line">165c63929bf341497816b85f28a060a2c6f75b7d9144627a560547b9ca92f9f4</span><br></pre></td></tr></table></figure></p></li><li><p>现在便可以用<code>docker ps -a</code>查看容器是否已经运行：</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost home]<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID   IMAGE               COMMAND                  CREATED              STATUS                          PORTS                                       NAMES</span><br><span class="line">165c63929bf3   postgres            <span class="string">&quot;docker-entrypoint.s…&quot;</span>   About a minute ago   Up About a minute               0.0.0.0:5432-&gt;5432/tcp, :::5432-&gt;5432/tcp   my-postgres</span><br><span class="line">4c1699cdc854   flask-test:latest   <span class="string">&quot;/bin/sh -c &#x27;gunicor…&quot;</span>   9 days ago           Restarting (1) 45 seconds ago                                               flask_test</span><br></pre></td></tr></table></figure></p></li></ul><h2 id="构建flask-api镜像">构建Flask API镜像</h2><ul><li><p>由于有多条命令，不方便直接写到Dockerfile中的CMD子命令中，因此在后端项目目录下新建boot.sh</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#切换到后端项目目录</span></span><br><span class="line">[root@localhost home]<span class="comment"># cd /root/WeChat_exercise/back-end</span></span><br><span class="line">[root@localhost back-end]<span class="comment"># ls</span></span><br><span class="line">app  config.py  invoke  migrations  package.json  __pycache__  Python.gitignore  requirements.txt  venv  weixin.py</span><br><span class="line">[root@localhost back-end]<span class="comment"># touch boot.sh</span></span><br><span class="line">[root@localhost back-end]<span class="comment"># vi boot.sh</span></span><br><span class="line"><span class="comment">#内容如下</span></span><br><span class="line"><span class="comment">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>; <span class="keyword">do</span></span><br><span class="line">    flask db upgrade</span><br><span class="line">    <span class="keyword">if</span> [[ <span class="string">&quot;$?&quot;</span> == <span class="string">&quot;0&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">break</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    <span class="built_in">echo</span> Failed to apply the migration to the database, retrying <span class="keyword">in</span> 3 secs...</span><br><span class="line">    <span class="built_in">sleep</span> 3</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">flask deploy</span><br><span class="line"><span class="built_in">exec</span> gunicorn -w 3 -b 0.0.0.0:5000 --access-logfile - --error-logfile - weixin:app</span><br><span class="line"><span class="comment">#授予可执行权限</span></span><br><span class="line">[root@localhost back-end]<span class="comment"># chmod +x boot.sh</span></span><br></pre></td></tr></table></figure></p></li><li><p>新建一个Dockerfile</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost back-end]<span class="comment"># touch Dockerfile</span></span><br><span class="line">[root@localhost back-end]<span class="comment"># vi Dockerfile</span></span><br><span class="line"></span><br><span class="line">[root@CentOS www]<span class="comment"># vim back-end/Dockerfile</span></span><br><span class="line">内容如下：</span><br><span class="line"></span><br><span class="line">FROM python:3.6-alpine</span><br><span class="line"></span><br><span class="line">COPY ./back-end /usr/src/app</span><br><span class="line">WORKDIR /usr/src/app</span><br><span class="line">RUN pip --no-cache-dir install  -i https://mirrors.aliyun.com/pypi/simple/ --upgrade pip</span><br><span class="line">RUN pip install -r requirements.txt -i https://mirrors.aliyun.com/pypi/simple/ \ </span><br><span class="line">  &amp;&amp; pip install gunicorn</span><br><span class="line">ENV FLASK_APP weixin.py</span><br><span class="line">EXPOSE 5000</span><br><span class="line">ENTRYPOINT [<span class="string">&quot;./boot.sh&quot;</span>]</span><br></pre></td></tr></table></figure></p></li><li><p>开始构建后端Flask API镜像</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost back-end]<span class="comment"># cd ../</span></span><br><span class="line">[root@localhost WeChat_exercise]<span class="comment"># docker build -f back-end/Dockerfile -t weixin-api:0.0.1 .</span></span><br><span class="line">Sending build context to Docker daemon    573MB.2MB</span><br><span class="line">Step 1/8 : FROM python:3.6-alpine</span><br><span class="line"> ---&gt; 3a9e80fa4606</span><br><span class="line">Step 2/8 : COPY ./back-end /usr/src/app</span><br><span class="line"> ---&gt; f5a2a7ecb4cf</span><br><span class="line">...</span><br><span class="line">Step 6/8 : ENV FLASK_APP weixin.py</span><br><span class="line"> ---&gt; Running <span class="keyword">in</span> e9f4ebef3d13</span><br><span class="line">Removing intermediate container e9f4ebef3d13</span><br><span class="line"> ---&gt; 7317d7be0b13</span><br><span class="line">Step 7/8 : EXPOSE 5000</span><br><span class="line"> ---&gt; Running <span class="keyword">in</span> c544718548e6</span><br><span class="line">Removing intermediate container c544718548e6</span><br><span class="line"> ---&gt; c6e683ab97ff</span><br><span class="line">Step 8/8 : ENTRYPOINT [<span class="string">&quot;./boot.sh&quot;</span>]</span><br><span class="line"> ---&gt; Running <span class="keyword">in</span> c8e11997efb0</span><br><span class="line">Removing intermediate container c8e11997efb0</span><br><span class="line"> ---&gt; 64f072fbbbe5</span><br><span class="line">Successfully built 64f072fbbbe5</span><br><span class="line">Successfully tagged weixin-api:0.0.1</span><br><span class="line"></span><br></pre></td></tr></table></figure></p></li><li><p>启动Flask API容器</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost WeChat_exercise]<span class="comment"># docker run -d --name weixin-api --link my-postgres:postgres -e DATABASE_URL=postgresql://postgres:123456@localhost:5432/postgres -p 5000:5000 --rm weixin-api:0.0.1</span></span><br><span class="line">2b58b6f9a4984649df15eda6c7b5b849697b3fc6f9cdfd906009e52814763f19</span><br></pre></td></tr></table></figure></p></li></ul><h2 id="构建nginx容器">构建Nginx容器</h2><ul><li><p>修改WeChat_exercise/front-end/src/main.js文件，增加以下代码，其中192.168.60:131为虚拟机ip</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Vue.use(ElementUI);</span><br><span class="line"><span class="keyword">if</span> (process.env.NODE_ENV===<span class="string">&#x27;production&#x27;</span>)&#123;</span><br><span class="line">  axios.defaults.baseURL=<span class="string">&#x27;http://192.168.60:131:5000&#x27;</span></span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">  axios.defaults.baseURL = <span class="string">&#x27;http://127.0.0.1:5000&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></li><li><p>将打包后的静态文件，拷贝到 <code>../docker/nginx/data</code> 目录中，后续映射到 <code>Nginx</code> 容器中去</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost home]<span class="comment"># cd /root/WeChat_exercise/front-end</span></span><br><span class="line">[root@localhost front-end]<span class="comment"># npm install</span></span><br><span class="line">[root@localhost front-end]<span class="comment"># npm run build</span></span><br><span class="line">[root@localhost front-end]<span class="comment"># mkdir -p ../docker/nginx/data</span></span><br><span class="line">[root@localhost front-end]<span class="comment"># cp -a dist/* ../docker/nginx/data</span></span><br><span class="line">[root@localhost front-end]<span class="comment"># cd ..</span></span><br><span class="line">[root@localhost WeChat_exercise]<span class="comment"># </span></span><br></pre></td></tr></table></figure></p></li><li><p>启动Nginx容器</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost WeChat_exercise]<span class="comment"># docker run -d --name nginx -p 18080:80 --rm -v $PWD/docker/nginx/data:/usr/share/nginx/html nginx</span></span><br><span class="line">50f66f6ad75ec19220e37fe510724b70448b462a7e7c6b335f42de4893f44944</span><br></pre></td></tr></table></figure></p></li><li><p>浏览器访问<code>http://192.168.60.131:18080/#/ping</code>，前端应用能够正常访问到后端API接口：</p><p><img src="/2022/12/15/Docker%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2%E5%AE%9E%E6%88%98/3.png"></p></li></ul><h2 id="使用docker-compose编排容器">使用Docker Compose编排容器</h2><ul><li><p>安装docker-compose</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost WeChat_exercise]<span class="comment"># cd back-end</span></span><br><span class="line">[root@localhost back-end]<span class="comment"># curl -L https://get.daocloud.io/docker/compose/releases/download/v2.4.1/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-compose</span></span><br><span class="line">[root@localhost back-end]<span class="comment"># chmod +x /usr/local/bin/docker-compose</span></span><br><span class="line">[root@localhost back-end]<span class="comment"># ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose</span></span><br><span class="line">[root@localhost back-end]<span class="comment"># docker-compose version</span></span><br><span class="line">Docker Compose version v2.4.1</span><br></pre></td></tr></table></figure></p></li><li><p>创建并编写docker-compose.yaml文件</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost back-end]<span class="comment"># touch docker-compose.yaml</span></span><br><span class="line">[root@localhost back-end]<span class="comment"># vi docker-compose.yaml</span></span><br><span class="line"><span class="comment">#内容如下：</span></span><br><span class="line"></span><br><span class="line">version: <span class="string">&quot;3.7&quot;</span></span><br><span class="line">services:</span><br><span class="line">    my-postgres:</span><br><span class="line">        image: postgres</span><br><span class="line">        privileged: <span class="literal">true</span></span><br><span class="line">        <span class="comment"># 权限要加，不然启动会告错</span></span><br><span class="line">        environment:</span><br><span class="line">          POSTGRES_PASSWORD: 123456</span><br><span class="line">          POSTGRES_USER: postgres</span><br><span class="line">          POSTGRES_DB: postgres</span><br><span class="line">          TZ: Asia/Shanghai</span><br><span class="line">        ports:</span><br><span class="line">          - 5432:5432</span><br><span class="line">        volumes:</span><br><span class="line">          - /home/docker/postgresql/data:/var/lib/postgresql/data</span><br><span class="line">        restart: always</span><br><span class="line"></span><br><span class="line">    weixin-api:</span><br><span class="line">        image: weixin-api:0.0.1</span><br><span class="line">        build:</span><br><span class="line">            context: .</span><br><span class="line">            dockerfile: Dockerfile</span><br><span class="line">        restart: always</span><br><span class="line">        ports:</span><br><span class="line">            - <span class="string">&quot;5000:5000&quot;</span></span><br><span class="line">        depends_on:</span><br><span class="line">            - my-postgres</span><br><span class="line"></span><br><span class="line">    nginx:</span><br><span class="line">        image: nginx</span><br><span class="line">        ports:</span><br><span class="line">           - <span class="string">&quot;18080:80&quot;</span></span><br><span class="line">        volumes:</span><br><span class="line">           - <span class="string">&quot;<span class="variable">$PWD</span>/docker/nginx/data:/usr/share/nginx/html&quot;</span></span><br></pre></td></tr></table></figure></p></li><li><p>查看正在运行的容器并使它们全部停止运行</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看正在运行的容器</span></span><br><span class="line">[root@localhost back-end]<span class="comment"># docker ps </span></span><br><span class="line">CONTAINER ID   IMAGE               COMMAND                  CREATED          STATUS                          PORTS                                       NAMES</span><br><span class="line">2b58b6f9a498   weixin-api:0.0.1    <span class="string">&quot;./boot.sh&quot;</span>              47 minutes ago   Up 47 minutes                   0.0.0.0:5000-&gt;5000/tcp, :::5000-&gt;5000/tcp   weixin-api</span><br><span class="line">50f66f6ad75e   nginx               <span class="string">&quot;/docker-entrypoint.…&quot;</span>   2 hours ago      Up 2 hours                      0.0.0.0:18080-&gt;80/tcp, :::18080-&gt;80/tcp     nginx</span><br><span class="line">165c63929bf3   postgres            <span class="string">&quot;docker-entrypoint.s…&quot;</span>   2 hours ago      Up 2 hours                      0.0.0.0:5432-&gt;5432/tcp, :::5432-&gt;5432/tcp   my-postgres</span><br><span class="line">4c1699cdc854   flask-test:latest   <span class="string">&quot;/bin/sh -c &#x27;gunicor…&quot;</span>   9 days ago       Restarting (1) 14 seconds ago                                               flask_test</span><br><span class="line"></span><br><span class="line"><span class="comment">#停止所有正在运行的容器</span></span><br><span class="line">[root@localhost back-end]<span class="comment"># docker stop $(docker ps -a -q)</span></span><br><span class="line">27ddc44b2109</span><br><span class="line">a0704302049b</span><br><span class="line">d5e616940191</span><br><span class="line">2b58b6f9a498</span><br><span class="line">2d86579808e5</span><br><span class="line">bb1794163d8e</span><br><span class="line">be6acf36f0d6</span><br><span class="line">50f66f6ad75e</span><br><span class="line">165c63929bf3</span><br><span class="line">4a78c412395d</span><br><span class="line">80b4b9b47652</span><br><span class="line">4c1699cdc854</span><br><span class="line">d140e8d466d0</span><br><span class="line"></span><br><span class="line"><span class="comment">#检查是否还有容器正在运行</span></span><br><span class="line">[root@localhost back-end]<span class="comment"># docker ps </span></span><br><span class="line">CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES</span><br></pre></td></tr></table></figure></p></li><li><p>使用Docker Compose启动应用所需的所有容器，'-d' 选项表示在后台运行 compose，否则在前台输出日志</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#启动所有容器</span></span><br><span class="line">[root@localhost back-end]<span class="comment"># docker-compose up -d</span></span><br><span class="line"></span><br><span class="line">[+] Running 3/3</span><br><span class="line"> ⠿ Container back-end-nginx-1        Started                                                                                                                                                                  6.0s</span><br><span class="line"> ⠿ Container back-end-my-postgres-1  Started                                                                                                                                                                  6.1s</span><br><span class="line"> ⠿ Container back-end-weixin-api-1   Started                                                                                                                                                                 11.0s</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看容器状态</span></span><br><span class="line">[root@localhost back-end]<span class="comment"># docker-compose ps</span></span><br><span class="line">NAME                     COMMAND                  SERVICE             STATUS              PORTS</span><br><span class="line">back-end-my-postgres-1   <span class="string">&quot;docker-entrypoint.s…&quot;</span>   my-postgres         running             0.0.0.0:5432-&gt;5432/tcp, :::5432-&gt;5432/tcp</span><br><span class="line">back-end-nginx-1         <span class="string">&quot;/docker-entrypoint.…&quot;</span>   nginx               running             0.0.0.0:18080-&gt;80/tcp, :::18080-&gt;80/tcp</span><br><span class="line">back-end-weixin-api-1    <span class="string">&quot;./boot.sh&quot;</span>              weixin-api          running             0.0.0.0:5000-&gt;5000/tcp, :::5000-&gt;5000/tcp</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看各容器的运行日志，若含有&#x27;-f&#x27; 选项则持续输出</span></span><br><span class="line">[root@localhost back-end]<span class="comment"># docker-compose logs</span></span><br><span class="line"><span class="comment">#停止全部容器</span></span><br><span class="line">[root@localhost back-end]<span class="comment"># docker-compose stop</span></span><br><span class="line">[+] Running 3/3</span><br><span class="line"> ⠿ Container back-end-weixin-api-1   Stopped                                                                                                                                                                 16.3s</span><br><span class="line"> ⠿ Container back-end-nginx-1        Stopped                                                                                                                                                                  4.0s</span><br><span class="line"> ⠿ Container back-end-my-postgres-1  Stopped  </span><br></pre></td></tr></table></figure></p></li></ul><h1 id="端口被占用解决方法">端口被占用解决方法</h1><p>在docker部署的过程中，若端口被占用，如80端口，可使用以下命令解除端口占用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看占用80端口的进程</span></span><br><span class="line">[root@localhost back-end]<span class="comment"># netstat -lnp | grep 80</span></span><br><span class="line">tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      1159/nginx: master  </span><br><span class="line">tcp6       0      0 :::80                   :::*                    LISTEN      1159/nginx: master  </span><br><span class="line"><span class="comment">#杀死占用端口的进程</span></span><br><span class="line">[root@localhost back-end]<span class="comment"># kill -9 1159</span></span><br><span class="line"><span class="comment">#查看是否还有进程占用端口，若有，则继续杀死进程，若无，则端口占用已解除</span></span><br><span class="line">[root@localhost back-end]<span class="comment"># netstat -lnp | grep 80</span></span><br><span class="line">tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      1160/nginx: worker  </span><br><span class="line">tcp6       0      0 :::80                   :::*                    LISTEN      1160/nginx: worker  </span><br><span class="line">[root@localhost back-end]<span class="comment"># kill -9 1160</span></span><br><span class="line">[root@localhost back-end]<span class="comment"># netstat -lnp | grep 80</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Docker,应用部署</summary>
    
    
    
    <category term="Docker" scheme="http://tangmenjue.top/categories/Docker/"/>
    
    <category term="学习笔记" scheme="http://tangmenjue.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Docker" scheme="http://tangmenjue.top/tags/Docker/"/>
    
    <category term="应用部署" scheme="http://tangmenjue.top/tags/%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/"/>
    
  </entry>
  
  <entry>
    <title>Docker应用部署基础</title>
    <link href="http://tangmenjue.top/2022/12/06/Docker%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2%E5%9F%BA%E7%A1%80/"/>
    <id>http://tangmenjue.top/2022/12/06/Docker%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2%E5%9F%BA%E7%A1%80/</id>
    <published>2022-12-06T13:06:20.000Z</published>
    <updated>2022-12-06T13:06:20.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="docker">Docker</h1><h2 id="容器简介">容器简介</h2><h3 id="什么是linux容器">什么是Linux容器</h3><p>Linux容器是与系统其他部分隔离开的一系列进程。它在另一个镜像中运行，并由该镜像提供支持进程所需的全部文件。容器提供的镜像包括了应用的所有依赖项，因此在开发到测试再到生产的过程中，容器都具有可移植性和一致性。</p><h3 id="容器等同于虚拟化吗">容器等同于虚拟化吗</h3><p>容器不完全是虚拟化。虚拟化使得许多系统可同时在单个系统上运行，而容器可共享同一个操作系统的内核，将应用进程与系统其他部分隔离开。</p><p>这便意味着，即使是让多个操作系统在单个虚拟机监控程序上运行以实现虚拟化，也不能达到和使用容器同等的轻量级效果。Linux容器可从单个操作系统运行，在所有容器中共享该操作系统，因此应用和服务能够保持轻量级，并可以快速运行。</p><h3 id="什么是docker">什么是Docker</h3><p>IT软件中所说的Docker，是指容器化技术，用于支持创建和使用Linux容器。借助Docker，可将容器当作重量轻、模块化的虚拟机使用，同时还将获得高度的灵活性，从而实现对容器的高效创建、部署及复制，并能将其从一个环境顺利迁移至另一个环境。</p><p>Docker技术使用Linux内核和内核功能来分隔进行，以便各进程相互独立运行。</p><h3 id="docker的目标">Docker的目标</h3><p>Docker的主要目标是构建、运输、处处运行（Build, Ship and Run any App, Angwhere）</p><p>构建：做一个Docker镜像</p><p>运输：Docker pull</p><p>运行：启动一个容器</p><p>每个容器都有自己的文件系统rootfs</p><h2 id="安装docker">安装Docker</h2><p>在Centos系统中，安装命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看当前的内核版本</span></span><br><span class="line">[root@localhost admin]<span class="comment"># uname -r</span></span><br><span class="line">3.10.0-1160.el7.x86_64</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看已安装的CentOS版本信息</span></span><br><span class="line">[root@localhost admin]<span class="comment"># cat /etc/redhat-release</span></span><br><span class="line">CentOS Linux release 7.9.2009 (Core)</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装需要的软件包，yum-util提供yum-config-manager功能，另两个是devicemapper驱动依赖</span></span><br><span class="line">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置yun源，下面两个都可用</span></span><br><span class="line"><span class="comment">#（中央仓库）</span></span><br><span class="line">yum-config-manager --add-repo http://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line"><span class="comment">#（阿里仓库）</span></span><br><span class="line">yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看可用的Docker版本</span></span><br><span class="line">yum list docker-ce --showduplicates | <span class="built_in">sort</span> -r</span><br><span class="line"><span class="comment">#选择一个Docker版本并安装</span></span><br><span class="line">yum -y install docker-ce-18.03.1.ce</span><br><span class="line"></span><br><span class="line"><span class="comment">#启动Docker并设置开机自启</span></span><br><span class="line">systemctl start docker</span><br><span class="line">systemctl <span class="built_in">enable</span> docker</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看Docker相关信息来验证是否正确安装了Docker</span></span><br><span class="line">docker version</span><br><span class="line"><span class="comment">#配置Docker镜像加速</span></span><br><span class="line">vim /etc/docker/daemon.json</span><br><span class="line">&#123;<span class="string">&quot;registry-mirrors&quot;</span>:[<span class="string">&quot;https://registry.docker-cn.com&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#启动第一个容器</span></span><br><span class="line">docker run hello-world</span><br></pre></td></tr></table></figure><h2 id="hello-world">Hello World</h2><p>Docker允许在容器中运行应用程序，使用<code>docker run</code>命令来在容器中运行一个应用程序，输出Hello World如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost admin]<span class="comment"># docker run ubuntu:15.10 /bin/echo &quot;Hello world&quot;</span></span><br><span class="line">Hello world</span><br><span class="line"><span class="comment">#其中ubuntu:15.10为所指定的要运行的镜像，Docker会首先从本地主机上查找镜像是否存在，若不存在，Dockwe就会从镜像仓库中下载公共镜像</span></span><br><span class="line"><span class="comment"># /bin/echo &quot;Hello world&quot;为在启动的容器里执行的命令</span></span><br></pre></td></tr></table></figure><h3 id="运行交互式的容器">运行交互式的容器</h3><p>通过Docker的两个参数<code>-i -t</code>，可以让Docker运行的容器实现交互式对话的能力：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost admin]<span class="comment"># docker run -i -t ubuntu:15.10 /bin/bash</span></span><br><span class="line">root@7cf8cc6326f7:/<span class="comment">#</span></span><br><span class="line"><span class="comment">#此时已经进入了一个ubuntu:15.10系统的容器</span></span><br><span class="line"><span class="comment">#查看当前系统的版本信息</span></span><br><span class="line">root@7cf8cc6326f7:/<span class="comment"># cat /proc/version</span></span><br><span class="line">Linux version 3.10.0-1160.el7.x86_64 (mockbuild@kbuilder.bsys.centos.org) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-44) (GCC) ) <span class="comment">#1 SMP Mon Oct 19 16:18:59 UTC 2020</span></span><br><span class="line"><span class="comment">#查看当前目录下的文件列表</span></span><br><span class="line">root@7cf8cc6326f7:/<span class="comment"># ls</span></span><br><span class="line">bin   dev  home  lib64  mnt  proc  run   srv  tmp  var</span><br><span class="line">boot  etc  lib   media  opt  root  sbin  sys  usr</span><br><span class="line"><span class="comment">#可以通过运行exit命令或使用Ctrl+D来退出容器</span></span><br><span class="line">root@7cf8cc6326f7:/<span class="comment"># exit</span></span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><h3 id="后台模式启动容器">后台模式启动容器</h3><p>使用以下命令可以创建一个以进程方式运行的容器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost admin]<span class="comment"># docker run -d ubuntu:15.10 /bin/sh -c &quot;while true; do echo hello world; sleep 1;done&quot;</span></span><br><span class="line"><span class="comment">#输出的长字符串为容器的ID</span></span><br><span class="line">a26fa474ed2743ad2413c5e9c828faafa141ab1ec11ba3ffaf424de658b785de</span><br></pre></td></tr></table></figure><p>容器ID对每个容器来说都是唯一的，可以通过容器ID来查看对应的容器发生了什么。</p><p>另外打开一个终端，用<code>docker ps</code>查看容器是否进行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost admin]<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES</span><br><span class="line">54539564169f        ubuntu:15.10        <span class="string">&quot;/bin/bash&quot;</span>         31 seconds ago      Up 30 seconds                           nostalgic_jennings</span><br><span class="line"></span><br><span class="line"><span class="comment">#CONTAINER ID 为容器ID</span></span><br><span class="line"><span class="comment">#IMAGE 为使用的镜像</span></span><br><span class="line"><span class="comment">#COMMAND 为启动容器时运行的命令</span></span><br><span class="line"><span class="comment">#CREATED 为容器的创建时间</span></span><br><span class="line"><span class="comment">#STATUS 为容器状态</span></span><br><span class="line"><span class="comment">#PORTS 为容器的端口信息和使用的连接类型(tcp\udp)</span></span><br><span class="line"><span class="comment">#NAMES 为自动分配的容器名称</span></span><br></pre></td></tr></table></figure><p>容器的状态有7种：</p><ul><li>created（已创建）</li><li>restarting（重启中）</li><li>running或Up（运行中）</li><li>removing（迁移中）</li><li>paused（暂停）</li><li>exited（停止）</li><li>dead（死亡）</li></ul><h3 id="停止容器">停止容器</h3><p>使用<code>docker stop</code>命令可以使容器停止：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop 需要停止的容器ID</span><br></pre></td></tr></table></figure><h2 id="docker镜像管理">Docker镜像管理</h2><h3 id="docker镜像常用命令">Docker镜像常用命令</h3><p><strong>根据镜像名称获取镜像centos：</strong><code>docker pull centos</code></p><p><strong>查看当前主机镜像列表：</strong><code>docker image list</code></p><p><strong>查找镜像：</strong><code>docker search 镜像名</code></p><p><strong>导入镜像（docker-centos.tar.gz为镜像名）：</strong><code>docker image load -i docker-centos.tar.gz</code></p><p><strong>导出镜像centos：</strong><code>docker image save centos &gt; docker-centos.tar.gz</code></p><p><strong>删除镜像hello-world：</strong><code>docker rmi hello-world</code></p><p><strong>删除镜像centos：</strong><code>docker image rm centos:latest</code></p><p><strong>更新镜像</strong>：<code>docker run -t -i ubuntu:15.10 /bin/bash</code></p><p><strong>查看镜像的详细信息：</strong><code>docker image inspect centos</code></p><h3 id="使用dockerfile构建镜像">使用Dockerfile构建镜像</h3><p>当从docker镜像仓库中下载的镜像不能满足需求时，可以通过以下两种方式对镜像进行更改：</p><ul><li>从已经创建的容器中更新镜像，并提交这个镜像</li><li>使用Dockerfile命令来创建一个新的镜像</li></ul><p>首先，使用命令docker build 从零开始创建一个新的镜像，为此需要创建一个Dockerfile文件，其中包含一组指令来告诉Docker如何构建镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost admin]<span class="comment"># touch Dockerfile</span></span><br><span class="line">[root@localhost admin]<span class="comment"># vim Dockerfile</span></span><br><span class="line">FROM    centos:6.7</span><br><span class="line">MAINTAINER      Fisher <span class="string">&quot;fisher@sudops.com&quot;</span></span><br><span class="line"></span><br><span class="line">RUN     /bin/echo <span class="string">&#x27;root:123456&#x27;</span> |chpasswd</span><br><span class="line">RUN     useradd runoob</span><br><span class="line">RUN     /bin/echo <span class="string">&#x27;runoob:123456&#x27;</span> |chpasswd</span><br><span class="line">RUN     /bin/echo -e <span class="string">&quot;LANG=\&quot;en_US.UTF-8\&quot;&quot;</span> &gt;/etc/default/local</span><br><span class="line">EXPOSE  22</span><br><span class="line">EXPOSE  80</span><br><span class="line">CMD     /usr/sbin/sshd -D</span><br></pre></td></tr></table></figure><p>每一个指令都会在镜像上创建一个新的层，每一个指令的前缀都必须是大写的。</p><p>dockerfile 命令详情如下：</p><ul><li><p>FROM：镜像从那里来</p></li><li><p>MAINTAINER：镜像维护者信息</p></li><li><p>RUN：构建镜像执行的命令，每一次RUN都会构建一层</p></li><li><p>CMD：容器启动的命令，如果有多个则以最后一个为准，也可以为ENTRYPOINT提供参数</p></li><li><p>VOLUME：定义数据卷，如果没有定义则使用默认</p></li><li><p>USER：指定后续执行的用户组和用户</p></li><li><p>WORKDIR：切换当前执行的工作目录</p></li><li><p>HEALTHCHECH：健康检测指令</p></li><li><p>ARG：变量属性值，但不在容器内部起作用</p></li><li><p>EXPOSE：暴露端口</p></li><li><p>ENV：变量属性值，容器内部也会起作用</p></li><li><p>ADD：添加文件，如果是压缩文件也解压</p></li><li><p>COPY：添加文件，以复制的形式</p></li><li><p>ENTRYPOINT：容器进入时执行的命令</p></li></ul><p>其中，FROM指令指定只用哪个镜像源，RUN指令告诉docker在镜像内执行命令安装了什么。然后便可以使用Dockerfile 文件通过docker build 命令来构建一个镜像。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost admin]<span class="comment"># docker build -t runoob/centos:6.7 .</span></span><br><span class="line">Sending build context to Docker daemon  205.8MB</span><br><span class="line">Step 1/9 : FROM    centos:6.7</span><br><span class="line">6.7: Pulling from library/centos</span><br><span class="line">cbddbc0189a0: Pull complete </span><br><span class="line">Digest: sha256:4c952fc7d30ed134109c769387313ab864711d1bd8b4660017f9d27243622df1</span><br><span class="line">Status: Downloaded newer image <span class="keyword">for</span> centos:6.7</span><br><span class="line"> ---&gt; 9f1de3c6ad53</span><br><span class="line">Step 2/9 : MAINTAINER      Fisher <span class="string">&quot;fisher@sudops.com&quot;</span></span><br><span class="line"> ---&gt; Running <span class="keyword">in</span> 5eaef1ca03a8</span><br><span class="line">Removing intermediate container 5eaef1ca03a8</span><br><span class="line"> ---&gt; fb3340e270e3</span><br><span class="line">...</span><br><span class="line">Step 9/9 : CMD     /usr/sbin/sshd -D</span><br><span class="line"> ---&gt; Running <span class="keyword">in</span> 5856113fd1c1</span><br><span class="line">Removing intermediate container 5856113fd1c1</span><br><span class="line"> ---&gt; 461a6483b47b</span><br><span class="line">Successfully built 461a6483b47b</span><br><span class="line">Successfully tagged runoob/centos:6.7</span><br><span class="line"></span><br><span class="line"><span class="comment">#其中参数-t为指定要创建的目标镜像名</span></span><br><span class="line"><span class="comment">#参数.为Dockerfile文件所在目录，也可以指定Dockerfile的绝对路径</span></span><br></pre></td></tr></table></figure><p>查看创建的镜像runoob/centos 是否已经存在：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost admin]<span class="comment"># docker images</span></span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">runoob/centos       6.7                 461a6483b47b        12 minutes ago      191MB</span><br><span class="line">nginx               latest              88736fe82739        2 weeks ago         142MB</span><br><span class="line">ubuntu              latest              a8780b506fa4        4 weeks ago         77.8MB</span><br><span class="line">hello-world         latest              feb5d9fea6a5        14 months ago       13.3kB</span><br><span class="line">centos              latest              5d0da3dc9764        14 months ago       231MB</span><br><span class="line">centos              6.7                 9f1de3c6ad53        3 years ago         191MB</span><br><span class="line">ubuntu              15.10               9b9cb95443b5        6 years ago         137MB</span><br><span class="line">training/webapp     latest              6fae60ef3446        7 years ago         349MB</span><br></pre></td></tr></table></figure><p>现在可以使用新的镜像来创建容器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost admin]<span class="comment"># docker run -t -i runoob/centos:6.7 /bin/bash</span></span><br><span class="line">[root@c256ace5a3db /]<span class="comment"># id runoob</span></span><br><span class="line">uid=500(runoob) gid=500(runoob) <span class="built_in">groups</span>=500(runoob)</span><br></pre></td></tr></table></figure><p>可以看到新镜像已经包含创建的用户runoob。</p><h3 id="设置镜像标签">设置镜像标签</h3><p>使用docker tag 命令可以为镜像添加一个新的标签：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">root@localhost admin]<span class="comment"># docker tag 461a6483b47b runoob/centos:dev</span></span><br><span class="line">[root@localhost admin]<span class="comment"># docker images</span></span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">runoob/centos       6.7                 461a6483b47b        21 minutes ago      191MB</span><br><span class="line">runoob/centos       dev                 461a6483b47b        21 minutes ago      191MB</span><br><span class="line">nginx               latest              88736fe82739        2 weeks ago         142MB</span><br><span class="line">ubuntu              latest              a8780b506fa4        4 weeks ago         77.8MB</span><br><span class="line">hello-world         latest              feb5d9fea6a5        14 months ago       13.3kB</span><br><span class="line">centos              latest              5d0da3dc9764        14 months ago       231MB</span><br><span class="line">centos              6.7                 9f1de3c6ad53        3 years ago         191MB</span><br><span class="line">ubuntu              15.10               9b9cb95443b5        6 years ago         137MB</span><br><span class="line">training/webapp     latest              6fae60ef3446        7 years ago         349MB</span><br></pre></td></tr></table></figure><h2 id="容器的日常管理">容器的日常管理</h2><h3 id="启动容器">启动容器</h3><p>最简单的运行一个容器：<code>docker run nginx</code></p><p>使用ubuntu镜像启动一个容器，参数以命令行模式进入该容器：<code>docker run -it ubuntu /bin/bash</code>（<code>-it</code>是指交互式终端）</p><p>快速启动容器：<code>docker run  centos:latest  /usr/bin/sleep 20</code></p><p><strong>注意：容器内的第一个进程必须一直处于运行的状态，否则这个容器，就会处于退出状态！</strong></p><p>查看正在运行的容器：<code>docker container ls</code></p><p>查看容器详细信息/id：<code>docker container  inspect  容器名称/id</code></p><h3 id="启动已停止运行的容器">启动已停止运行的容器</h3><p>查看所有容器（包括未运行的）：<code>docker ps -a</code></p><p>启动一个已停止运行的容器：<code>docker start 容器名称/id</code></p><p>自命名启动一个容器：<code>docker run --name ubuntu-test ubuntu /bin/bash</code></p><p>让ubuntu-test容器在后台运行：<code>docker run -itd --name ubuntu-test ubuntu /bin/bash</code></p><p>停止容器:<code>docker stop 容器名称/id</code>或者<code>docker container kill 容器名称/id</code></p><p>重启停止的容器：<code>docker restart 容器名称/id</code></p><h3 id="进入容器">进入容器</h3><p>在使用<code>-d</code>参数时，容器启动后会进入后台。此时想要进入容器，可以通过以下指令进入：</p><ul><li><code>docker attach 容器名称/id</code> ：此命令会退出容器终端，且会导致容器停止</li><li><code>docker exec -it 容器名称/id /bin/bash</code>：（推荐使用此命令，此命令会退出容器终端，但不会导致容器的停止）</li></ul><h3 id="导入容器快照">导入容器快照</h3><p>可以使用docker import 从容器快照文件中再导入为镜像，如将快照文件ubuntu.tar导入到镜像test/ubuntu:v1中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> docker /ubuntu.tar | docker import - <span class="built_in">test</span>/ubuntu:v1</span><br></pre></td></tr></table></figure><p>也可以通过指定URL或某个目录来导入，如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker import http://example.com/exampleimage.tag example/imagerepo</span><br></pre></td></tr></table></figure><h3 id="删除容器">删除容器</h3><p>使用docker rm 命令可删除容器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">rm</span> -f 容器名称/id</span><br></pre></td></tr></table></figure><p>清理掉所有处于终止状态的容器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker container prune</span><br></pre></td></tr></table></figure><p>删除所有容器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">rm</span> -f `docker ps -a -q`</span><br></pre></td></tr></table></figure><h3 id="使用docker构建一个web应用程序">使用docker构建一个web应用程序</h3><p>在dockers容器中运行一个Python Flask应用来运行一个web应用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost admin]<span class="comment"># docker pull training/webapp</span></span><br><span class="line">[root@localhost admin]<span class="comment"># docker run -d -p 5000:5000 training/webapp python app.py</span></span><br><span class="line"></span><br><span class="line">8294ae65cc7397df396f1846582d2c55896646996eab41a26f9be0c01f3270f8</span><br><span class="line"></span><br><span class="line"><span class="comment">#-d:让容器在后台运行</span></span><br><span class="line"><span class="comment">#-P:将容器内部使用的网络端口随机映射到使用的主机上</span></span><br></pre></td></tr></table></figure><p>不同指定的映射方法：</p><table><thead><tr class="header"><th style="text-align: left;">参数</th><th style="text-align: left;">说明</th></tr></thead><tbody><tr class="odd"><td style="text-align: left;"><code>-p hostPort:containerPort</code></td><td style="text-align: left;">端口映射 -p 8080:80</td></tr><tr class="even"><td style="text-align: left;"><code>-p ip:hostPort:containerPort</code></td><td style="text-align: left;">配置监听地址 -p 10.0.0.100:8080:80</td></tr><tr class="odd"><td style="text-align: left;"><code>-p ip::containerPort</code></td><td style="text-align: left;">随机分配端口 -p 10.0.0.100::80</td></tr><tr class="even"><td style="text-align: left;"><code>-p hostPort:containerPort:udp</code></td><td style="text-align: left;">指定协议 -p 8080:80:tcp</td></tr><tr class="odd"><td style="text-align: left;"><code>-p 81:80 –p 443:443</code></td><td style="text-align: left;">指定多个</td></tr></tbody></table><p>此时使用docker ps来查看正在运行的容器，会发现多了端口信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost admin]<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS                     NAMES</span><br><span class="line">8294ae65cc73        training/webapp     <span class="string">&quot;python app.py&quot;</span>     49 seconds ago      Up 47 seconds       0.0.0.0:32768-&gt;5000/tcp   hardcore_brown</span><br></pre></td></tr></table></figure><p>从端口信息中可知，Docker开放了5000端口（默认Python Flask端口）映射到主机端口32768上，此时可以通过浏览器访问WEB应用：(路径为主机ip:32768端口)</p><p><img src="/2022/12/06/Docker%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2%E5%9F%BA%E7%A1%80/1.png"></p><p>可以通过参数<code>-p</code>来设置不一样的端口，如将容器内部的5000端口映射到本地主机的5000端口上：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost admin]# docker run -d -p 5000:5000 training/webapp python app.py</span><br><span class="line">743a62b49b70f9575690e2b85d4ea1eed94dd19fe9f6074f1d7069d977a2ecc8</span><br><span class="line">[root@localhost admin]# docker ps</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS                     NAMES</span><br><span class="line">743a62b49b70        training/webapp     &quot;python app.py&quot;     22 seconds ago      Up 21 seconds       0.0.0.0:5000-&gt;5000/tcp    infallible_allen</span><br><span class="line">8294ae65cc73        training/webapp     &quot;python app.py&quot;     10 minutes ago      Up 10 minutes       0.0.0.0:32768-&gt;5000/tcp   hardcore_brown</span><br></pre></td></tr></table></figure><h3 id="网络端口的快捷方式">网络端口的快捷方式</h3><p>使用docker port 可以查看指定（ID或名字）容器的某个确定端口映射到宿主机的端口号。</p><p>查看容器端口情况可用：<code>docker port 容器名称/id</code>，如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost admin]<span class="comment"># docker port 743a62b49b70</span></span><br><span class="line">5000/tcp -&gt; 0.0.0.0:5000</span><br><span class="line">[root@localhost admin]<span class="comment"># docker port infallible_allen</span></span><br><span class="line">5000/tcp -&gt; 0.0.0.0:5000</span><br></pre></td></tr></table></figure><h3 id="查看web应用程序日志">查看WEB应用程序日志</h3><p>查看容器内部的标准输出，可以查看端口信息和应用程序的访问日志：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost admin]<span class="comment"># docker logs -f 743a62b49b70</span></span><br><span class="line"> * Running on http://0.0.0.0:5000/ (Press CTRL+C to quit)</span><br><span class="line">192.168.18.129 - - [06/Dec/2022 01:43:49] <span class="string">&quot;GET / HTTP/1.1&quot;</span> 200 -</span><br><span class="line">192.168.18.129 - - [06/Dec/2022 01:43:49] <span class="string">&quot;GET /favicon.ico HTTP/1.1&quot;</span> 404 -</span><br></pre></td></tr></table></figure><h3 id="检查web应用程序">检查WEB应用程序</h3><p>使用docker inspect来查看Docker的底层信息，它会返回一个JSON文件记录着Docker容器的配置和状态信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost admin]<span class="comment"># docker inspect 743a62b49b70</span></span><br><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&quot;Id&quot;</span>: <span class="string">&quot;743a62b49b70f9575690e2b85d4ea1eed94dd19fe9f6074f1d7069d977a2ecc8&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Created&quot;</span>: <span class="string">&quot;2022-12-06T01:42:44.255608149Z&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Path&quot;</span>: <span class="string">&quot;python&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Args&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;app.py&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="string">&quot;State&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;Status&quot;</span>: <span class="string">&quot;running&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Running&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="string">&quot;Paused&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">&quot;Restarting&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">&quot;OOMKilled&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">&quot;Dead&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">&quot;Pid&quot;</span>: 17733,</span><br><span class="line">            <span class="string">&quot;ExitCode&quot;</span>: 0,</span><br><span class="line">            <span class="string">&quot;Error&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;StartedAt&quot;</span>: <span class="string">&quot;2022-12-06T01:42:45.331479678Z&quot;</span>,</span><br><span class="line">            <span class="string">&quot;FinishedAt&quot;</span>: <span class="string">&quot;0001-01-01T00:00:00Z&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        ......</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="停止web应用容器">停止WEB应用容器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost admin]<span class="comment"># docker stop 743a62b49b70</span></span><br><span class="line">743a62b49b70</span><br></pre></td></tr></table></figure><h3 id="重启web应用容器">重启WEB应用容器</h3><p>已经停止的容器可以使用命令docker start来启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost admin]<span class="comment"># docker start 743a62b49b70</span></span><br><span class="line">743a62b49b70</span><br><span class="line">[root@localhost admin]<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS                     NAMES</span><br><span class="line">743a62b49b70        training/webapp     <span class="string">&quot;python app.py&quot;</span>     14 minutes ago      Up 14 seconds       0.0.0.0:5000-&gt;5000/tcp    infallible_allen</span><br><span class="line">8294ae65cc73        training/webapp     <span class="string">&quot;python app.py&quot;</span>     24 minutes ago      Up 24 minutes       0.0.0.0:32768-&gt;5000/tcp   hardcore_brown</span><br></pre></td></tr></table></figure><h3 id="移除web应用容器">移除WEB应用容器</h3><p>使用docker rm 命令来删除不需要的容器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#删除容器时，容器必须是停止状态，否则会报以下错误</span></span><br><span class="line">[root@localhost admin]<span class="comment"># docker rm 743a62b49b70</span></span><br><span class="line">Error response from daemon: You cannot remove a running container 743a62b49b70f9575690e2b85d4ea1eed94dd19fe9f6074f1d7069d977a2ecc8. Stop the container before attempting removal or force remove</span><br><span class="line"></span><br><span class="line">t@localhost admin]<span class="comment"># docker stop 743a62b49b70</span></span><br><span class="line">743a62b49b70</span><br><span class="line">[root@localhost admin]<span class="comment"># docker rm 743a62b49b70</span></span><br><span class="line">743a62b49b70</span><br><span class="line">[root@localhost admin]<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS                     NAMES</span><br><span class="line">8294ae65cc73        training/webapp     <span class="string">&quot;python app.py&quot;</span>     26 minutes ago      Up 26 minutes       0.0.0.0:32768-&gt;5000/tcp   hardcore_brown</span><br></pre></td></tr></table></figure><h2 id="docker数据卷的管理">Docker数据卷的管理</h2><h3 id="挂载时创建卷">挂载时创建卷</h3><p>挂载卷：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost admin]<span class="comment"># docker run -d -p 80:80 -v /data:/usr/share/nginx/html nginx:latest</span></span><br><span class="line">5f2530020849d15287b8bfd4dd2274945c0fd07078ab281a17e47bf2243ea113</span><br><span class="line"></span><br><span class="line"><span class="comment">#/usr/share/nginx/html为容器内站点目录</span></span><br></pre></td></tr></table></figure><p>在宿主机写入数据，查看：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost admin]<span class="comment"># echo &quot;http://www.nmtui.com&quot; &gt;/data/index.html</span></span><br><span class="line">[root@localhost admin]<span class="comment"># curl 192.168.18.129</span></span><br><span class="line">http://www.nmtui.com</span><br><span class="line"></span><br><span class="line"><span class="comment">#192.168.18.129为宿主机的ip地址</span></span><br></pre></td></tr></table></figure><p>设置共享卷，使用同一个卷启动一个新的容器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost admin]<span class="comment"># docker run -d -p 8080:80 -v /data:/usr/share/nginx/html nginx:latest</span></span><br><span class="line">ad8ef6db5021d356f6b56a62d6aaa584ad8be7b8c8cac73cc7bd08369acf41d4</span><br><span class="line">[root@localhost admin]<span class="comment"># curl 192.168.18.129:8080</span></span><br><span class="line">http://www.nmtui.com</span><br></pre></td></tr></table></figure><p>查看卷列表：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost admin]<span class="comment"># docker volume ls</span></span><br><span class="line">DRIVER              VOLUME NAME</span><br></pre></td></tr></table></figure><h3 id="创建卷后挂载">创建卷后挂载</h3><p>创建一个卷：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost admin]<span class="comment"># docker volume create</span></span><br><span class="line">8bbaf77b6495bbc8e50e75dfbd945badc0fdd2d2aced2359dc8d97308fa08d92</span><br><span class="line">[root@localhost admin]<span class="comment"># docker volume ls</span></span><br><span class="line">DRIVER              VOLUME NAME</span><br><span class="line"><span class="built_in">local</span>               8bbaf77b6495bbc8e50e75dfbd945badc0fdd2d2aced2359dc8d97308fa08d92</span><br></pre></td></tr></table></figure><p>指定卷名：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost admin]<span class="comment"># docker volume create --name clsn</span></span><br><span class="line">clsn</span><br><span class="line">[root@localhost admin]<span class="comment"># docker volume ls</span></span><br><span class="line">DRIVER              VOLUME NAME</span><br><span class="line"><span class="built_in">local</span>               8bbaf77b6495bbc8e50e75dfbd945badc0fdd2d2aced2359dc8d97308fa08d92</span><br><span class="line"><span class="built_in">local</span>               clsn</span><br></pre></td></tr></table></figure><p>查看卷路径：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost admin]<span class="comment"># docker volume inspect clsn</span></span><br><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">&quot;CreatedAt&quot;</span>: <span class="string">&quot;2022-12-06T00:50:33-08:00&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Driver&quot;</span>: <span class="string">&quot;local&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Labels&quot;</span>: &#123;&#125;,</span><br><span class="line">        <span class="string">&quot;Mountpoint&quot;</span>: <span class="string">&quot;/var/lib/docker/volumes/clsn/_data&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Name&quot;</span>: <span class="string">&quot;clsn&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Options&quot;</span>: &#123;&#125;,</span><br><span class="line">        <span class="string">&quot;Scope&quot;</span>: <span class="string">&quot;local&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>使用卷创建：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost admin]<span class="comment"># docker run -d -p 9000:80 -v clsn:/usr/share/nginx/html nginx:latest</span></span><br><span class="line">3d4e986ad050c199740ec6a2a4f38d0ba54ad78715cb72d21df396e0774f705f</span><br><span class="line"><span class="comment">#宿主机测试</span></span><br><span class="line">[root@localhost admin]<span class="comment"># echo &#x27;blog.nmtui.com&#x27; &gt;/var/lib/docker/volumes/clsn/_data/index.html</span></span><br><span class="line">[root@localhost admin]<span class="comment"># curl 192.168.18.129:9000</span></span><br><span class="line">blog.nmtui.com</span><br></pre></td></tr></table></figure><p>设置卷：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost admin]<span class="comment"># docker run -d -P --volumes-from 5f2530020849d15287b8bfd4dd2274945c0fd07078ab281a17e47bf2243ea113 nginx:latest</span></span><br><span class="line">5e9a1d7ea93ea7b7fb2d6918cf1cc8805aff41daa21b7e7656be1a14b2662e94</span><br></pre></td></tr></table></figure><p>查看使用的端口：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost admin]<span class="comment"># netstat -lntup</span></span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    </span><br><span class="line">tcp        0      0 0.0.0.0:111             0.0.0.0:*               LISTEN      595/rpcbind         </span><br><span class="line">tcp        0      0 192.168.122.1:53        0.0.0.0:*               LISTEN      1320/dnsmasq        </span><br><span class="line">tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      1074/sshd           </span><br><span class="line">tcp        0      0 127.0.0.1:631           0.0.0.0:*               LISTEN      1069/cupsd          </span><br><span class="line">tcp        0      0 127.0.0.1:25            0.0.0.0:*               LISTEN      1352/master         </span><br><span class="line">tcp6       0      0 :::9000                 :::*                    LISTEN      4270/docker-proxy   </span><br><span class="line">tcp6       0      0 :::111                  :::*                    LISTEN      595/rpcbind         </span><br><span class="line">tcp6       0      0 :::8080                 :::*                    LISTEN      3992/docker-proxy   </span><br><span class="line">tcp6       0      0 :::80                   :::*                    LISTEN      3794/docker-proxy   </span><br><span class="line">tcp6       0      0 :::22                   :::*                    LISTEN      1074/sshd           </span><br><span class="line">tcp6       0      0 ::1:631                 :::*                    LISTEN      1069/cupsd          </span><br><span class="line">tcp6       0      0 ::1:25                  :::*                    LISTEN      1352/master         </span><br><span class="line">tcp6       0      0 :::32768                :::*                    LISTEN      4388/docker-proxy   </span><br><span class="line">[root@localhost admin]<span class="comment"># curl 192.168.18.129:32768</span></span><br><span class="line">http://www.nmtui.com</span><br></pre></td></tr></table></figure><h3 id="手动将容器保存为镜像">手动将容器保存为镜像</h3><p>启动一个centos6.8的镜像：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost admin]<span class="comment"># docker pull centos:6.8</span></span><br><span class="line">[root@localhost admin]<span class="comment"># docker run -it -p 1022:22 centos:6.8 /bin/bash</span></span><br><span class="line"><span class="comment">#在容器中安装sshd服务并修改系统密码</span></span><br><span class="line">[root@4d61bc1e379d /]<span class="comment"># yum install openssh-server -y</span></span><br><span class="line">[root@4d61bc1e379d yum.repos.d]<span class="comment"># echo &quot;root:123456&quot; |chpasswd</span></span><br><span class="line">[root@4d61bc1e379d yum.repos.d]<span class="comment"># /etc/init.d/sshd start</span></span><br><span class="line">Generating SSH2 RSA host key:                              [  OK  ]</span><br><span class="line">Generating SSH1 RSA host key:                              [  OK  ]</span><br><span class="line">Generating SSH2 DSA host key:                              [  OK  ]</span><br><span class="line">Starting sshd:                                             [  OK  ]</span><br></pre></td></tr></table></figure><p>启动完成后镜像进行ssh连接测试。</p><p>将容器提交为镜像：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost admin]<span class="comment"># docker commit 4d61bc1e379d centos6-ssh</span></span><br><span class="line">sha256:9591270dae2dda5a96c94c47e291aae0eeab7599ada3cdf44701c4dfd72e8cee</span><br></pre></td></tr></table></figure><p>使用新的镜像启动容器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost admin]<span class="comment"># docker run -d -p 1122:22 centos6-ssh:latest /usr/sbin/sshd -D</span></span><br><span class="line">0019e8bb73550eec2526a101a19814ec92dfb045dd2fdca4d36175005e63ba20</span><br><span class="line">[root@localhost admin]<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID        IMAGE                COMMAND                  CREATED             STATUS              PORTS                   NAMES</span><br><span class="line">0019e8bb7355        centos6-ssh:latest   <span class="string">&quot;/usr/sbin/sshd -D&quot;</span>      30 seconds ago      Up 28 seconds       0.0.0.0:1122-&gt;22/tcp    blissful_albattani</span><br><span class="line">5e9a1d7ea93e        nginx:latest         <span class="string">&quot;/docker-entrypoint.…&quot;</span>   2 hours ago         Up 2 hours          0.0.0.0:32768-&gt;80/tcp   xenodochial_kare</span><br><span class="line">3d4e986ad050        nginx:latest         <span class="string">&quot;/docker-entrypoint.…&quot;</span>   2 hours ago         Up 2 hours          0.0.0.0:9000-&gt;80/tcp    vibrant_bhabha</span><br><span class="line">ad8ef6db5021        nginx:latest         <span class="string">&quot;/docker-entrypoint.…&quot;</span>   2 hours ago         Up 2 hours          0.0.0.0:8080-&gt;80/tcp    awesome_jang</span><br><span class="line">5f2530020849        nginx:latest         <span class="string">&quot;/docker-entrypoint.…&quot;</span>   2 hours ago         Up 2 hours          0.0.0.0:80-&gt;80/tcp      pensive_lumiere</span><br><span class="line">76cf3b4dce49        ubuntu               <span class="string">&quot;/bin/bash&quot;</span>              8 hours ago         Up 2 hours                                  test2</span><br><span class="line">58bbd5afb8bf        ubuntu               <span class="string">&quot;/bin/bash&quot;</span>              8 hours ago         Up 2 hours                                  test1</span><br></pre></td></tr></table></figure><p>进入到容器内，在容器里安装httpd服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost admin]<span class="comment"># docker exec -it 0019e8bb7355 /bin/bash</span></span><br><span class="line">[root@0019e8bb7355 /]<span class="comment"># yum install https -y</span></span><br></pre></td></tr></table></figure><p>编写启动脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@0019e8bb7355 /]<span class="comment"># touch init.sh</span></span><br><span class="line">[root@0019e8bb7355 /]<span class="comment"># vi init.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash </span></span><br><span class="line">/etc/init.d/httpd start </span><br><span class="line">/usr/sbin/sshd -D</span><br><span class="line">[root@0019e8bb7355 /]<span class="comment"># chmod +x init.sh</span></span><br></pre></td></tr></table></figure><p>再次提交为新的镜像：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost admin]<span class="comment"># docker commit 0019e8bb7355 centos6-httpd</span></span><br><span class="line">sha256:bd9f5c339cd8494f82b8cb06396446143824f819c59c9b971687f6a9193c718a</span><br></pre></td></tr></table></figure><p>启动镜像，做好端口映射。并在浏览器中输入宿主机的ip地址进行测试访问：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost admin]<span class="comment"># docker run -d -p 1222:22 -p 88:88 centos6-httpd /init.sh</span></span><br><span class="line">ecbc482a781975538e7c83763fb1573af811a5baf2bc7c93de176ebd5576f407</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/2022/12/06/Docker%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2%E5%9F%BA%E7%A1%80/2.png"></p><h2 id="docker容器连接">Docker容器连接</h2><p>容器中可以运行一些网络应用，要让外部也可以访问这些应用，可以通过<code>-p</code>或<code>-P</code>参数来指定端口映射。下面来实现通过端口连接到一个docker容器。</p><h3 id="网络端口映射">网络端口映射</h3><p>使用-P绑定端口号后，使用docker ps可以看到容器端口5000绑定主机端口32770</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost admin]<span class="comment"># docker run -d -p 32770:5000 training/webapp python app.py</span></span><br><span class="line">14a465d810df4e782f84c4e1ade99fd56f5e237c3de80d8f0c77dc7c3e642696</span><br><span class="line">[root@localhost admin]<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS                     NAMES</span><br><span class="line">14a465d810df        training/webapp     <span class="string">&quot;python app.py&quot;</span>     13 seconds ago      Up 12 seconds       0.0.0.0:32770-&gt;5000/tcp   angry_bassi</span><br></pre></td></tr></table></figure><p>此外，还可以指定容器绑定的网络地址，如绑定127.0.0.1。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost admin]<span class="comment"># docker run -d -p 127.0.0.1:5001:5000 training/webapp python app.py</span></span><br><span class="line">6124b2108719c7e18b8b35992a06b3f66036ad0b951744bcfc1ca17158c2b6e3</span><br><span class="line">[root@localhost admin]<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS                      NAMES</span><br><span class="line">6124b2108719        training/webapp     <span class="string">&quot;python app.py&quot;</span>     6 seconds ago       Up 4 seconds        127.0.0.1:5001-&gt;5000/tcp   keen_sammet</span><br><span class="line">998f4a68770c        training/webapp     <span class="string">&quot;python app.py&quot;</span>     4 minutes ago       Up 4 minutes        0.0.0.0:32770-&gt;5000/tcp    angry_bassi</span><br></pre></td></tr></table></figure><p>这样便可以通过访问127.0.0.1:5001来访问容器的5000端口。这里默认都是绑定tcp端口，<strong>若要绑定UDP端口，则需要在端口后面加上/udp。</strong></p><h3 id="docker容器互联">Docker容器互联</h3><p>端口映射并不是唯一把docker连接到另一个容器的方法。docker有一个连接系统允许将多个容器连接在一起，共享连接信息。docker连接会创建一个父子关系，其中父容器可以看到子容器的信息。</p><h4 id="容器命名">容器命名</h4><p>当要创建一个容器时，docker会自动对他进行命名，此外也可以使用--name标识来命名容器。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost admin]<span class="comment"># docker run -d -P --name runoob training/webapp python app.py</span></span><br><span class="line">561d0028ee9aafe9d014340ad8cecbaf7f5e395f05432e3bd149c797e5dd5f13</span><br><span class="line">[root@localhost admin]<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS                      NAMES</span><br><span class="line">561d0028ee9a        training/webapp     <span class="string">&quot;python app.py&quot;</span>     5 seconds ago       Up 4 seconds        0.0.0.0:32771-&gt;5000/tcp    runoob</span><br></pre></td></tr></table></figure><h4 id="link参数连接容器"><code>--link参数</code>连接容器</h4><p>使用<code>--link</code>参数可以让容器之间安全的进行交互。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建一个新的数据库容器</span></span><br><span class="line">[root@localhost admin]<span class="comment"># docker run -d --name db training/postgres</span></span><br><span class="line">Unable to find image <span class="string">&#x27;training/postgres:latest&#x27;</span> locally</span><br><span class="line">latest: Pulling from training/postgres</span><br><span class="line">a3ed95caeb02: Pull complete </span><br><span class="line">6e71c809542e: Pull complete </span><br><span class="line">2978d9af87ba: Pull complete </span><br><span class="line">e1bca35b062f: Pull complete </span><br><span class="line">500b6decf741: Pull complete </span><br><span class="line">74b14ef2151f: Pull complete </span><br><span class="line">7afd5ed3826e: Pull complete </span><br><span class="line">3c69bb244f5e: Pull complete </span><br><span class="line">d86f9ec5aedf: Pull complete </span><br><span class="line">010fabf20157: Pull complete </span><br><span class="line">Digest: sha256:a945dc6dcfbc8d009c3d972931608344b76c2870ce796da00a827bd50791907e</span><br><span class="line">Status: Downloaded newer image <span class="keyword">for</span> training/postgres:latest</span><br><span class="line">ef6af7333f0af9302cc6935d48be863ba2db0fdb2c56eacf42c074aa62982b12</span><br><span class="line"><span class="comment">#然后创建一个新的web容器，并将他连接到db容器</span></span><br><span class="line">[root@localhost admin]<span class="comment"># docker run -d -P --name web --link db:db training/webapp python app.py</span></span><br><span class="line">62888e6365e6551d2ceb6a6ddf7afcd39e861119f97b691b5116dba8e250e444</span><br><span class="line">[root@localhost admin]<span class="comment"># </span></span><br></pre></td></tr></table></figure><p>此时db容器和web容器建立了互联关系。</p><p><code>--link</code>参数的格式为<code>--link name:alias</code>,其中<code>name</code>是要链接的容器的名称，<code>alias</code>是这个连接的别名。</p><p>此时使用<code>docker ps</code>来查看容器的连接：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost admin]<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                     NAMES</span><br><span class="line">62888e6365e6        training/webapp     <span class="string">&quot;python app.py&quot;</span>          4 minutes ago       Up 4 minutes        0.0.0.0:32769-&gt;5000/tcp   web</span><br><span class="line">ef6af7333f0a        training/postgres   <span class="string">&quot;su postgres -c &#x27;/us…&quot;</span>   7 minutes ago       Up 7 minutes        5432/tcp                  db</span><br></pre></td></tr></table></figure><p>Docker在两个互联的容器之间创建了一个安全隧道，而且不用映射他们的端口到宿主主机上、在启动db容器的时候并没有使用<code>-p</code>和<code>-P</code>标记，从而避免了暴露数据库端口到外部网络上的可能。</p><p>Docker通过2种方式为容器公开连接信息：</p><ul><li>环境变量</li><li>更新<code>/etc/hosts</code>文件</li></ul><p>使用<code>env</code>命令来查看web容器的环境变量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost admin]<span class="comment"># docker run --rm --name web2 --link db:db training/webapp env</span></span><br><span class="line">PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin</span><br><span class="line">HOSTNAME=1621d6dd6804</span><br><span class="line">DB_PORT=tcp://172.17.0.2:5432</span><br><span class="line">DB_PORT_5432_TCP=tcp://172.17.0.2:5432</span><br><span class="line">DB_PORT_5432_TCP_ADDR=172.17.0.2</span><br><span class="line">DB_PORT_5432_TCP_PORT=5432</span><br><span class="line">DB_PORT_5432_TCP_PROTO=tcp</span><br><span class="line">DB_NAME=/web2/db</span><br><span class="line">DB_ENV_PG_VERSION=9.3</span><br><span class="line">HOME=/root</span><br><span class="line"></span><br><span class="line"><span class="comment">#DB_开头的环境变量是供web容器连接db容器使用，前缀采用大写的连接别名</span></span><br></pre></td></tr></table></figure><p>除了环境变量，Docker还添加host信息到父容器的<code>/etc/hosts</code>的文件。下面是父容器web的hosts文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost admin]<span class="comment"># docker run -t -i --rm --link db:db training/webapp /bin/bash</span></span><br><span class="line">root@5f57b7dcc730:/opt/webapp<span class="comment"># cat /etc/hosts</span></span><br><span class="line">127.0.0.1localhost</span><br><span class="line">::1localhost ip6-localhost ip6-loopback</span><br><span class="line">fe00::0ip6-localnet</span><br><span class="line">ff00::0ip6-mcastprefix</span><br><span class="line">ff02::1ip6-allnodes</span><br><span class="line">ff02::2ip6-allrouters</span><br><span class="line">172.17.0.2db ef6af7333f0a</span><br><span class="line">172.17.0.45f57b7dcc730</span><br><span class="line"></span><br><span class="line"><span class="comment">#这里有2个host，第一个是web容器，web容器用id作为它的主机名。第二个是db容器的ip和主机名</span></span><br></pre></td></tr></table></figure><p>在web容器中安装ping命令来测试是否跟db容器的连通：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@5f57b7dcc730:/opt/webapp<span class="comment"># apt-get install -yqq inetutils-ping</span></span><br><span class="line">root@5f57b7dcc730:/opt/webapp<span class="comment"># ping db</span></span><br><span class="line">PING db (172.17.0.2): 56 data bytes</span><br><span class="line">64 bytes from 172.17.0.2: icmp_seq=0 ttl=64 time=0.740 ms</span><br><span class="line">64 bytes from 172.17.0.2: icmp_seq=1 ttl=64 time=0.089 ms</span><br><span class="line">64 bytes from 172.17.0.2: icmp_seq=2 ttl=64 time=0.075 ms</span><br></pre></td></tr></table></figure><p>用ping来测试db容器，它会解析成172.17.0.2。</p><p>注意：官方的Ubuntu镜像默认没有安装ping，因此需要自行安装。</p><p>用户可以链接多个父容器到子容器，比如可以链接多个web到db容器上。</p><h4 id="通过局域网络连接容器">通过局域网络连接容器</h4><p>由于 centos-ssh镜像已失效，因此，上述步骤更新为如下：</p><ul><li><p>创建名为t-net的网络</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost admin]<span class="comment"># docker network create -d bridge t-net </span></span><br><span class="line"><span class="comment">#其中-d表示网络类型，默认为bridge</span></span><br><span class="line"><span class="comment"># 列出当前主机下所有网络</span></span><br><span class="line">[root@localhost admin]<span class="comment"># docker network ls</span></span><br><span class="line">NETWORK ID     NAME               DRIVER    SCOPE</span><br><span class="line"></span><br><span class="line">fee646ecddfa   t-net              bridge    <span class="built_in">local</span></span><br><span class="line">ebdcdb71d1ba   test-net           bridge    <span class="built_in">local</span></span><br></pre></td></tr></table></figure></p></li><li><p>打开一个终端，基于镜像centos:7启动容器app1，并将容器app1加入到网络t-net中，进入到容器app1里：</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost admin]<span class="comment"># docker run -it --name app1 --network t-net centos:7</span></span><br><span class="line">Unable to find image <span class="string">&#x27;centos:7&#x27;</span> locally</span><br><span class="line">7: Pulling from library/centos</span><br><span class="line">2d473b07cdd5: Pull complete </span><br><span class="line">Digest: sha256:9d4bcbbb213dfd745b58be38b13b996ebb5ac315fe75711bd618426a630e0987</span><br><span class="line">Status: Downloaded newer image <span class="keyword">for</span> centos:7</span><br><span class="line">[root@0ab7505ff23e /]<span class="comment"># </span></span><br></pre></td></tr></table></figure></p></li><li><p>另外打开一个终端，基于镜像centos:7启动容器app2，并将容器app2也加入到网络t-net中，进入到容器app2里：</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost admin]<span class="comment"># docker run -it --name app2 --network t-net centos:7</span></span><br><span class="line">[root@6a32efbb3dbe /]<span class="comment"># </span></span><br></pre></td></tr></table></figure></p></li><li><p>在容器app1中<code>ping app2</code>,在容器app2中<code>ping app1</code>（注意区分两个终端）：</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@0ab7505ff23e /]<span class="comment"># ping app2</span></span><br><span class="line">PING app2 (172.20.0.3) 56(84) bytes of data.</span><br><span class="line">64 bytes from app2.t-net (172.20.0.3): icmp_seq=1 ttl=64 time=0.045 ms</span><br><span class="line">64 bytes from app2.t-net (172.20.0.3): icmp_seq=2 ttl=64 time=0.064 ms</span><br><span class="line">^C</span><br><span class="line">--- app2 ping statistics ---</span><br><span class="line">2 packets transmitted, 2 received, 0% packet loss, time 1000ms</span><br><span class="line">rtt min/avg/max/mdev = 0.045/0.054/0.064/0.012 ms</span><br><span class="line"></span><br><span class="line">[root@6a32efbb3dbe /]<span class="comment"># ping app1</span></span><br><span class="line">PING app1 (172.20.0.2) 56(84) bytes of data.</span><br><span class="line">64 bytes from app1.t-net (172.20.0.2): icmp_seq=1 ttl=64 time=0.092 ms</span><br><span class="line">64 bytes from app1.t-net (172.20.0.2): icmp_seq=2 ttl=64 time=0.214 ms</span><br><span class="line">64 bytes from app1.t-net (172.20.0.2): icmp_seq=3 ttl=64 time=0.077 ms</span><br><span class="line">^C</span><br><span class="line">--- app1 ping statistics ---</span><br><span class="line">3 packets transmitted, 3 received, 0% packet loss, time 2002ms</span><br><span class="line">rtt min/avg/max/mdev = 0.077/0.127/0.214/0.062 ms</span><br></pre></td></tr></table></figure></p></li><li><p><strong>以上结果则表示0丢包，容器之间能够正常通讯。</strong></p></li></ul><h2 id="docker仓库管理">Docker仓库管理</h2><p>仓库是集中存放镜像的地方，目前Docker官方维护了一个公共仓库Docker Hub，大部分需求的镜像都可以通过在Docker Hub中直接找到。</p><h3 id="登录和登出">登录和登出</h3><p>若还没有Docker账号，可在 <a href="https://hub.docker.com/">https://hub.docker.com</a> 上免费注册一个。然后输入用户名和密码登录，登录成功后便可以从Docker hub上拉去自己账号下的全部镜像。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost admin]<span class="comment"># docker login</span></span><br><span class="line">Login with your Docker ID to push and pull images from Docker Hub. If you don<span class="string">&#x27;t have a Docker ID, head over to https://hub.docker.com to create one.</span></span><br><span class="line"><span class="string">Username: tangmenjue</span></span><br><span class="line"><span class="string">Password: </span></span><br><span class="line"><span class="string">Login Succeeded</span></span><br></pre></td></tr></table></figure><p>使用<code>docker logout</code>命令可以登出Docker hub。</p><h3 id="拉取镜像">拉取镜像</h3><p>使用<code>docker search</code>命令可以查找官方仓库中的镜像，并利用<code>docker pull</code>命令将其下载到本地，例如要下载ubuntu镜像，操作如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost admin]<span class="comment"># docker search ubuntu</span></span><br><span class="line">NAME                             DESCRIPTION                                     STARS               OFFICIAL            AUTOMATED</span><br><span class="line">ubuntu                           Ubuntu is a Debian-based Linux operating sys…   15312               [OK]                </span><br><span class="line">websphere-liberty                WebSphere Liberty multi-architecture images …   290                 [OK]                </span><br><span class="line">ubuntu-upstart                   DEPRECATED, as is Upstart (find other proces…   112                 [OK]                </span><br><span class="line">neurodebian                      NeuroDebian provides neuroscience research s…   97                  [OK]                </span><br><span class="line">ubuntu/nginx                     Nginx, a high-performance reverse proxy &amp; we…   69                                      </span><br><span class="line">open-liberty                     Open Liberty multi-architecture images based…   56                  [OK]                </span><br><span class="line">ubuntu/apache2                   Apache, a secure &amp; extensible open-source HT…   50                                      </span><br><span class="line">ubuntu-debootstrap               DEPRECATED; use <span class="string">&quot;ubuntu&quot;</span> instead                49                  [OK]                </span><br><span class="line">...</span><br><span class="line">[root@localhost admin]<span class="comment"># docker pull ubuntu</span></span><br><span class="line">Using default tag: latest</span><br><span class="line">latest: Pulling from library/ubuntu</span><br><span class="line">7b1a6ab2e44d: Pull complete </span><br><span class="line">Digest: sha256:626ffe58f6e7566e00254b638eb7e0f3b11d4da9675088f4781a50ae288f3322</span><br><span class="line">Status: Downloaded newer image <span class="keyword">for</span> ubuntu:latest</span><br></pre></td></tr></table></figure><h3 id="推送镜像">推送镜像</h3><p>用户登录后，可以通过<code>docker push</code>命令将自己的镜像推送到Docker Hub，如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看目前已有的镜像</span></span><br><span class="line">root@localhost admin]<span class="comment"># docker image ls</span></span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">centos              latest              5d0da3dc9764        14 months ago       231MB</span><br><span class="line">centos              6.7                 9f1de3c6ad53        3 years ago         191MB</span><br><span class="line">centos              6.8                 82f3b5f3c58f        3 years ago         195MB</span><br><span class="line">ubuntu              15.10               9b9cb95443b5        6 years ago         137MB</span><br><span class="line">training/webapp     latest              6fae60ef3446        7 years ago         349MB</span><br><span class="line">training/postgres   latest              6fa973bb3c26        8 years ago         365MB</span><br><span class="line"><span class="comment">#给ubuntu:15.10镜像打上标签，以下的tangmenjue都要替换成自己的Docker账号用户名</span></span><br><span class="line">[root@localhost admin]<span class="comment"># docker tag ubuntu:15.10 tangmenjue/ubuntu:15.10</span></span><br><span class="line"><span class="comment">#查看镜像的变化</span></span><br><span class="line">[root@localhost admin]<span class="comment"># docker image ls</span></span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">centos              latest              5d0da3dc9764        14 months ago       231MB</span><br><span class="line">centos              6.7                 9f1de3c6ad53        3 years ago         191MB</span><br><span class="line">centos              6.8                 82f3b5f3c58f        3 years ago         195MB</span><br><span class="line">ubuntu              15.10               9b9cb95443b5        6 years ago         137MB</span><br><span class="line">tangmenjue/ubuntu   15.10               9b9cb95443b5        6 years ago         137MB</span><br><span class="line">training/webapp     latest              6fae60ef3446        7 years ago         349MB</span><br><span class="line">training/postgres   latest</span><br><span class="line"></span><br><span class="line"><span class="comment">#将自己的镜像推送到Docker Hub</span></span><br><span class="line"></span><br><span class="line">[root@localhost admin]<span class="comment"># docker push tangmenjue/ubuntu:15.10</span></span><br><span class="line">The push refers to repository [docker.io/tangmenjue/ubuntu]</span><br><span class="line">98d59071f692: Pushed </span><br><span class="line">af288f00b8a7: Pushed </span><br><span class="line">4b955941a4d0: Mounted from library/ubuntu </span><br><span class="line">f121afdbbd5d: Pushed </span><br><span class="line">15.10: digest: sha256:cc56b237986f2b9282f058cc7875ff5e9d0d9081934c8982ea1ec21288eeefeb size: 1150</span><br><span class="line">[root@localhost admin]<span class="comment"># docker search tangmenjue/ubuntu</span></span><br><span class="line">NAME                DESCRIPTION         STARS               OFFICIAL            AUTOMATED</span><br><span class="line">tangmenjue/ubuntu                       0                               </span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Docker,应用部署</summary>
    
    
    
    <category term="Docker" scheme="http://tangmenjue.top/categories/Docker/"/>
    
    <category term="学习笔记" scheme="http://tangmenjue.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="Docker" scheme="http://tangmenjue.top/tags/Docker/"/>
    
    <category term="应用部署" scheme="http://tangmenjue.top/tags/%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2/"/>
    
  </entry>
  
</feed>
